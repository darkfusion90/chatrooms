{"version":3,"sources":["reducers/serverReducer.js","reducers/notificationReducer.js","reducers/userReducer.js","reducers/modalReducer.js","reducers/index.js","constants/actionConstants.js","reducers/roomReducer.js","components/Dropdown/index.js","server-communication/httpServer.js","containers/UserDropdownInfo/index.js","actions/logoutUser.js","components/NotificationContainer/NotificationIcon/index.js","components/NotificationContainer/NotificationListItem/index.js","components/NotificationContainer/index.js","components/Header/index.js","components/Layout/index.js","actions/showModal.js","actions/hideModal.js","components/LandingPage/index.js","components/errors/ServerConnectionFailed/index.js","components/errors/PageNotFound/index.js","components/ToggleablePasswordField/index.js","components/forms/LoginForm/index.js","components/forms/LoginForm/validate.js","components/Alerts/DismissibleAlert.js","containers/LoginContainer/index.js","actions/loginUser.js","constants/serverEventConstants.js","server-communication/socketServer.js","components/forms/RegistrationForm/RegistrationForm.js","components/forms/RegistrationForm/asyncValidate.js","components/forms/RegistrationForm/validate.js","containers/RegisterContainer/index.js","actions/registerUser.js","helpers/convertISODateToReadableString.js","components/RoomListItem/index.js","components/ButtonWithLeadingIcon/index.js","containers/RoomListItemContainer/RoomListItemActionsContainer/index.js","containers/RoomListItemContainer/index.js","components/RoomList/index.js","containers/RoomListContainer/index.js","helpers/logger.js","actions/fetchPublicRooms.js","components/TextInputWordWrap/index.js","components/forms/ChatMessageForm/index.js","components/Message/index.js","containers/MessageContainer/index.js","containers/ChatWindowContainer/colors.js","containers/ChatWindowContainer/index.js","components/RoomInfoHeader/index.js","components/Room/index.js","components/errors/Forbidden/index.js","helpers/sendMessage.js","containers/RoomContainer/index.js","containers/RoomAndRoomListWrapperContainer/index.js","components/App/index.js","actions/updateUser.js","containers/AppContainer/index.js","actions/connectToServer.js","actions/createNotification.js","components/modals/GenericModal.js","actions/createRoom.js","components/forms/CreateRoomForm/index.js","components/forms/CreateRoomForm/validate.js","components/modals/CreateRoomModal.js","actions/tryJoiningRoom.js","components/modals/JoinRoomModal.js","components/forms/DeleteRoomForm/index.js","components/modals/DeleteRoomModal.js","actions/deleteRoom.js","containers/ModalContainer/index.js","index.js"],"names":["INITIAL_STATE","connected","length","data","isLoggedIn","user","isModalOpen","modalName","modalProps","combineReducers","state","action","type","payload","serverConnection","rooms","_","omit","notifications","id","metadata","console","log","form","formReducer","modal","props","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","Title","as","title","Content","menu","triggerComponent","axios","Axios","create","withCredentials","registerUser","username","password","confirmPassword","onRequestFulfilled","onRequestRejected","post","then","loginUser","getRoom","roomId","get","createRoom","roomName","roomType","deleteRoom","delete","joinRoom","UserDropdownInfo","onLogoutButtonClick","logoutUser","renderTriggerComponent","NavItem","className","icon","faUser","size","renderTitle","style","fontWeight","renderMenu","Button","variant","onClick","Dropdown","this","React","Component","connect","dispatch","a","async","response","visibility","shouldShowBadge","faBell","faIdBadge","CustomItem","forwardRef","ref","children","NotificationListItem","notification","DropdownItem","NotificationContainer","Object","keys","map","key","NotificationIcon","getDropdownMenu","getWrappedNotificationIcon","backgroundColor","isUserLoggedIn","Navbar","collapseOnSelect","expand","sticky","Container","Brand","to","Nav","Layout","showModal","hideModal","ServerConnectionFailed","PageNotFound","ToggleablePasswordField","formProps","error","useState","passwordVisible","setPasswordVisibility","FormLabel","label","InputGroup","FormControl","input","Append","cursor","Text","faEye","faEyeSlash","display","Feedback","renderField","meta","formControlProps","touched","pristine","hasErrors","isInvalid","isValid","getFormControlProps","Form","Label","reduxForm","validate","value","errors","onSubmit","handleSubmit","onFormSubmit","FormGroup","controlId","Field","component","name","placeholder","shouldShowDismissIcon","dismissAction","Alert","show","onClose","onDismiss","dismissible","Heading","heading","body","LoginContainer","hasLoginError","errorReason","showErrorAlert","onLoginFailure","setState","reason","formValues","renderAppropriateContentIfRedirect","locationState","location","isRedirectFromSuccessfulRegister","DismissibleAlert","onFailureCallback","socket","openSocket","autoConnect","connectToServer","onConnectionFailed","on","callback","emit","events","asyncValidating","isAsyncValidationError","getPropsForFormControl","values","hasPasswordMismatch","errMsg","asyncValidate","Promise","resolve","reject","status","asyncChangeFields","submitting","invalid","registerButtonDisabled","registerButtonStyle","noValidate","disabled","RegisterContainer","onRegistrationFailed","renderAppropriateRedirect","pathname","isUserRegistered","RegistrationForm","isRegistered","isoDate","argDate","Date","oneDate","otherDate","Error","timeDiffData","differenceInYears","getYear","unit","difference","differenceInMonths","getMonth","differenceInDays","getDate","differenceInHours","getHours","differenceInMinutes","getMinutes","differenceInSeconds","getSeconds","getAppropriateTimeDifferenceData","getAppropriateTimeDifferenceText","RoomListItem","content","footer","ListGroupItem","Card","Body","Footer","ButtonWithLeadingIcon","buttonProps","Row","Col","paddingLeft","whiteSpace","RoomListItemActionsContainer","joinRoomStatus","onJoinButtonClick","room","onError","message","onDeleteButtonClick","Spinner","animation","faCheckCircle","faTimesCircle","roomMember","adminActions","ButtonGroup","memberType","isRoomAdmin","determineJoinButtonMetadata","currentUser","currentUserRoomMemberReference","queryUserId","members","filter","_id","getMemberRefInRoom","getActionsForRoomMember","getActionsForNonRoomMember","RoomListItemContainer","roomOwner","createdBy","roomCreatedBy","roomCreatedAt","convertISODateToReadableString","createdAt","renderRoomMetaData","color","renderComponentTitle","renderComponentContent","renderComponentFooter","RoomList","ListGroup","renderRoomList","logger","loggerKey","args","RoomListContainer","onRoomFetchFail","debug","fetchPublicRooms","onFailure","TextInputWordWrap","autosize","textareaRef","rows","el","FORM_ID","renderMessageField","onSubmitSuccess","reset","sm","md","ld","Group","lg","Message","align","isCurrentUserMessageAuthor","messageAuthor","author","messageArrow","borderAttr","borderRight","borderLeft","renderMessageArrow","Item","border","MessageContainer","userId","messageAlignment","colors","colorChoicesExhausted","usedColors","isColorUsed","randomColor","indexOf","assignRandomly","assignedKeys","forEach","randomIndex","Math","floor","random","getRandomColor","push","ChatWindowContainer","randomAuthorColors","assignRandomColorsToMessageAuthors","messageAuthors","messages","assignRandomColors","messageAuthorColor","RoomInfoHeader","fluid","height","xl","faSignOutAlt","faPlus","Room","onSendMessageButtonClick","marginTop","Forbidden","msg","onSuccess","addMessageToRoom","messageId","sendMessage","RoomContainer","onRoomFetchSuccess","trim","onSendMessageSuccess","onSendMessageFailure","subEvent","registerNewMessageListener","err","renderError","styles","row","marginLeft","marginRight","container","RoomAndRoomListWrapperContainer","match","params","xs","roomListColProps","maxHeight","overflow","renderRoomListCol","roomColProps","renderRoomCol","App","serverConnectionFailed","exact","path","LandingPage","onGetCurrentUserSuccess","userResponse","loginResponse","actionUpdateUser","AppContainer","onServerConnectionFailed","onServerConnected","onServerDisconnected","updateUser","createNotification","actions","GenericModal","Modal","visible","onHide","centered","Header","closeButton","header","attemptCreatingRoom","radioOptions","renderRadioGroup","options","impureFormNoErrors","radioInputs","option","Check","renderRoomNameField","Control","required","CreateRoomModal","alert","showAlert","hideAlert","onCancelButtonClick","getAlertDismissAction","getModalActions","getModalContent","isModalVisible","tryJoiningRoom","onPermissionPending","onPermissionRequestCompleted","JoinRoomModal","inputValue","isFormLoading","event","preventDefault","onJoinRoomPermissionRecieved","inputChanged","e","target","errorMessage","Fragment","loading","onChange","autoFocus","DeleteRoomForm","mustMatchRoomName","undefined","DeleteRoomModal","deleteRoomStatus","onDeleteRoomSuccess","onDeleteRoomFail","getPropsForButtonWithLeadingIcon","deleteRoomForm","syncErrors","getDeleteButtonMeta","buttonWithLeadingIconProps","cancelButtonText","renderDeleteButton","catch","getModalComponentToShow","composeEnhanchers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.900685b2.chunk.js","sourcesContent":["import { CONNECT_TO_SERVER } from '../constants/actionConstants';\n\nconst INITIAL_STATE = {\n    connected: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    if (action.type === CONNECT_TO_SERVER) {\n        return {connected: action.payload.connected}\n    }\n\n    return state;\n}","import { CREATE_NOTIFICATION } from \"../constants/actionConstants\";\n\nconst INITIAL_STATE = { length: 0, data: {} }\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CREATE_NOTIFICATION:\n            const { id, ...metadata } = action.payload;\n            console.log('id: ' + id + \"\\nmetadata:\");\n            console.log(metadata)\n            return {\n                ...state,\n                length: state.length + 1,\n                data: { ...state.data, [id]: metadata }\n            };\n\n        default:\n            return state;\n    }\n}","import { LOGIN, UPDATE_USER, LOGOUT, REGISTER } from '../constants/actionConstants';\n\nconst INITIAL_STATE = {\n    isLoggedIn: false,\n    user: {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return { isLoggedIn: true, user: action.payload.user }\n        case LOGOUT:\n            return INITIAL_STATE\n        case REGISTER:\n            return { isLoggedIn: false, user: action.payload }\n        case UPDATE_USER:\n            //Update only what is provided in payload\n            return { ...state, ...action.payload }\n        default:\n            return state;\n    }\n}","import { SHOW_MODAL, HIDE_MODAL } from '../constants/actionConstants'\n\nconst INITIAL_STATE = {\n    isModalOpen: false,\n    modalName: null,\n    modalProps: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SHOW_MODAL:\n            return {\n                isModalOpen: true,\n                ...action.payload\n            }\n\n        case HIDE_MODAL:\n            return INITIAL_STATE\n\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport serverReducer from './serverReducer';\nimport roomReducer from './roomReducer';\nimport notificationReducer from './notificationReducer';\nimport userReducer from './userReducer';\nimport modalReducer from './modalReducer';\n\nexport default combineReducers({\n    user: userReducer,\n    serverConnection: serverReducer,\n    rooms: roomReducer,\n    notifications: notificationReducer,\n    form: formReducer,\n    modal: modalReducer\n})\n","export const CONNECT_TO_SERVER = \"CONNECT_TO_SERVER\";\nexport const RECIEVE_MESSAGE = \"RECIEVE_MESSAGE\";\n\nexport const FETCH_PUBLIC_ROOMS = 'FETCH_PUBLIC_ROOMS'\nexport const CREATE_ROOM = \"CREATE_ROOM\";\nexport const DELETE_ROOM = 'DELETE_ROOM'\nexport const JOIN_ROOM = \"JOIN_ROOM\";\n\nexport const CREATE_NOTIFICATION = \"CREATE_NOTIFICATION\";\n\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const LOGIN = \"LOGIN\"\nexport const LOGOUT = \"LOGOUT\"\nexport const REGISTER = \"REGISTER\"\n\nexport const SHOW_MODAL = 'SHOW_MODAL'\nexport const HIDE_MODAL = 'HIDE_MODAL'","import _ from 'lodash'\n\nimport { DELETE_ROOM, FETCH_PUBLIC_ROOMS } from '../constants/actionConstants';\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case FETCH_PUBLIC_ROOMS:\n            return action.payload\n        case DELETE_ROOM:\n            return _.omit(state, action.payload)\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\n\nexport default (props) => {\n\n    const renderPopover = () => {\n        return (\n            <Popover>\n                <Popover.Title as=\"h2\">{props.title}</Popover.Title>\n                <Popover.Content>\n                    {props.menu}\n                </Popover.Content>\n            </Popover>\n        )\n    }\n\n    return (\n        <OverlayTrigger\n            trigger=\"click\"\n            placement=\"bottom\"\n            rootClose={true}\n            overlay={renderPopover()}\n        >\n            {props.triggerComponent}\n        </OverlayTrigger>\n    )\n}","import Axios from 'axios';\n\nconst axios = Axios.create({ withCredentials: true })\n\nexport const registerUser = (username, password, confirmPassword, onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/register', { username, password, confirmPassword }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const loginUser = (username, password, onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/login', { username, password }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getUser = (userId, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/user/${userId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getCurrentUser = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/user/').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const checkLoginStatus = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/user/status/login').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const logoutUser = (onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/logout').then(onRequestFulfilled, onRequestRejected);\n}\n\nexport const getRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/rooms/${roomId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getAllRooms = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/rooms').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const createRoom = (roomName, roomType, onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/rooms', { roomName, roomType }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const updateRoom = (roomId, update, onRequestFulfilled, onRequestRejected) => {\n    return axios.patch(`/api/rooms/${roomId}`, update).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const deleteRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.delete(`/api/rooms/${roomId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const joinRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.post(`/api/rooms/${roomId}/members`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getRoomMessage = (roomId, messageId, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/rooms/${roomId}/messages/${messageId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const addMessageToRoom = (roomId, message, onRequestFulfilled, onRequestRejected) => {\n    return axios.post(`/api/rooms/${roomId}/messages`, { message }).then(onRequestFulfilled, onRequestRejected)\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport Dropdown from '../../components/Dropdown';\nimport logoutUser from '../../actions/logoutUser';\nimport './UserDropdownInfo.scss';\n\nclass UserDropdownInfo extends React.Component {\n\n    onLogoutButtonClick = () => {\n        this.props.logoutUser();\n    }\n\n    renderTriggerComponent = () => {\n        return (\n            <NavItem as={\"span\"} className=\"header-icon\" >\n                <FontAwesomeIcon icon={faUser} size=\"lg\" />\n            </NavItem>\n        )\n    }\n\n    renderTitle = () => {\n        return (\n            <span style={{ fontWeight: \"normal\" }}>\n                Signed in as <strong>{this.props.username}</strong>\n            </span>\n        )\n    }\n\n    renderMenu = () => {\n        return (\n            <div className=\"user-info-dropdown-menu-container\">\n                <Button variant=\"outline-secondary\" onClick={this.onLogoutButtonClick}>Log Out</Button>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Dropdown\n                title={this.renderTitle()}\n                menu={this.renderMenu()}\n                triggerComponent={this.renderTriggerComponent()}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { username: state.user.user.username }\n}\n\nexport default connect(mapStateToProps, { logoutUser })(UserDropdownInfo);","import { LOGOUT } from '../constants/actionConstants';\n\nimport { logoutUser } from '../server-communication/httpServer'\n\nexport default () => async dispatch => {\n    logoutUser(() => dispatch({ type: LOGOUT }),({ response }) => console.log('Logout Failed: ', response));\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faIdBadge } from '@fortawesome/free-solid-svg-icons';\n\nexport default (props) => {\n    const visibility = props.shouldShowBadge ? \"visible\" : \"hidden\";\n    return (\n        <FontAwesomeIcon icon={faBell} size=\"lg\">\n            <FontAwesomeIcon icon={faIdBadge} style={{ visibility: visibility }} />\n        </FontAwesomeIcon>\n    );\n}","import React from 'react';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\n\nconst CustomItem = React.forwardRef(({ children, className, style }, ref) => (\n    <div\n        ref={ref}\n        className={className}\n        style={style}\n    >\n        {children}\n    </div>\n))\n\nconst NotificationListItem = (props) => {\n    console.log(\"item. title: \" + props.notification.title)\n    return (\n        <DropdownItem as={CustomItem}>\n            nblah abl blhjljaljgjjkfgklkjkgjkfgjfkgj\n        </DropdownItem>\n    );\n}\n\nexport default NotificationListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NotificationIcon from './NotificationIcon';\nimport NotificationListItem from './NotificationListItem';\nimport Dropdown from '../Dropdown';\n\nimport './NotificationContainer.scss'\n\nclass NotificationContainer extends React.Component {\n    getDropdownMenu() {\n        const { notifications } = this.props;\n        if (notifications.length === 0) {\n            return <div className=\"item\">You don't have any notifications</div>\n        }\n\n        return (\n            Object.keys(notifications.data).map(id => {\n                return (\n                    <div key={id}>\n                        <NotificationListItem\n                            notification={notifications.data[id]}\n                        />\n                        <hr />\n                    </div>\n                );\n            })\n        );\n    }\n\n    getWrappedNotificationIcon() {\n        return (\n            <span className=\"header-icon nav-item\">\n                <NotificationIcon shouldShowBadge={this.props.notifications.length !== 0} />\n            </span>\n        );\n    }\n\n    render() {\n        return (\n            <Dropdown\n                title=\"Notifications\"\n                menu={this.getDropdownMenu()}\n                triggerComponent={this.getWrappedNotificationIcon()}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { notifications: state.notifications }\n}\n\nexport default connect(mapStateToProps, null)(NotificationContainer);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Container from 'react-bootstrap/Container';\nimport UserDropdownInfo from '../../containers/UserDropdownInfo'\nimport NotificationContainer from '../NotificationContainer';\nimport './Header.scss';\n\nconst style = { backgroundColor: \"#23282d\" }\n\nconst renderConditionallyLoggedInStatus = (isUserLoggedIn) => {\n    if (isUserLoggedIn) {\n        return (\n            <UserDropdownInfo />\n        );\n    }\n    else {\n        return (\n            <>\n                <Link to=\"/login\">\n                    <NavItem as={\"span\"} className=\"header-icon\" >\n                        <Button size=\"sm\">Login</Button>\n                    </NavItem>\n                </Link>\n\n                <Link to=\"/register\">\n                    <NavItem as={\"span\"} className=\"header-icon\" >\n                        <Button size=\"sm\">Register</Button>\n                    </NavItem>\n                </Link>\n            </>\n        );\n    }\n}\n\nconst Header = (props) => {\n    return (\n        <Navbar collapseOnSelect style={style} expand=\"large\" sticky=\"top\">\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\" className=\"logo\"> ChatRooms </Link>\n                </Navbar.Brand>\n\n                <Nav className=\"justify-content-end flex-row\">\n                    <div className=\"header-item-container\">\n                        <Link to=\"/rooms\" className=\"header-text\">Rooms</Link>\n                    </div>\n                    <div className=\"header-item-container\">\n                        <NotificationContainer />\n                    </div>\n                    {renderConditionallyLoggedInStatus(props.isUserLoggedIn)}\n                </Nav>\n            </Container>\n        </Navbar>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { isUserLoggedIn: state.user.isLoggedIn }\n}\n\nexport default connect(mapStateToProps, null)(Header);\n\n/*\nLogo credits\n\n<div>\n    Icons made by\n    <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\n        Smashicons\n    </a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n        www.flaticon.com\n    </a>\n</div>\n*/","import React from 'react';\nimport Header from '../Header';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"app\">\n            <Header />\n            <div>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout;\n","import { SHOW_MODAL } from '../constants/actionConstants'\n\nexport default (modalName, modalProps) => {\n    return {\n        type: SHOW_MODAL,\n        payload: { modalName, modalProps }\n    }\n}","import { HIDE_MODAL } from '../constants/actionConstants'\n\nexport default _ => {\n    return { type: HIDE_MODAL }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nimport './LandingPage.scss';\nimport showModal from '../../actions/showModal'\nimport hideModal from '../../actions/hideModal'\n\nconst LandingPage = (props) => {\n    return (\n        <div className=\"landing-page compensate-header\">\n            <div className=\"inner-wrapper\">\n                <p>Welcome to ChatRooms!</p>\n\n                <div className=\"buttons-container\">\n                    <Button onClick={() => props.showModal('CreateRoom')}>\n                        Create Room\n                    </Button>\n\n                    <Button onClick={() => props.showModal('JoinRoom')}>\n                        Join Room\n                    </Button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default connect(null, { showModal, hideModal })(LandingPage);\n","import React from 'react';\n\nimport '../style.scss'\n\nconst ServerConnectionFailed = () => {\n    return (\n        <div className=\"error\">\n            Oops! Unable to connect to the server. Please visit later\n        </div>\n    );\n}\n\nexport default ServerConnectionFailed;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport '../style.scss'\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"error\">\n            Error 404: Page Not Found.\n            <Link to=\"/\">\n                <Button>Home</Button>\n            </Link>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import React, { useState } from 'react';\nimport { InputGroup, FormControl, FormLabel } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nconst ToggleablePasswordField = ({ formProps, error }) => {\n    const [passwordVisible, setPasswordVisibility] = useState(false)\n\n    const togglePasswordVisibility = () => {\n        setPasswordVisibility(!passwordVisible)\n    }\n\n    const renderDummyFormControlForFeedback = () => {\n        return (\n            <FormControl\n                {...formProps}\n                {...formProps.input}\n                style={{display: 'none'}}\n            />\n        )\n    }\n\n    return (\n        <>\n            <FormLabel>{formProps.label}</FormLabel>\n            <InputGroup>\n                <FormControl\n                    {...formProps}\n                    {...formProps.input}\n                    type={passwordVisible ? 'text' : 'password'}\n                />\n                <InputGroup.Append onClick={togglePasswordVisibility} style={{ cursor: 'pointer' }}>\n                    <InputGroup.Text>\n                        <FontAwesomeIcon icon={passwordVisible ? faEye : faEyeSlash} />\n                    </InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n            {renderDummyFormControlForFeedback()}\n            <FormControl.Feedback type=\"invalid\">{error}</FormControl.Feedback>\n        </>\n    )\n}\n\nexport default ToggleablePasswordField;\n","import React from 'react'\nimport { Button, Form, FormControl, FormGroup } from 'react-bootstrap'\nimport { Field, reduxForm } from 'redux-form'\n\nimport ToggleablePasswordField from '../../ToggleablePasswordField'\nimport validate from './validate'\n\nconst getFormControlProps = (formProps) => {\n    const { touched, error, pristine } = formProps.meta\n    const hasErrors = touched && error\n\n    return {\n        ...formProps,\n        ...formProps.input,\n        isInvalid: hasErrors,\n        isValid: !pristine && !hasErrors\n    }\n}\n\nconst renderField = (formProps) => {\n    const { error } = formProps.meta\n    const formControlProps = getFormControlProps(formProps)\n\n    if (formProps.type === 'password') {\n        return <ToggleablePasswordField formProps={formControlProps} error={error} />\n    }\n\n    return (\n        <>\n            <Form.Label>{formProps.label}</Form.Label>\n            <FormControl {...formControlProps} />\n            <FormControl.Feedback type='invalid'>{error}</FormControl.Feedback>\n        </>\n    );\n}\n\nconst LoginForm = (props) => {\n    return (\n        <Form onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <FormGroup controlId=\"formUsernameGroup\">\n                <Field\n                    component={renderField}\n                    name=\"username\"\n                    type=\"text\"\n                    label=\"Enter Username\"\n                    placeholder=\"Example: mitsy_the_cat\"\n                />\n            </FormGroup>\n\n            <FormGroup controlId=\"formPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Enter Password\"\n                    placeholder=\"Password\"\n                />\n            </FormGroup>\n\n            <Button type=\"submit\">Login</Button>\n        </Form>\n    );\n}\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm)","export default (value) => {\n    const errors = {}\n    if(!value.username){\n        errors.username = 'Username is required'\n    }\n    if(!value.password){\n        errors.password = 'Password is required'\n    }\n\n    return errors\n}","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default (props) => {\n    const shouldShowDismissIcon = !props.dismissAction;\n    return (\n        <Alert show={props.show} variant={props.variant} onClose={props.onDismiss} dismissible={shouldShowDismissIcon}>\n            <Alert.Heading>{props.heading}</Alert.Heading>\n            <p>{props.body}</p>\n            <div className='d-flex justify-content-end'>\n                {props.dismissAction && props.dismissAction()}\n            </div>\n        </Alert>\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Alert, Container } from 'react-bootstrap';\n\n\nimport LoginForm from '../../components/forms/LoginForm/'\nimport loginUser from '../../actions/loginUser';\nimport DismissibleAlert from '../../components/Alerts/DismissibleAlert'\n\nimport './style.scss'\n\nclass LoginContainer extends React.Component {\n    state = {\n        hasLoginError: false,\n        errorReason: null,\n        showErrorAlert: false,\n    }\n\n    onLoginFailure = ({ response }) => {\n        this.setState({\n            hasLoginError: true,\n            errorReason: response.data.reason,\n            showErrorAlert: true\n        })\n    }\n\n    onFormSubmit = (formValues) => {\n        this.props.loginUser(\n            formValues.username,\n            formValues.password,\n            this.onLoginFailure\n        );\n    }\n\n    renderAppropriateContentIfRedirect = (props) => {\n        const locationState = props.location.state;\n        if (locationState && locationState.isRedirectFromSuccessfulRegister) {\n            return (\n                <Alert variant=\"success\">\n                    <Alert.Heading>Registration Completed!</Alert.Heading>\n                    <p>Please login to continue</p>\n                </Alert>\n            )\n        }\n    }\n\n    render() {\n        if (this.props.isUserLoggedIn) {\n            return <Redirect to=\"/\" />\n        }\n        else {\n            return (\n                <Container className=\"compensate-header\">\n                    <div className=\"centered-content login-container\">\n                        {this.renderAppropriateContentIfRedirect(this.props)}\n                        <DismissibleAlert\n                            variant=\"danger\"\n                            heading=\"Login Unsuccessful\"\n                            body={this.state.errorReason}\n                            show={this.state.showErrorAlert}\n                            onDismiss={() => this.setState({ showErrorAlert: false })}\n                        />\n                        <LoginForm onFormSubmit={this.onFormSubmit} />\n                    </div>\n                </Container>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isUserLoggedIn: state.user.isLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, { loginUser })(LoginContainer);\n","import { loginUser } from '../server-communication/httpServer'\n\nimport { LOGIN } from '../constants/actionConstants'\n\nconst loginAction = (user) => {\n    return {\n        type: LOGIN,\n        payload: {\n            user: user\n        }\n    }\n}\n\nexport default (username, password, onFailureCallback) => async (dispatch) => {\n    const dispatchLoginAction = (response) => {\n        dispatch(loginAction(response.data))\n    }\n\n    loginUser(username, password, dispatchLoginAction, onFailureCallback);\n}\n","export default {\n    ROOM_EVENT: 'event:room',\n    ROOM_JOIN_PERMISSION_SEND: 'room_join_permission_send',\n    ROOM_JOIN_PERMISSION_RECIEVE: 'room_join_permission_recieve',\n    CONNECT_TO_ROOM: 'connect_to_room',\n    JOIN_ROOM: 'join_room',\n    NEW_USER_IN_ROOM: 'new_user_in_room',\n\n    MESSAGE_EVENT: 'event:message',\n    NEW_MESSAGE: 'send_message',\n\n    USER_EVENT: 'event:user',\n    CHECK_USERNAME: 'check_username'\n}","import openSocket from 'socket.io-client';\nimport events from '../constants/serverEventConstants';\n\nconst socket = openSocket('/', { autoConnect: false });\n\nexport const connectToServer = (onConnectionFailed) => {\n    socket.connect();\n    socket.on('connect_error', onConnectionFailed);\n}\n\nexport const onServerConnected = (callback) => {\n    socket.on('connect', callback)\n}\n\nexport const onServerDisconnected = (callback) => {\n    socket.on('disconnect', callback)\n}\n\nexport const registerNewMessageListener = (roomId, callback) => {\n    socket.on(events.MESSAGE_EVENT, (...args) => {\n        console.log(\"Message Event: \", args)\n        const subEvent = args[0]\n        if (subEvent === events.NEW_MESSAGE) {\n            const data = args[1]\n            if (data.roomId === roomId) {\n                callback(data)\n            }\n        }\n    })\n}\n\nexport const joinRoom = (roomId, callback) => {\n    return socket.emit(events.ROOM_EVENT, events.JOIN_ROOM, roomId, callback);\n}\n\nexport const connectToRoom = (roomId, callback) => {\n    return socket.emit(events.ROOM_EVENT, events.CONNECT_TO_ROOM, roomId, callback)\n}\n\nexport const checkUsername = (username, callback) => {\n    return socket.emit(events.USER_EVENT, events.CHECK_USERNAME, username, callback)\n}\n\nexport const sendMessage = (roomId, messageId) => {\n    return socket.emit(events.MESSAGE_EVENT, events.NEW_MESSAGE, roomId, messageId)\n}","import React from 'react';\nimport { Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport { Field, reduxForm } from 'redux-form';\n\nimport validate from './validate';\nimport { checkUsernameExists, USERNAME_TAKEN_ERROR_MESSAGE } from './asyncValidate';\nimport './style.scss';\nimport ToggleablePasswordField from '../../ToggleablePasswordField';\n\nconst getPropsForFormControl = (formProps) => {\n    const { touched, error, pristine, asyncValidating } = formProps.meta\n    const hasErrors = isAsyncValidationError(error) || (touched && error)\n\n    return {\n        ...formProps,\n        ...formProps.input,\n        className: asyncValidating ? 'loading' : '',\n        isInvalid: hasErrors,\n        isValid: !asyncValidating && !pristine && !hasErrors\n    }\n}\n\nconst renderField = (formProps) => {\n    const { error } = formProps.meta\n    const formControlProps = getPropsForFormControl(formProps)\n\n    if (formProps.type === 'password') {\n        return <ToggleablePasswordField formProps={formControlProps} error={error} />\n    }\n\n    return (\n        <>\n            <Form.Label>{formProps.label}</Form.Label>\n            <FormControl {...formControlProps} />\n            <FormControl.Feedback type=\"invalid\">{error}</FormControl.Feedback>\n        </>\n    );\n}\n\nconst isAsyncValidationError = (error) => {\n    return error === USERNAME_TAKEN_ERROR_MESSAGE\n}\n\nconst RegisterForm = (props) => {\n    const { pristine, submitting, asyncValidating, invalid } = props;\n    const registerButtonDisabled = (pristine || submitting || asyncValidating || invalid);\n\n    const registerButtonStyle = {\n        cursor: registerButtonDisabled ? \"not-allowed\" : \"pointer\"\n    }\n\n    return (\n        <Form id=\"registration-form\" noValidate onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <FormGroup controlId=\"formUsernameGroup\">\n                <Field\n                    component={renderField}\n                    name=\"username\"\n                    type=\"text\"\n                    label=\"Enter Username\"\n                    placeholder=\"Example: mitsy_the_cat\"\n                />\n            </FormGroup>\n            <FormGroup controlId=\"formPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Enter Password\"\n                    placeholder=\"Password\"\n                />\n            </FormGroup>\n\n            <FormGroup controlId=\"formConfirmPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    label=\"Confirm Password\"\n                    placeholder=\"Confirm Password\"\n                />\n            </FormGroup>\n\n            <Button\n                type=\"submit\"\n                form=\"registration-form\"\n                disabled={registerButtonDisabled}\n                style={registerButtonStyle}\n            >\n                Register\n            </Button>\n        </Form >\n    );\n}\n\nexport default reduxForm({\n    form: 'registerForm',\n    validate: validate,\n    asyncValidate: checkUsernameExists,\n    asyncChangeFields: ['username']\n})(RegisterForm)","import { checkUsername } from '../../../server-communication/socketServer'\n\nexport const USERNAME_TAKEN_ERROR_MESSAGE = 'That username is already taken'\n\nexport const checkUsernameExists = (values, _) => {\n    return new Promise((resolve, reject) =>\n        checkUsername(values.username, (response) => {\n            if (response.status === 200) {\n                reject({ 'username': USERNAME_TAKEN_ERROR_MESSAGE })\n            }\n            else {\n                resolve()\n            }\n        })\n    )\n}","const hasPasswordMismatch = (password, confirmPassword) => {\n    return password !== confirmPassword\n}\n\nexport default (values) => {\n    const { username, password, confirmPassword } = values;\n    const errors = {}\n\n    if (!username) {\n        errors.username = \"Username cannot be empty\"\n    }\n    if (!password) {\n        errors.password = \"Password cannot be empty\"\n    }\n    if (!confirmPassword) {\n        errors.confirmPassword = \"Confirm Password cannot be empty\"\n    } else if (hasPasswordMismatch(password, confirmPassword)) {\n        const errMsg = \"Confirm Password and Password must match\"\n        errors.confirmPassword = errMsg\n        errors.password = errMsg\n    }\n\n    return errors\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\n\nimport RegistrationForm from '../../components/forms/RegistrationForm/RegistrationForm';\nimport registerUser from '../../actions/registerUser';\nimport { Redirect } from 'react-router-dom';\n\nclass RegisterContainer extends React.Component {\n\n    onRegistrationFailed = ({ response }) => {\n        console.log(\"Registration failed: \", response)\n    }\n\n    onFormSubmit = (formValues) => {\n        console.log(\"Registration Form Values: \", formValues)\n        this.props.registerUser(\n            formValues.username,\n            formValues.password,\n            formValues.confirmPassword,\n            this.onRegistrationFailed\n        )\n    }\n\n    renderAppropriateRedirect = (isUserLoggedIn) => {\n        if (isUserLoggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        return <Redirect to={{\n            pathname: \"/login\",\n            state: { isRedirectFromSuccessfulRegister: true }\n        }} />\n    }\n\n    render() {\n        if (this.props.isUserLoggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        if (this.props.isUserRegistered) {\n            return this.renderAppropriateRedirect(this.props.isUserLoggedIn)\n        }\n\n        return (\n            <div className=\"centered-content\">\n                <Container>\n                    <RegistrationForm onFormSubmit={this.onFormSubmit} />\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isUserRegistered: state.user.user && state.user.user.isRegistered,\n        isUserLoggedIn: state.user.isLoggedIn\n    }\n}\n\nexport default connect(mapStateToProps, { registerUser })(RegisterContainer);\n","import { REGISTER } from '../constants/actionConstants';\nimport { registerUser } from '../server-communication/httpServer'\n\n\nexport default (username, password, confirmPassword, onRequestRejected) => async (dispatch) => {\n    registerUser(username, password, confirmPassword,\n        (response) => dispatch({ type: REGISTER, payload: response.data }),\n        onRequestRejected\n    )\n}\n","const getAppropriateTimeDifferenceData = (oneDate, otherDate) => {\n    const differenceInYears = oneDate.getYear() - otherDate.getYear()\n    if (differenceInYears > 0) {\n        let unit = differenceInYears > 1 ? 'years' : 'year'\n        return { unit, difference: differenceInYears }\n    }\n\n    const differenceInMonths = oneDate.getMonth() - otherDate.getMonth()\n    if (differenceInMonths > 0) {\n        let unit = differenceInMonths > 1 ? 'months' : 'month'\n        return { unit, difference: differenceInMonths }\n    }\n\n    const differenceInDays = oneDate.getDate() - otherDate.getDate()\n    if (differenceInDays > 0) {\n        let unit = differenceInDays > 1 ? 'days' : 'day'\n        return { unit, difference: differenceInDays }\n    }\n\n    const differenceInHours = oneDate.getHours() - otherDate.getHours()\n    if (differenceInHours > 0) {\n        let unit = differenceInHours > 1 ? 'hrs' : 'hr'\n        return { unit, difference: differenceInHours }\n    }\n\n    const differenceInMinutes = oneDate.getMinutes() - otherDate.getMinutes()\n    if (differenceInMinutes > 0) {\n        let unit = differenceInMinutes > 1 ? 'mins' : 'min'\n        return { unit, difference: differenceInMinutes }\n    }\n\n    const differenceInSeconds = oneDate.getSeconds() - otherDate.getSeconds()\n    if (differenceInSeconds > 0) {\n        let unit = differenceInSeconds > 1 ? 'secs' : 'sec'\n        return { unit, difference: differenceInSeconds }\n    }\n}\n\nconst getAppropriateTimeDifferenceText = (oneDate, otherDate) => {\n    if (oneDate < otherDate) {\n        const errMsg = '[ISODateToReadableString.getAppropriateTimeDifferenceText] First date argument must be greater than the second argument'\n        throw new Error(errMsg)\n    }\n\n    const timeDiffData = getAppropriateTimeDifferenceData(oneDate, otherDate)\n    if (!timeDiffData) {\n        return 'just now'\n    }\n\n    return `${timeDiffData.difference}${timeDiffData.unit} ago`\n}\n\nexport default (isoDate) => {\n    if (!isoDate) {\n        return '<unknown>'\n    }\n\n    const argDate = new Date(isoDate)\n    const todayDate = new Date()\n\n    return getAppropriateTimeDifferenceText(todayDate, argDate)\n}","import React from 'react';\nimport { Card, ListGroupItem } from 'react-bootstrap';\n\nconst RoomListItem = ({ title, content, footer, key }) => {\n    const style = { backgroundColor: '#ededed' }\n\n    return (\n        <ListGroupItem key={key}>\n            <Card className='border-0' style={style}>\n                <Card.Body>\n                    <Card.Title>\n                        {title}\n                    </Card.Title>\n                    {content}\n                </Card.Body>\n                {\n                    footer ? <Card.Footer>{footer}</Card.Footer> : ''\n                }\n            </Card>\n        </ListGroupItem>\n    )\n}\n\nexport default RoomListItem;\n","import React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nconst ButtonWithLeadingIcon = ({ buttonProps, icon, content }) => {\n    return (\n        <Button {...buttonProps}>\n            <Row>\n                <Col>{icon}</Col>\n                <Col style={{ paddingLeft: 0, whiteSpace: 'nowrap' }}>\n                    {content}\n                </Col>\n            </Row>\n        </Button>\n    )\n}\n\nexport default ButtonWithLeadingIcon;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, ButtonGroup, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport ButtonWithLeadingIcon from '../../../components/ButtonWithLeadingIcon'\nimport { joinRoom } from '../../../server-communication/httpServer'\nimport showModal from '../../../actions/showModal'\nimport hideModal from '../../../actions/hideModal'\n\nclass RoomListItemActionsContainer extends React.Component {\n    state = { joinRoomStatus: 'initial' }\n\n    determineJoinButtonMetadata() {\n        let icon, content, variant = 'primary';\n\n        if (this.state.joinRoomStatus === 'pending') {\n            icon = <Spinner animation='border' size='sm' />\n            content = 'Joining...'\n        } else if (this.state.joinRoomStatus === 'success') {\n            icon = <FontAwesomeIcon icon={faCheckCircle} />\n            content = 'Joined'\n            variant = 'success'\n        } else if (this.state.joinRoomStatus === 'fail') {\n            icon = <FontAwesomeIcon icon={faTimesCircle} />\n            content = 'Join Failed'\n            variant = 'danger'\n        }\n\n        return { icon, content, variant }\n    }\n\n    onJoinButtonClick = () => {\n        const onSuccess = () => {\n            this.setState({ joinRoomStatus: 'success' })\n        }\n\n        const onFailure = ({ response }) => {\n            this.setState({ joinRoomStatus: 'fail' })\n            this.props.onError(response.message)\n        }\n\n        const { roomId } = this.props.room\n        joinRoom(roomId, onSuccess, onFailure)\n        this.setState({ joinRoomStatus: 'pending' })\n    }\n\n    onDeleteButtonClick = () => {\n        this.props.showModal('DeleteRoom', { room: this.props.room })\n    }\n\n    getActionsForRoomMember(roomMember, roomId) {\n        const adminActions = <Button variant='danger' onClick={this.onDeleteButtonClick}>Delete</Button>\n\n        const isRoomAdmin = (roomMember) => {\n            return roomMember && roomMember.memberType === 'admin'\n        }\n\n        return (\n            <ButtonGroup>\n                <Link to={`/rooms/${roomId}`} component={Button}>Open</Link>\n                {this.props.isUserLoggedIn && isRoomAdmin(roomMember) ? adminActions : null}\n            </ButtonGroup>\n        )\n    }\n\n    getActionsForNonRoomMember() {\n        console.log('status: ', this.state.joinRoomStatus)\n        if (this.state.joinRoomStatus === 'initial') {\n            return <Button onClick={this.onJoinButtonClick}>Join</Button>\n        }\n\n        const { icon, content, variant } = this.determineJoinButtonMetadata()\n        const buttonProps = { variant, disabled: true }\n        return <ButtonWithLeadingIcon icon={icon} content={content} buttonProps={buttonProps} />\n    }\n\n    render() {\n        const { room, currentUser } = this.props\n        const getMemberRefInRoom = (room, queryUserId) => {\n            return room.members.filter(roomMember => {\n                return roomMember && roomMember.user && roomMember.user._id === queryUserId\n            })\n        }\n\n        if (currentUser) {\n            const currentUserRoomMemberReference = getMemberRefInRoom(room, currentUser._id)[0]\n            if (!currentUserRoomMemberReference) {\n                return this.getActionsForNonRoomMember()\n            } else {\n                return this.getActionsForRoomMember(currentUserRoomMemberReference, room.roomId)\n            }\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { currentUser: state.user.user, isUserLoggedIn: state.user.isLoggedIn }\n}\n\nexport default connect(mapStateToProps, { showModal, hideModal })(RoomListItemActionsContainer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col } from 'react-bootstrap';\n\nimport convertISODateToReadableString from '../../helpers/convertISODateToReadableString';\nimport RoomListItem from '../../components/RoomListItem'\nimport RoomListItemActionsContainer from './RoomListItemActionsContainer';\n\nclass RoomListItemContainer extends React.Component {\n    state = { error: null }\n\n    renderRoomMetaData() {\n        const { room } = this.props\n        const roomOwner = room.createdBy\n        const roomCreatedBy = roomOwner ? roomOwner.username : '<unknown>'\n        const roomCreatedAt = convertISODateToReadableString(room.createdAt)\n\n        return `Created ${roomCreatedAt} by ${roomCreatedBy}`\n    }\n\n    renderComponentContent() {\n        return (\n            <Row>\n                <Col className='d-flex align-items-center'>\n                    <Card.Text>{this.renderRoomMetaData()}</Card.Text>\n                </Col>\n                <Col>\n                    <RoomListItemActionsContainer\n                        room={this.props.room}\n                        onError={(error) => this.setState({ error })}\n                    />\n                </Col>\n            </Row>\n        )\n    }\n\n    renderComponentTitle() {\n        const { room } = this.props\n        return <Link to={`/rooms/${room.roomId}`}>{room.name}</Link>\n    }\n\n    renderComponentFooter() {\n        const { error } = this.state\n        if (!error) {\n            return null\n        }\n        return (\n            <Row>\n                <Col style={{ color: 'red' }}>{error}</Col>\n            </Row>\n        )\n    }\n\n    render() {\n        return (\n            <RoomListItem\n                title={this.renderComponentTitle()}\n                content={this.renderComponentContent()}\n                footer={this.renderComponentFooter()}\n            />\n        )\n    }\n}\n\nexport default RoomListItemContainer;\n","import React from 'react'\nimport RoomListItemContainer from '../../containers/RoomListItemContainer'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nconst renderRoomList = (props) => {\n    return props.rooms.map((room) => <RoomListItemContainer room={room} key={room.roomId}/>)\n}\n\nconst RoomList = (props) => {\n    return <ListGroup variant='flush'>{renderRoomList(props)}</ListGroup>\n}\n\nexport default RoomList;\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport RoomList from '../../components/RoomList';\nimport fetchPublicRooms from '../../actions/fetchPublicRooms'\n\nimport loggerInit from '../../helpers/logger'\n\nconst logger = loggerInit('[RoomListContainer] ')\n\nclass RoomListContainer extends React.Component {\n    componentDidMount() {\n        this.props.fetchPublicRooms(this.onRoomFetchFail)\n    }\n\n    onRoomFetchFail = ({ response }) => {\n        logger.\n        logger.debug('RoomList fetch fail: ', response)\n    }\n\n    render() {\n        console.log(this.props.rooms)\n        return <RoomList rooms={this.props.rooms} />;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { rooms: state.rooms }\n}\n\nexport default connect(mapStateToProps, { fetchPublicRooms })(RoomListContainer);\n","class Logger {\n    constructor(loggerKey) {\n        this.loggerKey = loggerKey\n    }\n\n    debug(...args) {\n        console.log(this.loggerKey, ...args)\n    }\n}\n\nexport default (loggerKey) => {\n    return new Logger(loggerKey)\n}","import { FETCH_PUBLIC_ROOMS } from '../constants/actionConstants'\nimport { getAllRooms } from '../server-communication/httpServer'\n\nexport default (onFailure) => async dispatch => {\n    getAllRooms((response) => {\n        dispatch({ type: FETCH_PUBLIC_ROOMS, payload: response.data })\n    }, onFailure)\n}","import React from 'react';\nimport { FormControl } from 'react-bootstrap'\nimport autosize from 'autosize'\n\nimport './style.scss'\n\nclass TextInputWordWrap extends React.Component {\n\n    componentDidMount() {\n        autosize(this.textareaRef)\n    }\n\n    render() {\n        return (\n            <FormControl\n                {...this.props}\n                {...this.props.input}\n                as='textarea'\n                rows='1'\n                className='text-input-wrap'\n                ref={el => this.textareaRef = el}\n            />\n        )\n    }\n}\n\nexport default TextInputWordWrap;\n","import React from 'react';\nimport { reduxForm, reset, Field } from 'redux-form';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\n\nimport TextInputWordWrap from '../../TextInputWordWrap'\nimport './style.scss'\n\nconst FORM_ID = 'chat-message-form'\n\nconst renderMessageField = (formProps) => {\n    return (\n        <TextInputWordWrap {...formProps} />\n    );\n}\n\nconst ChatMessageForm = (props) => {\n    const onFormSubmit = props.handleSubmit(props.onFormSubmit)\n    return (\n        <Form onSubmit={onFormSubmit} id={FORM_ID}>\n            <Row className='d-flex align-items-center w-100'> \n                <Col sm={10} md={10} ld={10}>\n                    <Form.Group controlId='message' className='w-100 textarea-container'>\n                        <Field\n                            name='message'\n                            placeholder='Type a message...'\n                            type='text'\n                            component={renderMessageField}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col sm={2} md={2} lg={2}>\n                    <Button type='submit' form={FORM_ID}>Send</Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst resetForm = (_/*result*/, dispatch) => {\n    dispatch(reset(FORM_ID))\n}\n\nexport default reduxForm({\n    form: FORM_ID,\n    onSubmitSuccess: resetForm\n})(ChatMessageForm);","import React from 'react'\nimport { ListGroup, Container } from 'react-bootstrap'\n\nimport './style.scss'\n\nconst Message = (props) => {\n    const { message, align, color, isCurrentUserMessageAuthor } = props\n    if (!message) {\n        return null\n    }\n\n    const getMessageAuthor = () => {\n        return isCurrentUserMessageAuthor ? 'You' : message.author && message.author.username ? message.author.username : '<unknown-user>'\n    }\n\n    const renderMessageArrow = () => {\n        const borderAttr = `15px solid ${color}`\n        const style = align === 'left' ? { borderRight: borderAttr } : { borderLeft: borderAttr }\n\n        return <p className={`arrow ${align}`} style={style} />\n    }\n\n    const messageAuthor = getMessageAuthor()\n    const messageArrow = renderMessageArrow()\n    return (\n        <ListGroup.Item key={message.id} style={{ border: \"none\" }}>\n            <Container className={`message float-${align}`} style={{ backgroundColor: color }}>\n                {align === 'left' && messageArrow}\n                {\n                    messageAuthor &&\n                    <p>\n                        <strong>{messageAuthor}</strong>\n                    </p>\n                }\n                <p>{message.data}</p>\n                {align === 'right' && messageArrow}\n            </Container>\n\n        </ListGroup.Item>\n    )\n}\n\nexport default Message","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport Message from '../../components/Message'\n\nclass MessageContainer extends React.Component {\n    isCurrentUserMessageAuthor = () => {\n        const { message, userId } = this.props\n        return message && message.author && message.author._id === userId\n    }\n\n    render() {\n        const { message, color } = this.props\n        if (!message) {\n            return null\n        }\n\n        const messageAlignment = this.isCurrentUserMessageAuthor() ? 'right' : 'left'\n\n        return (\n            <Message\n                message={message}\n                align={messageAlignment}\n                color={color}\n                isCurrentUserMessageAuthor={this.isCurrentUserMessageAuthor()}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { userId: state.user.user._id }\n}\n\nexport default connect(mapStateToProps, null)(MessageContainer);\n","const colors = [\n    '#fff07c',\n    '#80ff72',\n    '#7ee8fa',\n    '#eec0c6',\n    '#e58c8a'\n]\n\nconst colorChoicesExhausted = (usedColors) => {\n    return colors.length === usedColors.length\n}\n\nconst isColorUsed = (usedColors, randomColor) => {\n    return usedColors.indexOf(randomColor) !== -1\n}\n\nconst getRandomColor = (usedColors) => {\n    let randomColor;\n    do {\n        let randomIndex = Math.floor(Math.random() * colors.length)\n        randomColor = colors[randomIndex]\n    } while (isColorUsed(usedColors, randomColor) && !colorChoicesExhausted(usedColors));\n    return randomColor\n}\n\nconst assignRandomly = (keys) => {\n    const assignedKeys = {}\n    const usedColors = []\n    keys.forEach(key => {\n        if (!assignedKeys[key]) {\n            const randomColor = getRandomColor(usedColors)\n            assignedKeys[key] = randomColor\n            if (!colorChoicesExhausted(usedColors)) usedColors.push(randomColor)\n        }\n    })\n\n    return assignedKeys\n}\n\nexport default assignRandomly","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nimport MessageContainer from '../../containers/MessageContainer';\nimport assignRandomColors from './colors'\nimport './style.scss';\n\nclass ChatWindowContainer extends React.Component {\n    state = { randomAuthorColors: [] }\n\n    componentDidMount() {\n        const { room } = this.props\n        if (room) {\n            this.setState({\n                randomAuthorColors: this.assignRandomColorsToMessageAuthors(room)\n            })\n        }\n    }\n\n    assignRandomColorsToMessageAuthors(room) {\n        const messageAuthors = room.messages.map(message => message.author && message.author._id)\n        return assignRandomColors(messageAuthors)\n    }\n\n    render() {\n        const { room } = this.props\n\n        if (!room) {\n            return null\n        }\n\n        return (\n            <ListGroup className='chat-container pre-scrollable' variant=\"flush\">\n                {\n                    room.messages.map(message => {\n                        const messageAuthorColor = this.state.randomAuthorColors[message.author && message.author._id]\n                        return <MessageContainer\n                            color={messageAuthorColor}\n                            roomId={room.roomId}\n                            message={message}\n                            key={message && message._id}\n                        />\n                    })\n                }\n            </ListGroup>\n        )\n    }\n}\n\nexport default ChatWindowContainer;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faPlus} from '@fortawesome/free-solid-svg-icons'\nimport { Container, Col, Row } from 'react-bootstrap/';\n\nimport './style.scss'\n\nconst RoomInfoHeader = ({ room }) => {\n    if (!room) return null\n    console.log('room: ', room)\n    return (\n        <Container fluid>\n            <Row style={{ backgroundColor: '#ededed', height: '3.5vw' }}>\n                <Col>\n                    <span className='room-name'><strong>{room.name}</strong></span>\n                </Col>\n                <Col sm={2} lg={2} md={2} xl={2}>\n                    <Row>\n                        <Col sm={4} lg={4} md={4} xl={4} className=\"col-4\">\n                            <FontAwesomeIcon icon={faSignOutAlt} />\n                        </Col>\n                        <Col sm={4} lg={4} md={4} xl={4} className=\"col-4\">\n                            <FontAwesomeIcon icon={faPlus} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default RoomInfoHeader","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport ChatMessageForm from '../../components/forms/ChatMessageForm';\nimport ChatWindowContainer from '../../containers/ChatWindowContainer'\n\nimport RoomInfoHeader from '../RoomInfoHeader';\n\nconst Room = (props) => {\n    const { room, onSendMessageButtonClick } = props\n    return (\n        <div style={{ border: '1px solid red', marginTop: '1vh', height: '100%' }}>\n            <RoomInfoHeader room={room} />\n            <Container fluid className='d-flex flex-column justify-content-center' style={{ height: '100%' }}>\n                <Row>\n                    <Col>\n                        <ChatWindowContainer room={room} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col style={{ backgroundColor: '#ededed' }}>\n                        <ChatMessageForm onFormSubmit={onSendMessageButtonClick} />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\n\nexport default Room;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport '../style.scss'\n\nconst Forbidden = (props) => {\n    const msg = props.msg || 'You do not have the permissions required to view this page'\n    return (\n        <div className=\"error\">\n            {msg}\n            <Link to=\"/\">\n                <Button>Home</Button>\n            </Link>\n        </div>\n    );\n}\n\nexport default Forbidden;\n","import { sendMessage } from '../server-communication/socketServer'\nimport { addMessageToRoom } from '../server-communication/httpServer'\n\nexport default (roomId, message, onSuccess, onFailure) => {\n    addMessageToRoom(roomId, message, (response) => {\n        sendMessage(roomId, response._id)\n        onSuccess(response)\n    }, onFailure)\n}","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nimport Room from '../../components/Room';\nimport Forbidden from '../../components/errors/Forbidden'\nimport PageNotFound from '../../components/errors/PageNotFound'\nimport { getRoom } from '../../server-communication/httpServer'\nimport { connectToRoom, registerNewMessageListener } from '../../server-communication/socketServer'\nimport sendMessage from '../../helpers/sendMessage'\n\nclass RoomContainer extends React.Component {\n    state = {\n        room: null,\n        error: null\n    }\n\n    componentDidMount() {\n        const { roomId } = this.props;\n        registerNewMessageListener(roomId, (data) => {\n            console.log(\"new message: \", data)\n            getRoom(roomId, this.onRoomFetchSuccess, this.onRoomFetchFail)\n        })\n        getRoom(roomId, this.onRoomFetchSuccess, this.onRoomFetchFail)\n    }\n\n    componentDidUpdate() {\n        const { room } = this.state\n        if (room) {\n            connectToRoom(room.roomId, function (err) {\n                console.log('room connect callback: ', err)\n            })\n        }\n    }\n\n    onRoomFetchSuccess = (response) => {\n        this.setState({ room: response.data, error: null })\n    }\n\n    onRoomFetchFail = ({ response }) => {\n        this.setState({ error: response })\n    }\n\n    renderError() {\n        const { status } = this.state.error;\n        if (status === 403) {\n            return <Forbidden msg='User not allowed' />\n        }\n        else if (status === 404) {\n            return <PageNotFound />\n        }\n\n        return <div>Unexpected Error</div>\n    }\n\n    onSendMessageButtonClick = (formValues) => {\n        const { message } = formValues\n        if (!message || message.trim().length === 0) {\n            return null\n        } else {\n            const { room } = this.state\n            sendMessage(room.roomId, message, this.onSendMessageSuccess, this.onSendMessageFailure)\n        }\n    }\n\n    onSendMessageSuccess = (response) => {\n        this.setState({ room: response.data })\n    }\n\n    onSendMessageFailure = ({ response }) => {\n        this.setState({ error: response })\n    }\n\n    render() {\n        const { room, error } = this.state;\n        if (room) {\n            return <Room room={room} onSendMessageButtonClick={this.onSendMessageButtonClick} />;\n        }\n\n        if (error) {\n            return this.renderError()\n        }\n\n        return (\n            <div className='centered-content'>\n                <h2>Please wait while your Room is loading...</h2>\n                <Spinner animation='border' size='xl' />\n            </div>\n        );\n    }\n}\n\nexport default RoomContainer\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap'\n\nimport RoomListContainer from '../RoomListContainer';\nimport RoomContainer from '../RoomContainer';\n\nconst styles = {\n    row: {\n        marginLeft: 0,\n        marginRight: 0,\n    },\n    container: {\n        paddingLeft: 0\n    }\n}\n\nconst roomListColProps = (roomId) => {\n    return roomId ? { xl: 5, lg: 5, md: 6, sm: 0, xs: 0, className: 'd-none d-md-block' } : {}\n}\n\nconst roomColProps = (roomId) => {\n    return roomId ? { xs: 12, sm: 12 } : {}\n}\n\nconst renderRoomCol = (roomId) => {\n    if (roomId) {\n        return (\n            <Col xl={7} lg={7} md={6} {...roomColProps(roomId)}>\n                <RoomContainer roomId={roomId} key={roomId} />\n            </Col>\n        )\n    }\n}\n\nconst renderRoomListCol = (roomId) => {\n    return (\n        <Col {...roomListColProps(roomId)} style={{ maxHeight: '90vh', overflow: 'scroll' }}>\n            <RoomListContainer />\n        </Col>\n    )\n}\n\nconst RoomAndRoomListWrapperContainer = (props) => {\n    const roomId = props.match.params.id\n    return (\n        <Container fluid style={styles.container}>\n            <Row style={styles.row}>\n                {renderRoomListCol(roomId)}\n                {renderRoomCol(roomId)}\n            </Row>\n        </Container>\n    )\n}\n\nexport default RoomAndRoomListWrapperContainer;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Layout from '../Layout';\nimport LandingPage from '../LandingPage';\nimport ServerConnectionFailed from '../errors/ServerConnectionFailed';\nimport PageNotFound from '../errors/PageNotFound';\nimport LoginContainer from '../../containers/LoginContainer';\nimport RegisterContainer from '../../containers/RegisterContainer';\nimport RoomAndRoomListWrapperContainer from '../../containers/RoomAndRoomListWrapperContainer';\n\nimport './App.scss';\n\n\nconst App = (props) => {\n\n    const renderBody = () => {\n        if (props.serverConnectionFailed) {\n            return <ServerConnectionFailed />;\n        }\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/rooms/:id?\" component={RoomAndRoomListWrapperContainer} />\n                <Route exact path=\"/login\" component={LoginContainer} />\n                <Route exact path=\"/register\" component={RegisterContainer} />\n                <Route exact path=\"*\" component={PageNotFound} />\n            </Switch>\n        );\n    }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                {renderBody()}\n            </Layout>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;","import { UPDATE_USER } from '../constants/actionConstants'\n\nimport { getCurrentUser, checkLoginStatus } from '../server-communication/httpServer'\n\n\nconst actionUpdateUser = (isLoggedIn, user) => {\n    return {\n        type: UPDATE_USER,\n        payload: { isLoggedIn, user }\n    }\n}\n\nconst onGetCurrentUserSuccess = (userResponse, dispatch) => {\n    const onCheckLoginStatusSuccess = (loginResponse) => {\n        const user = userResponse.data\n        const isLoggedIn = loginResponse.data.isLoggedIn\n        dispatch(actionUpdateUser(isLoggedIn, user))\n    }\n\n    checkLoginStatus(onCheckLoginStatusSuccess, ({ response }) => console.log('Check user status fail: ', response))\n}\n\nexport default () => async dispatch => {\n    getCurrentUser(\n        (response) => onGetCurrentUserSuccess(response, dispatch),\n        ({ response }) => console.log('Get current user fail: ', response)\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport App from '../../components/App';\nimport { onServerConnected, onServerDisconnected } from '../../server-communication/socketServer'\nimport connectToServer from '../../actions/connectToServer';\nimport updateUser from '../../actions/updateUser';\nimport createNotification from '../../actions/createNotification';\n\nclass AppContainer extends React.Component {\n    state = {\n        serverConnectionFailed: false\n    }\n\n    componentDidMount() {\n        this.props.connectToServer(this.onServerConnectionFailed);\n        onServerDisconnected(this.onServerDisconnected);\n        onServerConnected(this.onServerConnected);\n        this.props.updateUser()\n    }\n\n    onServerConnectionFailed = () => {\n        this.setState({ serverConnectionFailed: true })\n    }\n\n    onServerConnected = () => {\n        this.setState({ serverConnectionFailed: false })\n    }\n\n    onServerDisconnected = () => {\n        //TODO: Use redux store for this state as it affects the whole application\n        this.setState({ serverConnectionFailed: true })\n    }\n\n    render() {\n        return (\n            <App {...this.state} />\n        );\n    }\n}\n\nexport default connect(\n    null,\n    { connectToServer, createNotification, updateUser }\n)(AppContainer);\n","import {connectToServer} from '../server-communication/socketServer'\n\nimport { CONNECT_TO_SERVER } from '../constants/actionConstants'\n\nexport default (onConnectionFailed) => async (dispatch) => {\n    /*\n        TODO: This function will dispatch connected:true even if the connection may have failed.\n            Although the onConnectionFailed callback takes care of it,\n            the connection status should be either removed from redux store and use callback(s) only\n            or remove callback(s) and read/update the connection status from/on the redux store\n    */\n    await connectToServer(onConnectionFailed);\n    dispatch({ type: CONNECT_TO_SERVER, payload: { connected: true } })\n}\n","import { CREATE_NOTIFICATION } from \"../constants/actionConstants\";\n\nexport default (title, content, actions) => {\n    let action = {\n        type: CREATE_NOTIFICATION,\n        payload: { id: \"id\", title, content, actions }\n    };\n    console.log(\"action: \");\n    console.log(action)\n    return action;\n}","import React from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\n\nconst GenericModal = (props) => {\n    return (\n        <Modal\n            show={props.visible}\n            onHide={props.hideModal}\n            centered\n        >\n            <Modal.Header closeButton onHide={props.hideModal}>\n                <Modal.Title>\n                    {props.header}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.content}\n            </Modal.Body>\n            <Modal.Footer>\n                {props.actions}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default GenericModal;\n","import { CREATE_ROOM } from '../constants/actionConstants';\n\nimport { createRoom } from '../server-communication/httpServer';\n\nconst attemptCreatingRoom = (roomName, roomType, onSuccess, onFailure) => async (dispatch) => {\n    createRoom(\n        roomName,\n        roomType,\n        (response) => {\n            dispatch({ type: CREATE_ROOM, payload: response.data })\n            onSuccess()\n        },\n        onFailure,\n    )\n}\n\nexport default attemptCreatingRoom;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { Form, FormGroup, FormControl, Alert } from 'react-bootstrap';\n\nimport validate from './validate';\n\nimport './CreateRoomForm.scss';\n\n\nconst radioOptions = [\n    { label: 'Private', value: 'private' },\n    { label: 'Public', value: 'public' },\n    { label: 'Unlisted', value: 'unlisted' }\n]\n\n\nconst renderRadioGroup = (formProps) => {\n    const { input, meta, options } = formProps;\n    const hasErrors = meta.touched && meta.error;\n    const impureFormNoErrors = !meta.pristine && !hasErrors;\n\n    const radioInputs = options.map(option => {\n        return (\n            <Form.Group controlId={`roomType-${option.value}`} key={option.value}>\n                <Form.Check\n                    {...input}\n                    {...option}\n                    type=\"radio\"\n                    isInvalid={hasErrors}\n                    isValid={impureFormNoErrors}\n                />\n            </Form.Group>\n        )\n    })\n\n    return (\n        <Form.Group controlId=\"create-room-form-type\">\n            <Form.Label><strong>Select Room Type:</strong></Form.Label>\n            {radioInputs}\n            {hasErrors && <Alert variant=\"danger\">{meta.error}</Alert>}\n        </Form.Group>\n    );\n}\n\n\nconst renderRoomNameField = (formProps) => {\n    const { input, meta } = formProps;\n    const hasErrors = meta.touched && meta.error;\n    const impureFormNoErrors = !meta.pristine && !hasErrors;\n\n    return (\n        <FormGroup controlId=\"create-room-form-name\">\n            <Form.Label><strong>{formProps.label}</strong></Form.Label>\n            <FormControl {...formProps} {...input} isInvalid={hasErrors} isValid={impureFormNoErrors} />\n            <Form.Control.Feedback size=\"lg\" type=\"invalid\">{meta.error}</Form.Control.Feedback>\n        </FormGroup>\n    );\n}\n\n\nconst CreateRoomForm = (props) => {\n    //Submit button resides in CreateRoomModal's Footer for better UI\n    return (\n        <Form noValidate id=\"create-room-form\" onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <Field\n                component={renderRoomNameField}\n                name=\"roomName\"\n                label=\"Enter Room Name:\"\n                placeholder=\"Example: room_for_dolphins\"\n                required\n            />\n            <hr />\n            <Field component={renderRadioGroup} options={radioOptions} name='roomType' />\n        </Form >\n    );\n}\n\n\nexport default reduxForm({\n    form: 'createRoomForm',\n    validate: validate\n})(CreateRoomForm)","export default (values) => {\n    const errors = {}\n    if (!values.roomName) {\n        errors.roomName = 'Room name cannot be empty'\n    }\n\n    if (!values.roomType) {\n        errors.roomType = 'Please choose one of the room types above'\n    }\n\n    return errors\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport GenericModal from './GenericModal';\nimport createRoom from '../../actions/createRoom';\nimport hideModal from '../../actions/hideModal';\nimport CreateRoomForm from '../forms/CreateRoomForm/';\n\nimport DismissibleAlert from '../Alerts/DismissibleAlert';\n\nclass CreateRoomModal extends React.Component {\n    state = { alert: { show: false } }\n\n    onFormSubmit = ({ roomName, roomType }) => {\n        this.props.createRoom(roomName, roomType, this.onSuccess, this.onFailure);\n    }\n\n    onSuccess = () => {\n        this.showAlert('success', \"Your room was successfully created\");\n    }\n\n    onFailure = () => {\n        this.showAlert('danger', \"Oops! Your room couldn't be created\");\n    }\n\n    showAlert = (variant, body) => {\n        this.setState({\n            alert:\n            {\n                show: true,\n                variant: variant,\n                body: body\n            }\n        })\n    }\n\n    hideAlert = () => {\n        this.setState({ alert: { show: false } })\n    }\n\n    onCancelButtonClick = () => {\n        this.hideAlert();\n        this.props.hideModal();\n    }\n\n    getModalActions() {\n        return (\n            <>\n                <Button variant='secondary' onClick={this.onCancelButtonClick}>Cancel</Button>\n                <Button form='create-room-form' type='submit'>Create Room</Button>\n            </>\n        );\n    }\n\n    getAlertDismissAction = () => {\n        if (!this.state.alert.show) {\n            return null;\n        }\n\n        if (this.state.alert.variant === 'danger') {\n            return null;\n        }\n\n        return (\n            <Button\n                variant='outline-success'\n                onClick={() => {\n                    this.hideAlert();\n                    this.props.hideModal();\n                }}\n            >\n                Back to home\n            </Button>\n        )\n    }\n\n    getModalContent() {\n        return (\n            <>\n                <DismissibleAlert\n                    {...this.state.alert}\n                    onDismiss={this.hideAlert}\n                    dismissAction={this.getAlertDismissAction}\n                />\n                <CreateRoomForm onFormSubmit={this.onFormSubmit} />\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <GenericModal\n                header=\"Create Room\"\n                actions={this.getModalActions()}\n                content={this.getModalContent()}\n                visible={this.props.isModalVisible}\n                hideModal={this.props.hideModal}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isModalVisible: state.modal.isModalOpen && state.modal.modalName === 'CreateRoom' }\n}\n\nexport default connect(\n    mapStateToProps,\n    { createRoom, hideModal }\n)(CreateRoomModal);\n\n","import { JOIN_ROOM } from '../constants/actionConstants';\n\nimport { joinRoom } from '../server-communication/socketServer';\n\nconst tryJoiningRoom =\n    (roomId, onSuccess, onPermissionPending, onPermissionRequestCompleted, onFailure) =>\n        async dispatch => {\n            await joinRoom(roomId, (data) => {\n                if (data.status === \"ok\") {\n                    dispatch({ type: JOIN_ROOM, payload: roomId });\n                    onSuccess();\n                }\n                else if (data.status === \"permission_pending\") {\n                    onPermissionPending();\n                    //onRoomJoinPermissionRecieved(onPermissionRequestCompleted);\n                }\n                else {\n                    onFailure(data.reason);\n                }\n            });\n        }\n\nexport default tryJoiningRoom;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport GenericModal from './GenericModal';\nimport tryJoiningRoom from '../../actions/tryJoiningRoom';\nimport hideModal from '../../actions/hideModal';\n\nclass JoinRoomModal extends React.Component {\n    state = { inputValue: \"\", isFormLoading: false }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ isFormLoading: true });\n        this.props.tryJoiningRoom(\n            this.state.inputValue,\n            this.props.onSuccess,\n            this.props.onPermissionPending,\n            this.props.onJoinRoomPermissionRecieved,\n            this.props.onFailure\n        )\n    }\n\n    inputChanged = (e) => {\n        this.setState({\n            inputValue: e.target.value,\n            errorMessage: null\n        })\n    }\n\n    onCancelButtonClick = () => {\n        this.setState({ inputValue: \"\", isFormLoading: false });\n        this.props.hideModal();\n    }\n\n    getModalActions() {\n        const disabled = this.state.isFormLoading ? \"disabled\" : \"\";\n        return (\n            <React.Fragment>\n                <button className=\"ui button\" onClick={this.onCancelButtonClick}>\n                    Cancel\n                </button>\n\n                <button type=\"submit\" form=\"join-room-form\" className={`ui button orange ${disabled}`}>\n                    Join\n                </button>\n            </React.Fragment>\n        );\n    }\n\n    getModalContent() {\n        const loading = this.state.isFormLoading ? \"loading\" : \"\";\n        return (\n            <form className={`ui form ${loading}`} id=\"join-room-form\" onSubmit={this.onFormSubmit}>\n                <div className=\"required field\">\n                    <label>Enter Room ID:</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Room Number\"\n                        value={this.state.inputValue}\n                        onChange={this.inputChanged}\n                        autoFocus={true}\n                        required={true}\n                    />\n                </div>\n            </form>\n        );\n    }\n\n    render() {\n        return (\n            <GenericModal\n                header=\"Join Room\"\n                actions={this.getModalActions()}\n                content={this.getModalContent()}\n                visible={this.props.isModalVisible}\n                hideModal={this.props.hideModal}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isModalVisible: state.modal.isModalOpen && state.modal.modalName === 'JoinRoom' }\n}\n\nexport default connect(mapStateToProps, { tryJoiningRoom, hideModal })(JoinRoomModal);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { Form, FormGroup, FormControl } from 'react-bootstrap';\n\n\nclass DeleteRoomForm extends React.Component {\n    mustMatchRoomName = (value) => {\n        const { room } = this.props\n        return room && value === room.name ? undefined : 'Room name not equal'\n    }\n\n    renderRoomNameField = (formProps) => {\n        return (\n            <FormGroup controlId=\"delete-room-form-name\">\n                <Form.Label><strong>{formProps.label}</strong></Form.Label>\n                <FormControl {...formProps} {...formProps.input} />\n            </FormGroup>\n        );\n    }\n\n    render() {\n        return (\n            <Form noValidate id=\"delete-room-form\" onSubmit={this.props.handleSubmit(this.props.onFormSubmit)} >\n                <Field\n                    component={this.renderRoomNameField}\n                    name=\"roomName\"\n                    label=\"Room Name:\"\n                    placeholder=\"Enter Room name here\"\n                    required\n                    validate={this.mustMatchRoomName}\n                />\n            </Form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'deleteRoomForm',\n})(DeleteRoomForm)","import React from 'react';\nimport { Button, Row, Col, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport GenericModal from './GenericModal';\nimport DeleteRoomForm from '../forms/DeleteRoomForm';\nimport ButtonWithLeadingIcon from '../ButtonWithLeadingIcon'\n\nimport hideModal from '../../actions/hideModal';\nimport deleteRoom from '../../actions/deleteRoom'\n\nclass DeleteRoomModal extends React.Component {\n    state = { deleteRoomStatus: 'initial' }\n\n    onFormSubmit = (formValues) => {\n        console.log('formValues: ', formValues)\n        const { room } = this.props.modalProps\n        if (!room) {\n            this.setState({ deleteRoomStatus: 'fail' })\n        }\n\n        this.props.deleteRoom(room.roomId, this.onDeleteRoomSuccess, this.onDeleteRoomFail)\n        this.setState({ deleteRoomStatus: 'pending' })\n    }\n\n    onDeleteRoomSuccess = () => {\n        this.setState({ deleteRoomStatus: 'success' })\n    }\n\n    onDeleteRoomFail = ({ response }) => {\n        console.log('fail: ', response)\n        this.setState({ deleteRoomStatus: 'fail' })\n    }\n\n    onCancelButtonClick = () => {\n        if (this.state.deleteRoomStatus === 'success') {\n            this.props.onDeleteRoomSuccess()\n        }\n\n        this.props.hideModal();\n    }\n\n    getDeleteButtonMeta() {\n        const { deleteRoomForm } = this.props\n        const syncErrors = deleteRoomForm ? deleteRoomForm.syncErrors : null\n        const hasErrors = syncErrors && syncErrors.roomName\n\n        switch (this.state.deleteRoomStatus) {\n            case 'initial':\n                return {\n                    variant: 'danger',\n                    disabled: hasErrors,\n                    style: {\n                        cursor: hasErrors ? 'not-allowed' : 'pointer'\n                    },\n                    form: 'delete-room-form',\n                    type: 'submit'\n                }\n            case 'pending':\n                return {\n                    variant: 'info',\n                    disabled: true,\n                    style: {\n                        cursor: 'not-allowed'\n                    }\n                }\n            case 'success':\n                return {\n                    variant: 'success',\n                    disabled: true,\n                    style: {\n                        cursor: 'not-allowed'\n                    }\n                }\n            case 'fail':\n                return {\n                    variant: 'danger',\n                    disabled: true,\n                    style: {\n                        cursor: 'not-allowed'\n                    }\n                }\n            default:\n                return null\n        }\n    }\n\n    getPropsForButtonWithLeadingIcon = () => {\n        let icon, content\n        switch (this.state.deleteRoomStatus) {\n            case 'pending':\n                icon = <Spinner animation='border' size='sm' />\n                content = 'Deleting Room...'\n                break;\n            case 'success':\n                icon = <FontAwesomeIcon icon={faCheckCircle} />\n                content = 'Room Deleted'\n                break;\n            case 'fail':\n                icon = <FontAwesomeIcon icon={faTimesCircle} />\n                content = 'Room Deletion Failed'\n                break;\n            default:\n                return {}\n        }\n\n        return { icon, content }\n    }\n\n    renderDeleteButton() {\n        const buttonProps = this.getDeleteButtonMeta()\n        const buttonWithLeadingIconProps = {\n            ...this.getPropsForButtonWithLeadingIcon(),\n            buttonProps\n        }\n\n        switch (this.state.deleteRoomStatus) {\n            case 'initial':\n                return <Button {...buttonProps}>Delete Room</Button>\n            default:\n                return <ButtonWithLeadingIcon  {...buttonWithLeadingIconProps} />\n        }\n    }\n\n    getModalActions() {\n        const { deleteRoomStatus } = this.state\n        const taskCompleted = deleteRoomStatus === 'success' || deleteRoomStatus === 'fail'\n        const cancelButtonText = taskCompleted ? 'Go Back' : 'Cancel'\n        return (\n            <>\n                <Button variant='outline-secondary' onClick={this.onCancelButtonClick}>{cancelButtonText}</Button>\n                {this.renderDeleteButton()}\n            </>\n        )\n    }\n\n    getModalContent() {\n        const { room } = this.props.modalProps\n        const roomName = room ? room.name : '<unknown>'\n        return (\n            <Row>\n                <Col sm={12}>\n                    <DeleteRoomForm onFormSubmit={this.onFormSubmit} room={room} />\n                </Col>\n                <Col>\n                    To delete the room <strong>{roomName}</strong> type in the name of the room above\n                </Col>\n            </Row>\n        )\n    }\n\n    render() {\n        return (\n            <GenericModal\n                header=\"Delete Room\"\n                actions={this.getModalActions()}\n                content={this.getModalContent()}\n                visible={this.props.isModalVisible}\n                hideModal={this.props.hideModal}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { modal } = state\n    return {\n        isModalVisible: modal.isModalOpen && modal.modalName === 'DeleteRoom',\n        modalProps: modal.modalProps,\n        deleteRoomForm: state.form.deleteRoomForm\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { hideModal, deleteRoom }\n)(DeleteRoomModal);\n\n","import { deleteRoom } from '../server-communication/httpServer'\nimport { DELETE_ROOM } from '../constants/actionConstants'\n\nexport default (roomId, onSuccess, onFailure) => async dispatch => {\n    deleteRoom(roomId).then(_ => {\n        onSuccess()\n        dispatch({ type: DELETE_ROOM, payload: roomId })\n    }).catch(onFailure)\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CreateRoomModal from '../../components/modals/CreateRoomModal'\nimport JoinRoomModal from '../../components/modals/JoinRoomModal'\nimport DeleteRoomModal from '../../components/modals/DeleteRoomModal'\n\nconst getModalComponentToShow = (modalName) => {\n    switch (modalName) {\n        case 'CreateRoom':\n            return <CreateRoomModal />\n        case 'JoinRoom':\n            return <JoinRoomModal />\n        case 'DeleteRoom':\n            return <DeleteRoomModal />\n        default:\n            return null\n    }\n}\n\nconst ModalContainer = (props) => {\n    if (!props.modal.isModalOpen) {\n        return null\n    }\n\n    return getModalComponentToShow(props.modal.modalName)\n}\n\nconst mapStateToProps = (state) => {\n    return { modal: state.modal }\n}\n\nexport default connect(mapStateToProps)(ModalContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers'\nimport AppContainer from './containers/AppContainer';\nimport ModalContainer from './containers/ModalContainer';\n\nconst composeEnhanchers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhanchers(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n        <ModalContainer />\n    </Provider>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}