{"version":3,"sources":["redux/reducers/serverReducer.js","redux/reducers/roomReducer.js","redux/reducers/notificationReducer.js","redux/reducers/userReducer.js","redux/reducers/modalReducer.js","redux/reducers/roomListDisplaySettingsReducer.js","redux/reducers/toastReducer.js","redux/reducers/index.js","redux/action-constants.js","components/hoc/WithModalTrigger/WithModalTrigger-View.js","redux/actions/modal-actions/hideModal.js","components/hoc/WithModalTrigger/WithModalTrigger-Redux.js","redux/actions/modal-actions/showModal.js","components/hoc/WithModalTrigger/index.js","components/hoc/WithLink.js","components/standalone/RoomModalTriggers/CreateRoomModalTrigger.js","components/standalone/RoomModalTriggers/JoinRoomModalTrigger.js","components/standalone/RoomModalTriggers/DeleteRoomModalTrigger.js","components/LandingPage/LandingPage-View.js","components/LandingPage/index.js","components/standalone/DismissibleAlert.js","components/standalone/Dropdown.js","components/standalone/TooltipWrapper.js","components/standalone/TextInputWordWrap/index.js","components/standalone/ToggleablePasswordField.js","components/standalone/ProgressButton/ProgressButtonInitial.js","components/standalone/IconButton.js","components/standalone/ProgressButton/ProgressButtonPending.js","components/standalone/ProgressButton/ProgressButtonSuccess.js","components/standalone/ProgressButton/ProgressButtonFailure.js","components/standalone/ProgressButton/ProgressButton.js","components/standalone/ProgressButton/index.js","components/standalone/WithoutNavigateProp.js","components/Header/components/RoomInvitationNotificationItem/RoomInvitationNotificationItem-View.js","components/Header/components/RoomInvitationNotificationItem/index.js","components/Header/components/NotificationListItem/NotificationListItem-View.js","components/Header/components/NotificationListItem/index.js","components/Header/components/NotificationList/NotificationList-View.js","components/Header/components/NotificationList/index.js","components/Header/utils/getPendingNotifications.js","components/Header/components/NotificationIcon/NotificationIcon-View.js","components/Header/components/NotificationIcon/NotificationIcon-Redux.js","components/Header/components/NotificationIcon/index.js","components/Header/components/UserIcon/UserIcon-View.js","server-communication/httpServer.js","redux/actions/user-actions/updateUser.js","components/Header/components/UserIcon/UserIcon-Redux.js","redux/actions/user-actions/logoutUser.js","components/Header/components/UserIcon/index.js","components/Header/Header-View.js","components/Header/Header-Redux.js","components/Header/index.js","components/hoc/WithLayout.js","routes/root/Route-Root.js","routes/root/index.js","components/Login/components/LoginForm/index.js","components/Login/components/LoginForm/validate.js","components/Login/Login-View.js","components/Login/Login-Redux.js","redux/actions/user-actions/loginUser.js","components/Login/Login-Container.js","components/Login/index.js","routes/login/Route-Login.js","routes/login/index.js","components/Register/components/RegistrationForm/RegistrationForm-View.js","components/Register/components/RegistrationForm/asyncValidate.js","components/Register/components/RegistrationForm/RegistrationForm-Redux.js","components/Register/components/RegistrationForm/validate.js","components/Register/components/RegistrationForm/index.js","components/Register/Register-View.js","components/Register/Register-Redux.js","redux/actions/user-actions/registerUser.js","components/Register/index.js","routes/register/Route-Register.js","routes/register/index.js","components/Room/components/ChatMessageForm/ChatMessageForm-View.js","components/Room/components/ChatMessageForm/ChatMessageForm-Redux.js","components/Room/components/ChatMessageForm/index.js","components/Room/components/Message/Message-View.js","components/Room/components/Message/Message-Redux.js","components/Room/components/Message/index.js","components/Room/components/ChatWindow/ChatWindow-View.js","components/Room/components/ChatWindow/utils.js","components/Room/components/ChatWindow/ChatWindow-Container.js","components/Room/components/ChatWindow/index.js","components/Room/components/RoomHeader/RoomHeader-View.js","components/Room/components/RoomHeader/index.js","redux/actions/room-actions/joinRoom.js","components/standalone/RoomActionButtons/RoomActionButton.js","components/standalone/RoomActionButtons/CreateRoomButton.js","components/standalone/RoomActionButtons/DeleteRoomButton.js","components/standalone/RoomActionButtons/JoinRoomButton.js","components/standalone/RoomActionButtons/LeaveRoomButton.js","components/standalone/RoomActionButtons/SendRoomJoinRequestButton.js","components/standalone/RoomActionButtons/InviteUserButton.js","components/standalone/RoomActionButtons/AcceptRoomInvitationButton.js","components/Room/components/RoomNotJoined/RoomNotJoined-View.js","components/Room/components/RoomNotJoined/RoomNotJoined-Container.js","components/Room/components/RoomNotJoined/RoomNotJoined-Redux.js","components/Room/components/RoomNotJoined/index.js","components/Room/Room-View.js","components/Room/utils/isRoomMember.js","constants/serverEventConstants.js","server-communication/socketServer.js","helpers/sendMessage.js","components/Room/Room-Container.js","components/Room/Room-Redux.js","redux/actions/room-actions/fetchRoom.js","components/Room/index.js","components/RoomList/components/EmptyRoomList/EmptyRoomList-View.js","components/RoomList/components/EmptyRoomList/index.js","components/RoomList/components/RoomListItemActions/RoomListItemActions-View.js","components/RoomList/components/RoomListItemActions/RoomListItemActions-Redux.js","components/RoomList/components/RoomListItemActions/index.js","helpers/convertISODateToReadableString.js","components/RoomList/components/RoomListItem/RoomListItem-View.js","components/RoomList/components/RoomListItem/RoomListItem-Container.js","components/RoomList/components/RoomListItem/index.js","components/RoomList/components/RoomListItem/RoomListItem-Redux.js","components/RoomList/components/RoomListDisplayControlsForm/RoomListDisplayControlsForm-View.js","components/RoomList/components/RoomListDisplayControlsForm/index.js","components/RoomList/components/RoomListDisplayFilter/index.js","components/RoomList/components/RoomListDisplayFilter/RoomListDisplayFilter-View.js","components/RoomList/components/RoomListSearchField/index.js","components/RoomList/components/RoomListSearchField/RoomListSearchField-View.js","components/RoomList/components/RoomListControlsHeader/index.js","components/RoomList/components/RoomListControlsHeader/RoomListControlsHeader-View.js","components/RoomList/components/RoomListPagination/index.js","components/RoomList/components/RoomListPagination/RoomListPagination-View.js","components/RoomList/components/RoomListPagination/utils.js","components/RoomList/RoomList-View.js","components/RoomList/utils/sort.js","components/RoomList/RoomList-Redux.js","helpers/logger.js","redux/actions/room-actions/fetchPublicRooms.js","redux/actions/room-list-display-settings-actions/setSortTechnique.js","redux/actions/room-list-display-settings-actions/setCurrentPageNumber.js","redux/actions/room-list-display-settings-actions/setSearchQuery.js","redux/actions/room-list-display-settings-actions/setItemsPerPage.js","components/RoomList/index.js","routes/rooms/Route-Rooms.js","routes/rooms/index.js","routes/index.js","components/App/App-View.js","components/App/App-Container.js","components/App/App-Redux.js","redux/actions/server-actions/connectToServer.js","redux/actions/notification-actions/fetchAllNotifications.js","redux/actions/toast-actions/showNewNotificationToast.js","components/App/index.js","components/modals/GenericModal.js","components/modals/CreateRoomModal/components/CreateRoomForm/CreateRoomForm-View.js","components/modals/CreateRoomModal/components/CreateRoomForm/index.js","components/modals/CreateRoomModal/components/CreateRoomForm/CreateRoomForm-Redux.js","components/modals/CreateRoomModal/components/CreateRoomForm/validate.js","components/modals/CreateRoomModal/CreateRoomModal-View.js","components/modals/CreateRoomModal/CreateRoomModal-Container.js","components/modals/CreateRoomModal/index.js","components/modals/CreateRoomModal/CreateRoomModal-Redux.js","redux/actions/room-actions/createRoom.js","components/modals/JoinRoomModal/components/JoinRoomForm/JoinRoomForm-View.js","components/modals/JoinRoomModal/components/JoinRoomForm/asyncValidate.js","components/modals/JoinRoomModal/components/JoinRoomForm/index.js","components/modals/JoinRoomModal/components/JoinRoomForm/JoinRoomForm-Redux.js","components/modals/JoinRoomModal/JoinRoomModal-View.js","components/modals/JoinRoomModal/JoinRoomModal-Container.js","helpers/isRoomMember.js","components/modals/JoinRoomModal/index.js","components/modals/JoinRoomModal/JoinRoomModal-Redux.js","components/modals/DeleteRoomModal/components/DeleteRoomForm/DeleteRoomForm-View.js","components/modals/DeleteRoomModal/components/DeleteRoomForm/DeleteRoomForm-Redux.js","components/modals/DeleteRoomModal/components/DeleteRoomForm/validate.js","components/modals/DeleteRoomModal/components/DeleteRoomForm/index.js","components/modals/DeleteRoomModal/DeleteRoomModal-View.js","components/modals/DeleteRoomModal/DeleteRoomModal-Redux.js","redux/actions/room-actions/deleteRoom.js","components/modals/DeleteRoomModal/index.js","components/modals/DeleteRoomModal/DeleteRoomModal-Container.js","components/modals/LeaveRoomModal/LeaveRoomModal-View.js","components/modals/LeaveRoomModal/LeaveRoomModal-Redux.js","redux/actions/room-actions/leaveRoom.js","components/modals/LeaveRoomModal/index.js","components/modals/LeaveRoomModal/LeaveRoomModal-Container.js","components/modals/InviteUserModal/components/InviteUserForm/InviteUserForm-View.js","components/modals/InviteUserModal/components/InviteUserForm/index.js","components/modals/InviteUserModal/components/InviteUserForm/InviteUserForm-Redux.js","components/modals/InviteUserModal/components/MatchingUserList/MatchingUserList-View.js","components/modals/InviteUserModal/components/MatchingUserList/index.js","components/modals/InviteUserModal/InviteUserModal-View.js","components/modals/InviteUserModal/InviteUserModal-Container.js","components/modals/InviteUserModal/index.js","components/modals/InviteUserModal/InviteUserModal-Redux.js","components/modals/InviteUserModal/utils.js","components/modals/ReviewRoomInvitationModal/ReviewRoomInvitationModal-View.js","components/modals/ReviewRoomInvitationModal/ReviewRoomInvitationModal-Container.js","components/modals/ReviewRoomInvitationModal/index.js","components/modals/ReviewRoomInvitationModal/ReviewRoomInvitationModal-Redux.js","redux/actions/notification-actions/markNotificationAsReviewed.js","redux/actions/room-actions/acceptRoomInvitation.js","components/modals/ModalContainer.js","components/toasts/GenericToast/index.js","components/toasts/GenericToast/GenericToast-View.js","components/toasts/NewNotificationToast/NewNotificationToast-View.js","components/toasts/NewNotificationToast/index.js","components/toasts/NewNotificationToast/NewNotificationToast-Redux.js","redux/actions/toast-actions/hideToast.js","components/toasts/ToastContainer/index.js","components/toasts/ToastContainer/ToastContainer.js","index.js"],"names":["INITIAL_STATE","connected","handleRoomMemberUpdate","state","payload","roomId","updatedMembers","members","addRoomToState","room","length","data","isLoggedIn","user","isModalOpen","modalName","modalProps","sortBy","itemsPerPage","currentPageNumber","searchQuery","activeToasts","combineReducers","action","type","serverConnection","rooms","_","mapKeys","omit","roomListDisplaySettings","notifications","notification","_id","form","formReducer","modal","toast","uniq","name","filter","WithModalTriggerView","props","showModal","component","children","rest","Component","onClick","connect","WithModalTrigger","to","shouldUseReplace","history","useHistory","replace","push","Button","variant","LandingPage","className","ButtonGroup","CreateRoomModalTrigger","JoinRoomModalTrigger","shouldShowDismissIcon","dismissAction","Alert","show","onClose","onDismiss","dismissible","Heading","heading","body","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","Title","as","title","Content","menu","triggerComponent","label","id","Tooltip","TextInputWordWrap","autosize","this","textareaRef","FormControl","input","rows","ref","el","React","ToggleablePasswordField","formProps","error","useState","passwordVisible","setPasswordVisibility","FormLabel","InputGroup","Append","style","cursor","Text","icon","faEye","faEyeSlash","display","Feedback","ProgressButtonInitial","IconButton","iconPos","childrenProps","isIconLeft","Row","Col","whiteSpace","Spinner","animation","size","disabled","ProgressButtonSuccess","faCheckCircle","faTimesCircle","PROGRESS_SUCCESS","PROGRESS_FAIL","ProgressButton","progress","propsProgressInitial","propsProgressPending","propsProgressSuccess","propsProgressFailure","otherProps","ProgressButtonPending","ProgressButtonFailure","navigate","RoomInvitationNotificationItem","invitation","notificationId","inviter","inviterUsername","username","roomName","getContent","NotificationListItemView","ListGroupItem","roomInvitation","renderNotificationContent","NotificationListItem","NotificationListView","ListGroup","map","key","NotificationList","getPendingNotifications","notificationIdList","Object","keys","pendingNotifications","forEach","status","NotificationIconView","console","log","Dropdown","isEmpty","hasNotifications","badgeVisibility","bellActivity","faBell","faCircle","color","getNotificationIcon","NotificationIcon","UserIconView","logoutUser","UserIcon","faUser","axios","Axios","create","withCredentials","registerUser","password","confirmPassword","onRequestFulfilled","onRequestRejected","post","then","loginUser","getUserByUsername","get","getRoom","createRoom","roomType","deleteRoom","delete","markNotificationAsReviewed","patch","catch","sendRoomInvitation","inviteeUserId","invitee","acceptRoomInvitation","invitationId","onGetCurrentUserSuccess","userResponse","dispatch","loginResponse","actionUpdateUser","response","a","async","RegisterButton","withoutNavigateProp","LoginButton","HeaderView","isUserRegistered","isUserLoggedIn","asNavItem","Nav","Item","Container","fluid","Navbar","expand","sticky","Brand","Link","isRegistered","Header","LayoutEnhancer","RouteRoot","withLayout","renderField","meta","formControlProps","touched","pristine","hasErrors","isInvalid","isValid","getFormControlProps","Form","Label","reduxForm","validate","value","errors","onSubmit","handleSubmit","onFormSubmit","FormGroup","controlId","Field","placeholder","LoginView","shouldShowErrorAlert","errorReason","onErrorAlertDismissed","DismissibleAlert","renderLoginView","LoginRedux","formValues","onLoginFailure","onFailureCallback","LoginContainer","setState","reason","RouteLogin","Login","asyncValidating","isAsyncValidationError","getPropsForFormControl","RegistrationForm","isRegisterButtonDisabled","registerButtonCursorStyle","noValidate","values","hasPasswordMismatch","errMsg","asyncValidate","Promise","resolve","reject","asyncChangeFields","submitting","invalid","RedirectToHome","RedirectToLogin","pathname","isRedirectFromSuccessfulRegister","renderRedirect","RegisterContainer","onRegistrationFailed","Register","RouteRegister","renderMessageField","ChatMessageFormView","formId","Group","FORM_ID","onSubmitSuccess","reset","ChatMessageFormRedux","Message","message","align","isCurrentUserMessageAuthor","messageAuthor","author","messageArrow","borderRight","borderLeft","renderMessageArrow","MessageRedux","userId","messageAlignment","ChatWindow","colorsAssignedToMessageAuthors","prevMessageAuthor","messages","paddingTop","renderMessages","colors","colorChoicesExhausted","usedColors","isColorUsed","randomColor","indexOf","assignColorsRandomly","assignedKeys","randomIndex","Math","floor","random","getRandomColor","ChatWindowContainer","randomAuthorColors","assignRandomColorsToMessageAuthors","messageAuthors","RoomHeader","tooltipLabel","tooltipId","FontAwesomeIcon","faSignOutAlt","faPlus","WithLink","faWindowClose","TooltipWrapper","RoomHeaderView","onSuccess","onFailure","joinRoom","RoomActionButton","defaultProps","propsInit","propsPending","propsSuccess","propsFailure","initial","pending","success","fail","constructProps","CreateRoomButton","DeleteRoomButton","JoinRoomButton","LeaveRoomButton","SendRoomJoinRequestButton","InviteUserButton","AcceptRoomInvitationButton","RoomNotJoinedView","joinRoomProgress","onJoinRoomButtonClick","isPrivateRoom","possibleActionText","faSadCry","getJoinRoomButton","RoomNotJoinedContainer","onJoinRoomPending","onJoinRoomSuccess","onJoinRoomFail","RoomNotJoined","renderRoom","currentUser","onSendMessageButtonClick","ChatMessageForm","renderRoomContent","Room","renderErrorScreen","queryUserId","findIndex","member","isRoomMember","socket","openSocket","autoConnect","connectToServer","onConnectionFailed","on","addMessageToRoom","messageId","emit","events","sendMessage","RoomContainer","onRoomFetchFail","trim","onSendMessageSuccess","onSendMessageFailure","fetchRoom","callback","args","subEvent","registerNewMessageListener","onRoomFetchSuccess","ownProps","titleSubtitleTemplate","subtitle","EmptyRoomList","isSearchResult","renderEmptyRoomListView","RoomListItemActions","isCurrentUserRoomMember","isCurrentUserRoomAdmin","restProps","getOpenRoomAction","DeleteRoomModalTrigger","getDeleteRoomAction","getJoinRoomAction","getActionsForNonRoomMember","RoomListItemActionsRedux","getMemberReferenceOfCurrentUser","find","roomMember","currentUserMemberReference","memberType","isoDate","argDate","Date","oneDate","otherDate","Error","timeDiffData","differenceInYears","getYear","unit","difference","differenceInMonths","getMonth","differenceInDays","getDate","differenceInHours","getHours","differenceInMinutes","getMinutes","differenceInSeconds","getSeconds","getAppropriateTimeDifferenceData","getAppropriateTimeDifferenceText","RoomListItem","roomOwner","createdBy","roomCreatedBy","roomCreatedAt","convertISODateToReadableString","createdAt","getSubtitle","RoomListItemContainer","onJoinRoomFailure","sortOptionsRadioButtonProps","filterOptionsRadioButtonProps","RoomListControlsForm","renderRadioButton","FormCheck","renderInputRangedNumber","sortOptionRadioButtons","radioButtonProps","required","min","max","renderSortOptions","renderPaginationControls","renderDisplayFilters","RoomListDisplayControlsForm","initialValues","displayFilter","destroyOnUnmount","RoomListDisplayFilter","onDisplayControlsFormSubmit","document","click","faFilter","RoomListControlsSearchField","onSearchFieldInputChange","Prepend","faSearch","onChange","RoomListControlsHeader","paginationItemsPerPage","RoomListSearchField","RoomListPagination","totalRooms","setCurrentPageNumber","totalPages","ceil","Pagination","First","Prev","paginationItems","pageIndex","active","leftOffset","MAX_PAGE_NUMBERS_DISPLAYED","getLeftOffset","rightOffset","getRightOffset","offsets","left","right","MAX_ALLOWED_PAGE_OFFSET","getPaginationOffsets","rightEllipsis","Ellipsis","leftEllipsis","slice","getPaginationItems","Next","Last","RoomList","roomsToDisplay","pageNumber","otherRoom","localeCompare","logger","loggerKey","RoomListContainer","debug","getSortedRoomList","sort","roomSortingTechniques","reverse","setSortTechnique","setItemsPerPage","e","setSearchQuery","target","getPaginatedRoomList","sortedRooms","offset","getSearchQuery","toLowerCase","filterRoomListBySearchQuery","roomList","includes","getRooms","fetchPublicRooms","paginatedRooms","mapDispatchToProps","technique","renderRoomCol","xs","sm","xl","lg","md","getRoomColProps","RouteRooms","match","params","content","getRoomListColProps","renderRoomListCol","AppRouter","exact","path","App","serverConnectionFailed","AppContainer","onServerConnected","onServerDisconnected","onNewNotification","showNewNotificationToast","fetchAllNotifications","updateUser","prevProps","prevUser","GenericModal","visible","hideModal","header","actions","Modal","onHide","centered","closeButton","Body","Footer","renderRadioButtonGroup","impureFormNoErrors","radioInputs","option","Check","radioOption","createHelp","tooltipProps","helpIcon","faQuestionCircle","renderRadioOptionHelp","renderRoomNameField","Control","CreateRoomFormView","CreateRoomForm","CreateRoomModalView","isModalVisible","createRoomFormData","createRoomProgress","syncErrors","getModalActions","CreateRoomModalContainer","onCreateRoomPending","onCreateRoomSuccess","onCreateRoomFailure","CreateRoomModal","hideModalAction","renderJoinRoomField","roomAlreadyJoinedError","ensureNotEmpty","undefined","JoinRoomFormView","createError","isPrivateRoomError","JoinRoomForm","getErrorFromResponse","JoinRoomModalView","joinRoomFormData","asyncErrors","roomActionButtonProps","getRoomActionButton","JoinRoomModalContainer","onJoinRoomFormSubmit","currentUserId","JoinRoomModal","otherFormProps","DeleteRoomFormView","DeleteRoomFormRedux","deleteRoomFieldValidate","userEnteredRoomName","deleteRoomForm","deleteRoomFormData","DeleteRoomForm","DeleteRoomModalView","deleteRoomProgress","cancelButtonText","renderDeleteButton","getModalContent","DeleteRoomModalRedux","onDeleteRoomFormSubmit","onDeleteRoomPending","onDeleteRoomSuccess","onDeleteRoomFail","DeleteRoomModal","LeaveRoomModalView","onLeaveRoomButtonClick","leaveRoomProgress","leaveRoom","getState","memberId","memberDocOfUser","i","getMemberDocOfUser","onLeaveRoomPending","onLeaveRoomSuccess","onLeaveRoomFail","LeaveRoomModal","InviteUserFormView","InviteUserForm","MatchingUserListItem","onItemClick","EmptyUserList","queryUsername","isQueryEmpty","text","faEdit","faBoxOpen","MatchingUserList","userList","InviteUserModalView","matchingUsers","selectUsername","inviteUserProgress","InviteUserModalContainer","onInviteUserPending","onInviteUserSuccess","onInviteUserFailure","onInviteUserFormSubmit","inviteeUsername","getUsernameFromInviteUserForm","inviteUserForm","currentUsername","searchUsers","InviteUserModal","change","ReviewRoomInvitationModalView","acceptInvitationProgress","isTaskCompleted","onIgnoreButtonClick","onAcceptButtonClick","getInvitationMessage","ReviewRoomInvitationModalContainer","onAcceptInvitationPending","onAcceptInvitationSuccess","onAcceptInvitationFail","onAcceptInvitationButtonClick","onIgnoreInvitationButtonClick","ReviewRoomInvitationModal","getModalComponentToShow","GenericToast","onToastClose","Toast","autohide","delay","ToastHeader","ToastBody","NewNotificationToastView","isToastVisible","NewNotificationToast","hideToast","ToastContainer","renderToast","composeEnhanchers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","querySelector"],"mappings":"2nBAEMA,EAAgB,CAClBC,WAAW,G,iCCQTC,EAAyB,SAACC,EAAOC,GAAa,IACxCC,EAA2BD,EAA3BC,OAAQC,EAAmBF,EAAnBE,eAChB,OAAO,eACAH,EADP,eAEKE,EAFL,eAGWF,EAAME,GAHjB,CAIQE,QAASD,OAKfE,EAAiB,SAACL,EAAOM,GAC3B,OAAO,eAAKN,EAAZ,eAAoBM,EAAKJ,OAASI,KCjBhCT,EAAgB,CAAEU,OAAQ,EAAGC,KAAM,ICJnCX,EAAgB,CAClBY,YAAY,EACZC,KAAM,ICFJb,EAAgB,CAClBc,aAAa,EACbC,UAAW,KACXC,WAAY,MCEVhB,EAAgB,CAClBiB,OAAQ,WACRC,aAAc,GACdC,kBAAmB,EACnBC,YAAa,M,QCRXpB,EAAgB,CAClBqB,aAAc,ICOHC,cAAgB,CAC3BT,KJLW,WAAoC,IAAnCV,EAAkC,uDAA1BH,EAAeuB,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IKKa,QLJT,MAAO,CAAEZ,YAAY,EAAMC,KAAMU,EAAOnB,QAAQS,MACpD,IKIc,SLHV,OAAOb,EACX,IKGgB,WLFZ,MAAO,CAAEY,YAAY,EAAOC,KAAMU,EAAOnB,SAC7C,IKFmB,cLIf,OAAO,eAAKD,EAAZ,GAAsBoB,EAAOnB,SACjC,QACI,OAAOD,IINfsB,iBPPW,WAAoC,IAAnCtB,EAAkC,uDAA1BH,EAAeuB,EAAW,uCAC9C,MQP6B,sBROzBA,EAAOC,KACA,CAACvB,UAAWsB,EAAOnB,QAAQH,WAG/BE,GOGPuB,MNYW,WAAyB,IAAxBvB,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOC,MACX,IO1B0B,qBP2BtB,OAAO,eAAKrB,EAAZ,GAAsBwB,IAAEC,QAAQL,EAAOnB,QAAS,WACpD,IO3BkB,aP4Bd,OAAOI,EAAeL,EAAOoB,EAAOnB,SACxC,IO3BmB,cP4Bf,OAAOuB,IAAEE,KAAK1B,EAAOoB,EAAOnB,SAChC,IO3BkB,aP6BlB,IO9BiB,YP+Bb,OAAOF,EAAuBC,EAAOoB,EAAOnB,SAChD,IO9BmB,cP+Bf,OAAOI,EAAeL,EAAOoB,EAAOnB,SACxC,QACI,OAAOD,IM1Bf2B,wBFDW,WAAoC,IAAnC3B,EAAkC,uDAA1BH,EAAeuB,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IGKoC,+BHJhC,OAAO,eAAKrB,EAAZ,CAAmBc,OAAQM,EAAOnB,UACtC,IGIoC,+BHHhC,OAAO,eAAKD,EAAZ,CAAmBe,aAAcK,EAAOnB,UAC5C,IGGyC,6BHFrC,OAAO,eAAKD,EAAZ,CAAmBgB,kBAAmBI,EAAOnB,UACjD,IGEkC,6BHD9B,OAAO,eAAKD,EAAZ,CAAmBiB,YAAaG,EAAOnB,UAC3C,QACI,OAAOD,IETf4B,cLRW,WAAoC,IAAnC5B,EAAkC,uDAA1BH,EAAeuB,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IMC+B,0BNA3B,IAAMb,EAAOY,EAAOnB,QACpB,OAAO,eACAD,EADP,CAEIO,OAAQC,EAAKD,OACbC,KAAMgB,IAAEC,QAAQjB,EAAM,SAE9B,IMP2B,sBNQvB,IAAMqB,EAAeT,EAAOnB,QAC5B,OAAO,eACAD,EADP,CAEIQ,KAAK,eACER,EAAMQ,KADT,eAECqB,EAAaC,IAAMD,MAGhC,QACI,OAAO7B,IKVf+B,KAAMC,IACNC,MHVW,WAAoC,IAAnCjC,EAAkC,uDAA1BH,EAAeuB,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IIQkB,aJPd,OAAO,aACHV,aAAa,GACVS,EAAOnB,SAGlB,IIGkB,aJFd,OAAOJ,EAEX,QACI,OAAOG,IGDfkC,MDZW,WAAoC,IAAnClC,EAAkC,uDAA1BH,EAAeuB,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IEiBkB,aFfd,MAAO,CAAEH,aAAcM,IAAEW,KAAF,sBAAWnC,EAAMkB,cAAjB,CAA+BE,EAAOnB,QAAQmC,SACzE,IEekB,aFflB,IACUA,EAAShB,EAAOnB,QAAhBmC,KACN,MAAO,CAAElB,aAAclB,EAAMkB,aAAamB,QAAO,SAAAH,GAAK,OAAIA,IAAUE,MACxE,QACI,OAAOpC,M,gFGJJsC,EAVc,SAACC,GAAW,IAC7BC,EAAmED,EAAnEC,UAAW5B,EAAwD2B,EAAxD3B,UAAWC,EAA6C0B,EAA7C1B,WAAY4B,EAAiCF,EAAjCE,UAAWC,EAAsBH,EAAtBG,SAAaC,EAD9B,YACuCJ,EADvC,+DAE9BK,EAAYH,EAClB,OACI,kBAACG,EAAD,eAAWC,QAAS,kBAAML,EAAU5B,EAAWC,KAAiB8B,GAC3DD,ICLE,WAAAlB,GACX,MAAO,CAAEH,KFgBa,eGTXyB,cAAQ,KAAM,CAAEN,UCRhB,SAAC5B,EAAWC,GACvB,MAAO,CACHQ,KJckB,aIblBpB,QAAS,CAAEW,YAAWC,iBDKfiC,EAJe,SAACP,GAC3B,OAAO,kBAAC,EAAyBA,MELtBQ,ICCA,WAACR,GAAW,IACfS,EAAuDT,EAAvDS,GAAIC,EAAmDV,EAAnDU,iBAAkBR,EAAiCF,EAAjCE,UAAWC,EAAsBH,EAAtBG,SAAaC,EADhC,YACyCJ,EADzC,kDAEhBK,EAAYH,EAEZS,EAAUC,cAKhB,OACI,kBAACP,EAAD,eAAWC,QALC,WACZ,OAAOI,EAAmBC,EAAQE,QAAQJ,GAAME,EAAQG,KAAKL,KAI5BL,GAC5BD,ICTE,cAAuC,IAApCD,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAaC,EAAW,wCACjD,OACI,kBAACI,EAAD,eACInC,UAAU,aACV6B,UAAWA,GAAaa,KACpBX,GAEHD,ICPE,cAAuC,IAApCD,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAaC,EAAW,wCACjD,OACI,kBAACI,EAAD,eACInC,UAAU,WACV6B,UAAWA,GAAaa,KACpBX,GAEHD,ICPE,cAA6C,IAA1CD,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,SAAUpC,EAAoB,EAApBA,KAASqC,EAAW,+CACvD,OACI,kBAACI,EAAD,eACInC,UAAU,aACVC,WAAY,CAAEP,QACdmC,UAAWA,GAAaa,IACxBC,QAAQ,UACJZ,GAEHD,ICeEc,G,OAnBK,WAChB,OACI,yBAAKC,UAAU,wCACX,yBAAKA,UAAU,yCACX,uBAAGA,UAAU,eAAb,yBAEA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAD,oBAGA,kBAACC,EAAD,CAAsBL,QAAQ,mBAA9B,wBClBLC,I,qECCA,WAACjB,GACZ,IAAMsB,GAAyBtB,EAAMuB,cACrC,OACI,kBAACC,EAAA,EAAD,CAAOC,KAAMzB,EAAMyB,KAAMT,QAAShB,EAAMgB,QAASU,QAAS1B,EAAM2B,UAAWC,YAAaN,GACpF,kBAACE,EAAA,EAAMK,QAAP,KAAgB7B,EAAM8B,SACtB,2BAAI9B,EAAM+B,MACV,yBAAKb,UAAU,8BACVlB,EAAMuB,eAAiBvB,EAAMuB,mB,oBCN/B,YAACvB,GAaZ,OACI,kBAACgC,GAAA,EAAD,CACIC,QAAQ,QACRC,UAAU,SACVC,WAAW,EACXC,QAdA,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAQC,MAAT,CAAeC,GAAG,MAAMvC,EAAMwC,OAC9B,kBAACH,GAAA,EAAQI,QAAT,KACKzC,EAAM0C,QAad1C,EAAM2C,mB,UCpBJ,YAAC3C,GAAW,IACf2C,EAAyC3C,EAAzC2C,iBAAkBC,EAAuB5C,EAAvB4C,MAAOC,EAAgB7C,EAAhB6C,GAAOzC,EADlB,YAC2BJ,EAD3B,mCAWtB,OACI,kBAACgC,GAAA,EAAD,eACIC,QAAQ,QACRC,UAAU,SACVC,WAAW,EACXC,QAXA,kBAACU,GAAA,EAAD,CAASD,GAAIA,GACRD,IAWDxC,GAEHuC,I,+BCjBPI,I,mMAGEC,KAASC,KAAKC,e,+BAGR,IAAD,OACL,OACI,kBAACC,GAAA,EAAD,iBACQF,KAAKjD,MACLiD,KAAKjD,MAAMoD,MAFnB,CAGIb,GAAG,WACHc,KAAK,IACLnC,UAAU,kBACVoC,IAAK,SAAAC,GAAE,OAAI,EAAKL,YAAcK,U,GAddC,IAAMnD,YAoBvB0C,M,8BCkBAU,GAtCiB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAAY,EACLC,oBAAS,GADJ,oBAC/CC,EAD+C,KAC9BC,EAD8B,KAiBtD,OACI,oCACI,kBAACC,GAAA,EAAD,KAAYL,EAAUd,OACtB,kBAACoB,GAAA,EAAD,KACI,kBAACb,GAAA,EAAD,iBACQO,EACAA,EAAUN,MAFlB,CAGItE,KAAM+E,EAAkB,OAAS,cAErC,kBAACG,GAAA,EAAWC,OAAZ,CAAmB3D,QAvBE,WAC7BwD,GAAuBD,IAsBuCK,MAAO,CAAEC,OAAQ,YACnE,kBAACH,GAAA,EAAWI,KAAZ,KACI,kBAAC,IAAD,CAAiBC,KAAMR,EAAkBS,IAAQC,SAnB7D,kBAACpB,GAAA,EAAD,iBACQO,EACAA,EAAUN,MAFlB,CAGIc,MAAO,CAAEM,QAAS,WAqBtB,kBAACrB,GAAA,EAAYsB,SAAb,CAAsB3F,KAAK,WAAW6E,KChCnCe,GAJe,SAAC,GAAwB,IAAtB9B,EAAqB,EAArBA,MAAUxC,EAAW,yBAClD,OAAO,kBAACW,EAAA,EAAWX,EAAOwC,GAAS,Y,8BCqBxB+B,GAnBI,SAAC,GAAyD,IAAvDN,EAAsD,EAAtDA,KAAMO,EAAgD,EAAhDA,QAASzE,EAAuC,EAAvCA,SAA4BC,GAAW,EAA7ByE,cAA6B,8DAClEC,EAJY,IAICF,EACnB,OACI,kBAAC7D,EAAA,EAAWX,EACR,kBAAC2E,GAAA,EAAD,KACKD,EAAa,kBAACE,GAAA,EAAD,KAAMX,GAAc,KAClC,kBAACW,GAAA,EAAD,CACI9D,UAAW4D,EAAa,OAAS,OACjCZ,MAAO,CAAEe,WAAY,WAEpB9E,GAZE,IAcNyE,EAA6B,kBAACI,GAAA,EAAD,KAAMX,GAAc,QCEnDK,GAfe,SAAC,GAAuC,IAArCL,EAAoC,EAApCA,KAAMO,EAA8B,EAA9BA,QAAShC,EAAqB,EAArBA,MAAUxC,EAAW,0CACjE,OACI,kBAAC,GAAD,eACIiE,KAAMA,GAAQ,kBAACa,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,OAC/CR,QAASA,GDNC,ECOVV,MAAO,CAAEC,OAAQ,eACjBnD,QAAQ,OACRqE,UAAQ,GACJjF,GAEHwC,GAAS,YCMP0C,GAfe,SAAC,GAAuC,IAArCjB,EAAoC,EAApCA,KAAMO,EAA8B,EAA9BA,QAAShC,EAAqB,EAArBA,MAAUxC,EAAW,0CACjE,OACI,kBAAC,GAAD,eACIiE,KAAMA,GAAQ,kBAAC,IAAD,CAAiBA,KAAMkB,MACrCX,QAASA,GFPC,EEQVV,MAAO,CAAEC,OAAQ,eACjBnD,QAAQ,UACRqE,UAAQ,GACJjF,GAEHwC,GAAS,YCKP0C,GAfe,SAAC,GAAuC,IAArCjB,EAAoC,EAApCA,KAAMO,EAA8B,EAA9BA,QAAShC,EAAqB,EAArBA,MAAUxC,EAAW,0CACjE,OACI,kBAAC,GAAD,eACIiE,KAAMA,GAAQ,kBAAC,IAAD,CAAiBA,KAAMmB,MACrCZ,QAASA,GHPC,EGQVV,MAAO,CAAEC,OAAQ,eACjBnD,QAAQ,SACRqE,UAAQ,GACJjF,GAEHwC,GAAS,YCPhB6C,GAAmB,eACnBC,GAAgB,YA8BPC,GA5BQ,SAAC,GAOjB,IANHC,EAME,EANFA,SACAC,EAKE,EALFA,qBACAC,EAIE,EAJFA,qBACAC,EAGE,EAHFA,qBACAC,EAEE,EAFFA,qBACGC,EACD,wHACF,OAAQL,GACJ,IAdiB,YAeb,OAAO,kBAAC,GAAD,iBAA2BC,EAA0BI,IAChE,IAfiB,eAgBb,OAAO,kBAACC,GAAD,iBAA2BJ,EAA0BG,IAChE,KAAKR,GACD,OAAO,kBAAC,GAAD,iBAA2BM,EAA0BE,IAChE,KAAKP,GACD,OAAO,kBAACS,GAAD,iBAA2BH,EAA0BC,IAChE,QAAS,OAAO,kBAAC,GAAD,eAAuBrD,MAAM,cAAiBqD,MChBvDN,MCXA,cAAwBtF,GAAc,EAAnC+F,SAAoC,IAAvBhG,EAAsB,4BACjD,OAAO,kBAACC,EAAcD,I,oBC4BXiG,GAbwB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAClD,OACI,kBAAC/F,EAAD,CACInC,UAAU,uBACVC,WAAY,CAAEgI,aAAYC,kBAC1BrG,UAAW,gBAAGC,EAAH,EAAGA,SAAaH,EAAhB,mCAA4B,wBAASA,EAAQG,KAExD,wBAAIe,UAAU,aAAd,mBArBO,SAACoF,GAAgB,IACxBE,EAAkBF,EAAlBE,QAASzI,EAASuI,EAATvI,KACX0I,EAAkBD,GAAWA,EAAQE,SACrCC,EAAW5I,GAAQA,EAAK8B,KAE9B,OACI,uBAAGqB,UAAU,QACT,4BAAKuF,GAAsB,IAD/B,+BAEqC,IACjC,4BAAKE,IAaJC,CAAWN,KCxBTD,MCmBAQ,I,OARkB,SAAC,GAAsB,IAApBvH,EAAmB,EAAnBA,aAChC,OACI,kBAACwH,GAAA,EAAD,CAAe5F,UAAU,yBATC,SAAC5B,GAAkB,IACzCyH,EAAwBzH,EAAxByH,eAAgBxH,EAAQD,EAARC,IACxB,GAAIwH,EACA,OAAO,kBAAC,GAAD,CAAgCT,WAAYS,EAAgBR,eAAgBhH,IAO9EyH,CAA0B1H,MCdxB2H,MCsBAC,I,OAlBc,SAAC,GAAuB,IAArB7H,EAAoB,EAApBA,cAW5B,OACI,kBAAC8H,GAAA,EAAD,CAAWnG,QAAQ,QAAQE,UAAU,qBAVR,IAAzB7B,EAAcrB,OACP,mCAGJqB,EAAc+H,KAAI,SAAA9H,GACrB,OAAO,kBAAC2H,GAAD,CAAsBI,IAAK/H,EAAaC,IAAKD,aAAcA,UCX/DgI,MCgBAC,GAlBiB,SAAClI,GAC7B,IAAKA,EACD,OAAO,EAGX,IAAMmI,EAAqBC,OAAOC,KAAKrI,EAAcpB,MAC/C0J,EAAuB,GAS7B,OAPAH,EAAmBI,SAAQ,SAAA/E,GACvB,IAAMvD,EAAeD,EAAcpB,KAAK4E,GACZ,YAAxBvD,EAAauI,QACbF,EAAqB7G,KAAKxB,MAI3BqI,GCuCIG,I,OA5Cc,SAAC,GAAuB,IAArBzI,EAAoB,EAApBA,cAC5B0I,QAAQC,IAAI,eAAgB3I,GAC5B,IAAMsI,EAAuBJ,GAAwBlI,GACrD0I,QAAQC,IAAI,mBAAoBL,GAgChC,OACI,kBAACM,GAAD,CACIzF,MATA,uBAAGtB,UAAU,OAAb,gBAEKgH,IAAQP,GAAwB,GAAhC,YAA0CA,EAAqB3J,OAA/D,MAQL0E,KAAM,kBAAC4E,GAAD,CAAkBjI,cAAesI,IACvChF,iBAnCoB,WACxB,IAAMwF,EAAmBR,EAAqB3J,OAAS,EACjDoK,EAAkBD,EAAmB,UAAY,SACjDE,EAAeF,EAAmB,SAAW,WAEnD,OACI,yBAAKjH,UAAU,+BACX,kBAAC,IAAD,CACImD,KAAMiE,IACNlD,KAAK,KACLlE,UAAS,iCAA4BmH,KAEzC,kBAAC,IAAD,CACIhE,KAAMkE,IACNnD,KAAK,KACLoD,MAAM,MACNtH,UAAS,6BAAwBkH,MAmBvBK,OCpCflI,gBAJS,SAAC9C,GACrB,MAAO,CAAE4B,cAAe5B,EAAM4B,iBAGnBkB,EARe,SAAC,GAAuB,IAArBlB,EAAoB,EAApBA,cAC7B,OAAO,kBAAC,GAAD,CAAsBA,cAAeA,OCJjCqJ,MCgCAC,GA3BM,SAAC,GAA8B,IAA5BjC,EAA2B,EAA3BA,SAAUkC,EAAiB,EAAjBA,WAWxBC,EAAW,kBAAC,IAAD,CAAiBxE,KAAMyE,IAAQ1D,KAAK,OAC/C9C,EACF,8CACiB,gCAASoE,IAI9B,OACI,kBAACuB,GAAD,CACIzF,MAAOF,EACPI,KAlBA,yBAAKxB,UAAU,yCACX,kBAACH,EAAA,EAAD,CAAQC,QAAQ,oBAAoBV,QAASsI,GAA7C,aAkBJjG,iBAAkBkG,K,yCC3BxBE,GAAQC,KAAMC,OAAO,CAAEC,iBAAiB,IAEjCC,GAAe,SAACzC,EAAU0C,EAAUC,EAAiBC,EAAoBC,GAClF,OAAOR,GAAMS,KAAK,gBAAiB,CAAE9C,WAAU0C,WAAUC,oBAAmBI,KAAKH,EAAoBC,IAG5FG,GAAY,SAAChD,EAAU0C,EAAUE,EAAoBC,GAC9D,OAAOR,GAAMS,KAAK,aAAc,CAAE9C,WAAU0C,aAAYK,KAAKH,EAAoBC,IAOxEI,GAAoB,SAACjD,EAAU4C,EAAoBC,GAC5D,OAAOR,GAAMa,IAAN,oBAAuBlD,EAAvB,sBACF+C,KAAKH,EAAoBC,IAoBrBM,GAAU,SAAClM,EAAQ2L,EAAoBC,GAChD,OAAOR,GAAMa,IAAN,qBAAwBjM,IAAU8L,KAAKH,EAAoBC,IAOzDO,GAAa,SAACnD,EAAUoD,EAAUT,EAAoBC,GAC/D,OAAOR,GAAMS,KAAK,aAAc,CAAE7C,WAAUoD,aAAYN,KAAKH,EAAoBC,IAOxES,GAAa,SAACrM,EAAQ2L,EAAoBC,GACnD,OAAOR,GAAMkB,OAAN,qBAA2BtM,IAAU8L,KAAKH,EAAoBC,IAuB5DW,GAA6B,SAAC3D,EAAgB+C,EAAoBC,GAC3E,OAAOR,GAAMoB,MAAN,6BACmB5D,GACtB,CAAEsB,OAAQ,aACZ4B,KAAKH,GAAoBc,MAAMb,IAGxBc,GAAqB,SAACC,EAAe3M,EAAQ2L,EAAoBC,GAC1E,OAAOR,GAAMS,KACT,wBACA,CAAEe,QAASD,EAAe3M,WAC5B8L,KAAKH,GAAoBc,MAAMb,IAGxBiB,GAAuB,SAACC,EAAcnB,EAAoBC,GACnE,OAAOR,GAAMS,KAAN,gCAAoCiB,EAApC,YACFhB,KAAKH,GAAoBc,MAAMb,IClFlCmB,GAA0B,SAACC,EAAcC,GAC3C,IDiB6BtB,EAAoBC,EAApBD,ECjBK,SAACuB,GAC/B,IAAM1M,EAAOwM,EAAa1M,KACpBC,EAAa2M,EAAc5M,KAAKC,WACtC0M,EAXiB,SAAC1M,EAAYC,GAClC,MAAO,CACHW,KrCMmB,cqCLnBpB,QAAS,CAAEQ,aAAYC,SAQd2M,CAAiB5M,EAAYC,KDcOoL,ECXL,gBAAGwB,EAAH,EAAGA,SAAH,OAAkBhD,QAAQC,IAAI,2BAA4B+C,IDY/FhC,GAAMa,IAAI,0BAA0BH,KAAKH,EAAoBC,IEhBzDhJ,gBALS,SAAC9C,GAAW,IACxBU,EAASV,EAATU,KACR,MAAO,CAAEuI,SAAUvI,EAAKA,MAAQA,EAAKA,KAAKuI,YAGN,CAAEkC,WCX3B,kBAAM,SAAMgC,GAAN,UAAAI,EAAAC,OAAA,gDH8BM3B,EG7BZ,kBAAMsB,EAAS,CAAE9L,KvCUV,YoCmByByK,EG7BC,gBAAGwB,EAAH,EAAGA,SAAH,OAAkBhD,QAAQC,IAAI,kBAAmB+C,IH8BtFhC,GAAMS,KAAK,eAAeC,KAAKH,EAAoBC,GG/BzC,iCH8BK,IAACD,EAAoBC,QEnBhChJ,EATO,SAAC,GAA8B,IAA5BmG,EAA2B,EAA3BA,SAAUkC,EAAiB,EAAjBA,WAC/B,OAAO,kBAAC,GAAD,CAAclC,SAAUA,EAAUkC,WAAYA,OEL1CC,MCOTqC,I,OACF,kBAAC,IAAD,CAAMzK,GAAG,YAAYP,UAAW,SAACF,GAAD,OAAWmL,GAAoBnL,EAAOe,OAAtE,aAKEqK,GACF,kBAAC,IAAD,CACI3K,GAAG,SACHP,UAAW,SAACF,GAAD,OAAWmL,GAAoBnL,EAAOe,MACjDC,QAAQ,mBAHZ,SAyDWqK,GAhDI,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,eAC9BC,EAAY,SAACtL,GACf,OAAO,kBAACuL,EAAA,EAAIC,KAAL,CAAUxK,UAAU,uBAAuBhB,IAetD,OACI,kBAACyL,EAAA,EAAD,CAAWzK,UAAU,0BAA0B0K,OAAK,GAChD,kBAACC,EAAA,EAAD,CAAQC,OAAO,QAAQC,OAAO,OAC1B,kBAACF,EAAA,EAAOG,MAAR,KACI,kBAAC,IAAD,CAAMvL,GAAG,IAAIS,UAAU,SAAvB,gBAGJ,kBAACuK,EAAA,EAAD,CAAKvK,UAAU,YACX,kBAACyK,EAAA,EAAD,KACI,kBAACF,EAAA,EAAIC,KAAL,CAAUxK,UAAU,QAChB,kBAAC,IAAD,CACIT,GAAG,SACHP,UAAW,SAACF,GAAD,OAAWmL,GAAoBnL,EAAOyL,IAAIQ,OACrD/K,UAAU,eAHd,UAQJ,kBAACuK,EAAA,EAAIC,KAAL,CAAUxK,UAAU,uBAChB,kBAACwH,GAAD,OA1BZ6C,EAA0C,KAAzBC,EAAUJ,IAJ3BE,EAA+C,KAA5BE,EAAUN,IAQ7BK,GAAkBD,EAAoBE,EAAU,kBAAC,GAAD,OAAgB,UCjBjEjL,gBARS,SAAC9C,GAAW,IACxBU,EAASV,EAATU,KACR,MAAO,CACHoN,eAAgBpN,EAAKD,WACrBoN,iBAAkBnN,EAAKA,MAAQA,EAAKA,KAAK+N,gBAIlC3L,EAjBK,SAAC,GAA0C,IAAxC+K,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,eACrC,OACI,kBAAC,GAAD,CACID,iBAAkBA,EAClBC,eAAgBA,OCPbY,MCYAC,GAXQ,SAAA/L,GACnB,OACI,6BACI,kBAAC8L,GAAD,MACA,yBAAKjL,UAAU,oBACVb,KCCFgM,GAJG,SAACrM,GACf,OAAOsM,GAAW,kBAAC,EAAgBtM,KCJxBqM,M,wCCiBTE,GAAc,SAAC7I,GAAe,IACxBC,EAAUD,EAAU8I,KAApB7I,MACF8I,EAdkB,SAAC/I,GAAe,IAAD,EACFA,EAAU8I,KAAvCE,EAD+B,EAC/BA,QAAS/I,EADsB,EACtBA,MAAOgJ,EADe,EACfA,SAClBC,EAAYF,GAAW/I,EAE7B,OAAO,eACAD,EADP,GAEOA,EAAUN,MAFjB,CAGIyJ,UAAWD,EACXE,SAAUH,IAAaC,IAMFG,CAAoBrJ,GAE7C,MAAuB,aAAnBA,EAAU5E,KACH,kBAAC,GAAD,CAAyB4E,UAAW+I,EAAkB9I,MAAOA,IAIpE,oCACI,kBAACqJ,GAAA,EAAKC,MAAN,KAAavJ,EAAUd,OACvB,kBAACO,GAAA,EAAgBsJ,GACjB,kBAACtJ,GAAA,EAAYsB,SAAb,CAAsB3F,KAAK,WAAW6E,KAiCnCuJ,gBAAU,CACrB1N,KAAM,YACN2N,SClEW,SAACC,GACZ,IAAMC,EAAS,GAQf,OAPID,EAAM1G,WACN2G,EAAO3G,SAAW,wBAElB0G,EAAMhE,WACNiE,EAAOjE,SAAW,wBAGfiE,IDuDIH,EA5BG,SAAClN,GACf,OACI,kBAACgN,GAAA,EAAD,CAAMM,SAAUtN,EAAMuN,aAAavN,EAAMwN,eACrC,kBAACC,GAAA,EAAD,CAAWC,UAAU,qBACjB,kBAACC,GAAA,EAAD,CACIzN,UAAWqM,GACX1M,KAAK,WACLf,KAAK,OACL8D,MAAM,iBACNgL,YAAY,4BAIpB,kBAACH,GAAA,EAAD,CAAWC,UAAU,qBACjB,kBAACC,GAAA,EAAD,CACIzN,UAAWqM,GACX1M,KAAK,WACLf,KAAK,WACL8D,MAAM,iBACNgL,YAAY,cAIpB,kBAAC7M,EAAA,EAAD,CAAQjC,KAAK,UAAb,aERG+O,I,OALG,SAAC7N,GACf,OAAOA,EAAMuL,eAAiB,kBAAC,IAAD,CAAU9K,GAAG,MA1BvB,SAACT,GAAW,IAE5B8N,EAIA9N,EAJA8N,qBACAC,EAGA/N,EAHA+N,YACAC,EAEAhO,EAFAgO,sBACAR,EACAxN,EADAwN,aAGJ,OACI,kBAAC7B,EAAA,EAAD,CAAWzK,UAAU,qBACjB,yBAAKA,UAAU,qCACV,EACD,kBAAC+M,EAAD,CACIjN,QAAQ,SACRc,QAAQ,qBACRC,KAAMgM,EACNtM,KAAMqM,EACNnM,UAAWqM,IAEf,kBAAC,GAAD,CAAWR,aAAcA,MAOeU,CAAgBlO,KCzClEmO,G,2MACFX,aAAe,SAACY,GACZ,EAAKpO,MAAM0J,UACP0E,EAAW1H,SACX0H,EAAWhF,SACX,EAAKpJ,MAAMqO,iB,wEAIT,IAAD,EAMDpL,KAAKjD,MAJL8N,EAFC,EAEDA,qBACAC,EAHC,EAGDA,YACAC,EAJC,EAIDA,sBACAzC,EALC,EAKDA,eAGJ,OACI,kBAAC,GAAD,CACIA,eAAgBA,EAChBwC,YAAaA,EACbD,qBAAsBA,EACtBE,sBAAuBA,EACvBR,aAAcvK,KAAKuK,mB,GAvBVhK,IAAMnD,WAiChBE,gBAJS,SAAC9C,GACrB,MAAO,CAAE8N,eAAgB9N,EAAMU,KAAKD,cAGA,CAAEwL,UC3B3B,SAAChD,EAAU0C,EAAUkF,GAArB,OAA2C,SAAO1D,GAAP,UAAAI,EAAAC,OAAA,gDAKtDvB,GAAUhD,EAAU0C,GAJQ,SAAC2B,GACzBH,EAVG,CACH9L,KnDSa,QmDRbpB,QAAS,CACLS,KAOiB4M,EAAS9M,UAGiBqQ,GALG,wCD2B3C/N,CAAwC4N,IEnCjDI,G,2MACF9Q,MAAQ,CACJsQ,YAAa,KACbD,sBAAsB,G,EAG1BO,eAAiB,YAAmB,IAAhBtD,EAAe,EAAfA,SAChB,EAAKyD,SAAS,CACVT,YAAahD,EAAS9M,KAAKwQ,OAC3BX,sBAAsB,K,EAI9BE,sBAAwB,WACpB,EAAKQ,SAAS,CAAEV,sBAAsB,K,wEAItC,OACI,kBAAC,GAAD,eACIO,eAAgBpL,KAAKoL,eACrBL,sBAAuB/K,KAAK+K,uBACxB/K,KAAKxF,Y,GAtBI+F,IAAMnD,WA4BpBkO,MC9BAA,MCOAG,GAJI,SAAC1O,GAChB,OAAOsM,GAAW,kBAACqC,GAAU3O,KCJlB0O,MCsBTnC,GAAc,SAAC7I,GAAe,IACxBC,EAAUD,EAAU8I,KAApB7I,MACF8I,EAfqB,SAAC/I,GAAe,IAAD,EACYA,EAAU8I,KAAxDE,EADkC,EAClCA,QAAS/I,EADyB,EACzBA,MAAOgJ,EADkB,EAClBA,SAAUiC,EADQ,EACRA,gBAC5BhC,EANqB,SAACjJ,GAC5B,MCNwC,mCDMjCA,EAKWkL,CAAuBlL,IAAW+I,GAAW/I,EAE/D,OAAO,eACAD,EADP,GAEOA,EAAUN,MAFjB,CAGIlC,UAAW0N,EAAkB,gBAAkB,GAC/C/B,UAAWD,EACXE,SAAU8B,IAAoBjC,IAAaC,IAMtBkC,CAAuBpL,GAEhD,MAAuB,aAAnBA,EAAU5E,KACH,kBAAC,GAAD,CAAyB4E,UAAW+I,EAAkB9I,MAAOA,IAIpE,oCACI,kBAACqJ,GAAA,EAAKC,MAAN,KAAavJ,EAAUd,OACvB,kBAACO,GAAA,EAAgBsJ,GACjB,kBAACtJ,GAAA,EAAYsB,SAAb,CAAsB3F,KAAK,WAAW6E,KAmDnCoL,GA9CU,SAAC,GAAgD,IAA9CvB,EAA6C,EAA7CA,aAAcwB,EAA+B,EAA/BA,yBAChCC,EAA4BD,EAA2B,cAAgB,SAE7E,OACI,kBAAChC,GAAA,EAAD,CAAMkC,YAAU,EAACrM,GAAG,oBAAoByK,SAAUE,GAC9C,kBAACC,GAAA,EAAD,CAAWC,UAAU,qBACjB,kBAACC,GAAA,EAAD,CACIzN,UAAWqM,GACX1M,KAAK,WACLf,KAAK,OACL8D,MAAM,iBACNgL,YAAY,4BAGpB,kBAACH,GAAA,EAAD,CAAWC,UAAU,qBACjB,kBAACC,GAAA,EAAD,CACIzN,UAAWqM,GACX1M,KAAK,WACLf,KAAK,WACL8D,MAAM,iBACNgL,YAAY,cAIpB,kBAACH,GAAA,EAAD,CAAWC,UAAU,4BACjB,kBAACC,GAAA,EAAD,CACIzN,UAAWqM,GACX1M,KAAK,kBACLf,KAAK,WACL8D,MAAM,mBACNgL,YAAY,sBAIpB,kBAAC7M,EAAA,EAAD,CACIjC,KAAK,SACLU,KAAK,oBACL0B,UAAS,iBAAY+N,GACrB5J,SAAU2J,GAJd,cExDG9B,gBAAU,CACrB1N,KAAM,eACN2N,SCjBW,SAACgC,GAAY,IAChBzI,EAAwCyI,EAAxCzI,SAAU0C,EAA8B+F,EAA9B/F,SAAUC,EAAoB8F,EAApB9F,gBACtBgE,EAAS,GAQf,GANK3G,IACD2G,EAAO3G,SAAW,4BAEjB0C,IACDiE,EAAOjE,SAAW,4BAEjBC,GAEE,GAhBiB,SAACD,EAAUC,GACnC,OAAOD,IAAaC,EAeT+F,CAAoBhG,EAAUC,GAAkB,CACvD,IAAMgG,EAAS,2CACfhC,EAAOhE,gBAAkBgG,EACzBhC,EAAOjE,SAAWiG,QAJlBhC,EAAOhE,gBAAkB,mCAO7B,OAAOgE,GDAPiC,cDlB+B,SAACH,EAAQlQ,GACxC,OAAO,IAAIsQ,SAAQ,SAACC,EAASC,GAIzB9F,GAAkBwF,EAAOzI,UAHD,WACpB+I,EAAO,CAAE,SALuB,qCAOgBD,OCcxDE,kBAAmB,CAAC,aAJTxC,EAZe,SAAC,GAAmD,IAAjDK,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,aAAiBvH,EAAiB,+CACrE0G,EAAmD1G,EAAnD0G,SAAUgD,EAAyC1J,EAAzC0J,WAAYf,EAA6B3I,EAA7B2I,gBAAiBgB,EAAY3J,EAAZ2J,QACzCZ,EAA4BrC,GAAYgD,GAAcf,GAAmBgB,EAE/E,OACI,kBAAC,GAAD,CACIZ,yBAA0BA,EAC1BxB,aAAcD,EAAaC,QEZxBuB,MCIA,eAAyD,IAAtDvB,EAAqD,EAArDA,aAAcjC,EAAuC,EAAvCA,eAAgBD,EAAuB,EAAvBA,iBAe5C,OAAIC,GAAkBD,EAdC,WACnB,IAAMuE,EAAiB,kBAAC,IAAD,CAAUpP,GAAG,MAC9BqP,EAAkB,kBAAC,IAAD,CAAUrP,GAAI,CAClCsP,SAAU,SACVtS,MAAO,CAAEuS,kCAAkC,MAG/C,OAAIzE,EACOsE,EACAvE,EACAC,EAAiBsE,EAAiBC,OADtC,EAMAG,GAGP,yBAAK/O,UAAU,oBACX,kBAACyK,EAAA,EAAD,KACI,kBAAC,GAAD,CAAkB6B,aAAcA,OCrB1C0C,G,2MAEFC,qBAAuB,YAAmB,IAAhBpF,EAAe,EAAfA,SACtBhD,QAAQC,IAAI,wBAAyB+C,I,EAGzCyC,aAAe,SAACY,GACZrG,QAAQC,IAAI,6BAA8BoG,GAC1C,EAAKpO,MAAMmJ,aACPiF,EAAW1H,SACX0H,EAAWhF,SACXgF,EAAW/E,gBACX,EAAK8G,uB,wEAIH,IAAD,EACwClN,KAAKjD,MAA1CuL,EADH,EACGA,eAAgBD,EADnB,EACmBA,iBAExB,OACI,kBAAC,GAAD,CACIC,eAAgBA,EAChBD,iBAAkBA,EAClBkC,aAAcvK,KAAKuK,mB,GAvBHhK,IAAMnD,WAoCvBE,gBAPS,SAAC9C,GACrB,MAAO,CACH6N,iBAAkB7N,EAAMU,KAAKA,MAAQV,EAAMU,KAAKA,KAAK+N,aACrDX,eAAgB9N,EAAMU,KAAKD,cAIK,CAAEiL,aCtC3B,SAACzC,EAAU0C,EAAUC,EAAiBE,GAAtC,OAA4D,SAAOqB,GAAP,UAAAI,EAAAC,OAAA,gDACvE9B,GAAazC,EAAU0C,EAAUC,GAC7B,SAAC0B,GAAD,OAAcH,EAAS,CAAE9L,K/DUT,W+DVyBpB,QAASqN,EAAS9M,SAC3DsL,GAHmE,wCDsC5DhJ,CAA2C2P,IExC3CE,MCOAC,GAJO,SAACrQ,GACnB,OAAOsM,GAAW,kBAAC8D,GAAapQ,KCJrBqQ,M,SCKTC,I,OAAqB,SAAC5M,GACxB,OACI,kBAAC,GAAsBA,KA4BhB6M,GAxBa,SAACvQ,GAAW,IAC5BwN,EAAyBxN,EAAzBwN,aAAcgD,EAAWxQ,EAAXwQ,OAEtB,OACI,kBAACxD,GAAA,EAAD,CAAMM,SAAUE,EAAc3K,GAAI2N,EAAQtP,UAAU,qBAChD,kBAACyK,EAAA,EAAD,CAAWzK,UAAU,4BAA4B0K,OAAK,GAClD,yBAAK1K,UAAU,2BACX,kBAAC8L,GAAA,EAAKyD,MAAN,CAAY/C,UAAU,UAAUxM,UAAU,oBACtC,kBAACyM,GAAA,EAAD,CACI9N,KAAK,UACL+N,YAAY,oBACZ9O,KAAK,OACLoB,UAAWoQ,OAIvB,yBAAKpP,UAAU,2BACX,kBAACH,EAAA,EAAD,CAAQjC,KAAK,SAASU,KAAMgR,EAAQxP,QAAQ,mBAA5C,YCzBd0P,GAAU,oBAWDxD,gBAAU,CACrB1N,KAAMkR,GACNC,gBANc,SAAC1R,EAAa2L,GAC5BA,EAASgG,aAAMF,OAGJxD,EATc,SAAClN,GAAW,IAC7BuN,EAA+BvN,EAA/BuN,aAAcC,EAAiBxN,EAAjBwN,aACtB,OAAO,kBAAC,GAAD,CAAqBA,aAAcD,EAAaC,GAAegD,OAAQE,QCPnEG,MCoCAC,I,OAjCC,SAAC9Q,GAAW,IAChB+Q,EAAsD/Q,EAAtD+Q,QAASC,EAA6ChR,EAA7CgR,MAAOxI,EAAsCxI,EAAtCwI,MAAOyI,EAA+BjR,EAA/BiR,2BAC/B,IAAKF,EACD,OAAO,KAGX,IAWMG,EAVKD,EAA6B,MAAQF,EAAQI,QAAUJ,EAAQI,OAAOzK,SAAWqK,EAAQI,OAAOzK,SAAW,iBAWhH0K,EARqB,WACvB,IACMlN,EAAkB,SAAV8M,EAAmB,CAAEK,YADnB,sBAC+C,CAAEC,WADjD,sBAGhB,OAAO,uBAAGpQ,UAAS,wBAAmB8P,GAAS9M,MAAOA,IAIrCqN,GACrB,OACI,kBAAC5F,EAAA,EAAD,CAAWzK,UAAS,wBAAmB8P,IACxB,SAAVA,GAAoBI,EAEjB,uBAAGlN,MAAO,CAAEsE,SAAStH,UAAU,QAC3B,gCAASgQ,IAGjB,uBAAGhQ,UAAU,QAAQ6P,EAAQ9S,MAClB,UAAV+S,GAAqBI,KC5B5BI,G,2MACFP,2BAA6B,WAAO,IAAD,EACH,EAAKjR,MAAzB+Q,EADuB,EACvBA,QAASU,EADc,EACdA,OACjB,OAAOV,GAAWA,EAAQI,QAAUJ,EAAQI,OAAO5R,MAAQkS,G,wEAGrD,IAAD,EACsBxO,KAAKjD,MAAxB+Q,EADH,EACGA,QAASvI,EADZ,EACYA,MACjB,IAAKuI,EACD,OAAO,KAGX,IAAMW,EAAmBzO,KAAKgO,6BAA+B,QAAU,OAEvE,OACI,kBAAC,GAAD,CACIF,QAASA,EACTC,MAAOU,EACPlJ,MAAOA,EACPyI,2BAA4BhO,KAAKgO,mC,GAnBtBzN,IAAMnD,WA6BlBE,gBAJS,SAAC9C,GACrB,MAAO,CAAEgU,OAAQhU,EAAMU,KAAKA,KAAKoB,OAGG,KAAzBgB,CAA+BiR,IChC/BA,MCoCAG,I,OAhCI,SAAC3R,GAAW,IACnBjC,EAAyCiC,EAAzCjC,KAAM6T,EAAmC5R,EAAnC4R,+BAwBd,OACI,kBAACzK,GAAA,EAAD,CAAWjG,UAAU,6BAA6BF,QAAQ,SAvBvC,WACnB,IAAI6Q,EACJ,OAAO9T,EAAK+T,SAAS1K,KAAI,SAAA2J,GACrB,IAAMG,EAAgBH,EAAQI,QAAUJ,EAAQI,OAAO5R,IACjDwS,EAAab,IAAkBW,EAAoB,OAAS,GAGlE,OAFAA,EAAoBX,EAGhB,kBAAC/J,GAAA,EAAUuE,KAAX,CACIrE,IAAK0J,GAAWA,EAAQxR,IACxB2B,UAAS,mBAAc6Q,EAAd,UAET,kBAAC,GAAD,CACIvJ,MAAOoJ,EAA+BV,GACtCvT,OAAQI,EAAKJ,OACboT,QAASA,QASpBiB,MCjCPC,GAAS,CACX,UACA,UACA,UACA,UACA,WAGEC,GAAwB,SAACC,GAC3B,OAAOF,GAAOjU,SAAWmU,EAAWnU,QAGlCoU,GAAc,SAACD,EAAYE,GAC7B,OAA4C,IAArCF,EAAWG,QAAQD,IAYxBE,GAAuB,SAAC7K,GAC1B,IAAM8K,EAAe,GACfL,EAAa,GASnB,OARAzK,EAAKE,SAAQ,SAAAP,GACT,IAAKmL,EAAanL,GAAM,CACpB,IAAMgL,EAdK,SAACF,GACpB,IAAIE,EACJ,EAAG,CACC,IAAII,EAAcC,KAAKC,MAAMD,KAAKE,SAAWX,GAAOjU,QACpDqU,EAAcJ,GAAOQ,SAChBL,GAAYD,EAAYE,KAAiBH,GAAsBC,IACxE,OAAOE,EAQqBQ,CAAeV,GACnCK,EAAanL,GAAOgL,EACfH,GAAsBC,IAAaA,EAAWrR,KAAKuR,OAIzDG,GC/BLM,G,2MACFrV,MAAQ,CAAEsV,mBAAoB,I,mFAGT9P,KAAKjD,MAAdjC,MAEJkF,KAAKuL,SAAS,CACVuE,mBAAoB9P,KAAK+P,yC,2DAKC,IAE5BC,EADWhQ,KAAKjD,MAAdjC,KACoB+T,SAAS1K,KAAI,SAAA2J,GAAO,OAAIA,EAAQI,QAAUJ,EAAQI,OAAO5R,OACrF,OAAOgT,GAAqBU,K,+BAGtB,IACElV,EAASkF,KAAKjD,MAAdjC,KACAgV,EAAuB9P,KAAKxF,MAA5BsV,mBACR,OAAKhV,EAIE,kBAAC,GAAD,CAAgBA,KAAMA,EAAM6T,+BAAgCmB,IAHxD,S,GAtBevP,IAAMnD,WA6BzByS,MChCAA,MCkFAI,I,OA3EI,SAAC,GAAyB,IAAvBnV,EAAsB,EAAtBA,KAAMmD,EAAgB,EAAhBA,UA2DxB,OACI,kBAACyK,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAS,+BAA0BA,IAChD,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,8CACVnD,EAAK8B,MAEV,yBAAKqB,UAAU,0BACX,yBAAKA,UAAU,iCAnCA,CACvB,CACIiS,aAAc,aACdC,UAAW,qBACX/S,UAhCJ,kBAACG,EAAD,CACIN,UAAWmT,IACXhP,KAAMiP,IACNpS,UAAU,iBACV7C,UAAU,YACVC,WAAY,CAAEP,WA6BlB,CACIoV,aAAc,cACdC,UAAW,sBACX/S,UA3BJ,kBAACG,EAAD,CACIN,UAAWmT,IACXhP,KAAMkP,IACNrS,UAAU,iBACV7C,UAAU,aACVC,WAAY,CAAEP,WAwBlB,CACIoV,aAAc,oBACdC,UAAW,qBACX/S,UAtBJ,kBAACmT,EAAD,CACItT,UAAWmT,IACXhP,KAAMoP,IACNvS,UAAU,iBACVT,GAAG,aAsBe2G,KAAI,YAA6C,IAA1CgM,EAAyC,EAAzCA,UAAWD,EAA8B,EAA9BA,aAAc9S,EAAgB,EAAhBA,UACtD,OAAO,kBAACqT,GAAD,CACH/Q,iBAAkBtC,EAClBuC,MAAOuQ,EACPtQ,GAAIuQ,EACJ/L,IAAK+L,aC7DNO,MCCA,YAAChW,EAAQiW,EAAWC,GAApB,OAAkC,SAAAjJ,I3CuDzB,SAACjN,EAAQ2L,EAAoBC,GACjD,OAAOR,GAAMS,KAAN,qBAAyB7L,EAAzB,aAA2C8L,KAAKH,EAAoBC,I2CvD3EuK,CAASnW,GAAQ8L,MAAK,YAAe,IAAZxL,EAAW,EAAXA,KACrB2M,EAAS,CAAE9L,K/ECM,Y+EDWpB,QAAS,CAAEC,SAAQC,eAAgBK,EAAKJ,WACpE+V,OACDxJ,MAAMyJ,KCyBEE,GA5BU,SAAC,GAQnB,IAPHnO,EAOE,EAPFA,SACAC,EAME,EANFA,qBACAC,EAKE,EALFA,qBACAC,EAIE,EAJFA,qBACAC,EAGE,EAHFA,qBACAgO,EAEE,EAFFA,aACG5T,EACD,uIAiBF,OAAO,kBAAC,GAAD,eAAgBwF,SAAUA,GAfV,WACnB,IAAMqO,EAAYpO,GAAoB,eAASA,GACzCqO,EAAepO,GAAoB,eAASA,GAC5CqO,EAAepO,GAAoB,eAASA,GAC5CqO,EAAepO,GAAoB,eAASA,GAClD,MACI,CACIH,qBAAqB,eAAMmO,EAAaK,QAApB,GAAgCJ,GACpDnO,qBAAqB,eAAMkO,EAAaM,QAApB,GAAgCJ,GACpDnO,qBAAqB,eAAMiO,EAAaO,QAApB,GAAgCJ,GACpDnO,qBAAqB,eAAMgO,EAAaQ,KAApB,GAA6BJ,IAKdK,GAAsBrU,KCf1DsU,GAVU,SAAC1U,GAOtB,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,eAClB0R,QAAS,CAAE1R,MAAO,oBAClB2R,QAAS,CAAE3R,MAAO,gBAClB4R,KAAM,CAAE5R,MAAO,yBAEuC5C,KCG/C2U,GAVU,SAAC3U,GAOtB,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,eAClB0R,QAAS,CAAE1R,MAAO,oBAClB2R,QAAS,CAAE3R,MAAO,gBAClB4R,KAAM,CAAE5R,MAAO,yBAEuC5C,KCG/C4U,GAVQ,SAAC5U,GAOpB,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,aAClB0R,QAAS,CAAE1R,MAAO,mBAClB2R,QAAS,CAAE3R,MAAO,eAClB4R,KAAM,CAAE5R,MAAO,wBAEuC5C,KCG/C6U,GAVS,SAAC7U,GAOrB,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,cAClB0R,QAAS,CAAE1R,MAAO,mBAClB2R,QAAS,CAAE3R,MAAO,aAClB4R,KAAM,CAAE5R,MAAO,wBAEuC5C,KCG/C8U,GAVmB,SAAC9U,GAO/B,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,qBAClB0R,QAAS,CAAE1R,MAAO,sBAClB2R,QAAS,CAAE3R,MAAO,gBAClB4R,KAAM,CAAE5R,MAAO,2BAEuC5C,KCG/C+U,GAVU,SAAC/U,GAOtB,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,mBAClB0R,QAAS,CAAE1R,MAAO,yBAClB2R,QAAS,CAAE3R,MAAO,mBAClB4R,KAAM,CAAE5R,MAAO,8BAEuC5C,KCG/CgV,GAVoB,SAAChV,GAOhC,OAAO,kBAAC,GAAD,eAAmBgU,aANL,CACjBK,QAAS,CAAEzR,MAAO,UAClB0R,QAAS,CAAE1R,MAAO,2BAClB2R,QAAS,CAAE3R,MAAO,YAClB4R,KAAM,CAAE5R,MAAO,gCAEuC5C,KC0C/CiV,GApCW,SAAC,GAIpB,IAHHlX,EAGE,EAHFA,KACAmX,EAEE,EAFFA,iBACAC,EACE,EADFA,sBAGA,GADApN,QAAQC,IAAI,SAAUjK,IACjBA,EAAM,OAAO,KAElB,IAAMqX,EAA8B,YAAdrX,EAAKe,KACrBuW,EAAqBD,EAAgB,sBAAwB,gBAMnE,OACI,kBAACzJ,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,0BACvB,yBAAKA,UAAU,yEACX,kBAAC,IAAD,CAAiBmD,KAAMiR,IAAUlQ,KAAK,KAAKoD,MAAM,UAAUtH,UAAU,SACrE,iEACA,uBAAGA,UAAU,mBAAb,uBAAoDmU,GACpD,kBAAClU,EAAA,EAAD,KAEQiU,EACI,+CAjCF,SAACF,EAAkB5U,GACzC,OACI,kBAAC,GAAD,CACIsF,SAAUsP,EACVrP,qBAAsB,CAAEvF,aA8BRiV,CAAkBL,EAAkBC,GAE5C,kBAAC,IAAD,CAAM1U,GAAG,SAASS,UAAU,6BAA5B,qBClCdsU,G,2MACF/X,MAAQ,CAAEyX,iBnEJW,a,EmEMrBC,sBAAwB,WACpB,EAAKM,oBADqB,MAEC,EAAKzV,MAAxBjC,EAFkB,EAElBA,MAER+V,EAJ0B,EAEZA,UACC/V,GAAQA,EAAKJ,OACX,EAAK+X,kBAAmB,EAAKC,iB,EAGlDF,kBAAoB,WAChB,EAAKjH,SAAS,CAAE0G,iBnEbC,kB,EmEgBrBQ,kBAAoB,WAChB,EAAKlH,SAAS,CAAE0G,iBAAkBzP,M,EAGtCkQ,eAAiB,WACb,EAAKnH,SAAS,CAAE0G,iBAAkBxP,M,wEAIlC,OACI,kBAAC,GAAD,eACIyP,sBAAuBlS,KAAKkS,uBACxBlS,KAAKjD,MACLiD,KAAKxF,Y,GA3BY+F,IAAMnD,WAiC5BmV,MC/BAjV,eAAQ,KAAM,CAAEuT,aAAhBvT,EAJY,SAACP,GACxB,OAAO,kBAAC,GAA2BA,MCPxB4V,MCsCTC,I,OAAa,SAAC9X,EAAM+X,EAAaC,GACnC,OACI,yBAAK7U,UAAU,6CAhBG,SAACnD,EAAMgY,GAC7B,OACI,oCACI,kBAAC,GAAD,CAAYhY,KAAMA,EAAMmD,UAAU,wBAClC,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CAAYnD,KAAMA,KAEtB,yBAAKmD,UAAU,uBACX,kBAAC8U,GAAD,CAAiBxI,aAAcuI,MASlCE,CAAkBlY,EAAM+X,MAmBtBI,GAdF,SAAClW,GAAW,IACb2D,EAAuD3D,EAAvD2D,MAAO5F,EAAgDiC,EAAhDjC,KAAM+X,EAA0C9V,EAA1C8V,YAAaC,EAA6B/V,EAA7B+V,yBAElC,OAAIpS,EAnCkB,SAACA,GAMf,OAFAA,EAAMkE,OAEC,iDA8BJsO,CAAkBxS,GACjB5F,ECrDD,SAACA,EAAMqY,GAClB,SAAKrY,GAASA,EAAKF,SAAYuY,KAQJ,IAJJrY,EAAKF,QAAQwY,WAAU,SAAAC,GAC1C,OAAOA,EAAOnY,MAAQmY,EAAOnY,KAAKoB,MAAQ6W,KDiDlCG,CAAaxY,EAAM+X,GAAeA,EAAYvW,KAG/CsW,GAAW9X,EAAMgY,GAFjB,kBAACH,GAAD,CAAe7X,KAAMA,IA/C5B,yBAAKmD,UAAU,oBACX,wEACA,kBAACgE,GAAA,EAAD,CAASE,KAAK,KAAKD,UAAU,a,qBEX1B,GACC,aADD,GAIM,kBAJN,GAQI,gBARJ,GASE,eATF,GAWS,qBAXT,GAYO,mBCThBqR,GAASC,KAAW,IAAK,CAAEC,aAAa,IAEjCC,GAAkB,SAACC,GAC5BJ,GAAOjW,UACPiW,GAAOK,GAAG,gBAAiBD,ICJhB,YAACjZ,EAAQoT,EAAS6C,EAAWC,I5DmEZ,SAAClW,EAAQoT,EAASzH,EAAoBC,GAC3DR,GAAMS,KAAN,qBAAyB7L,EAAzB,aAA4C,CAAEoT,YAAWtH,KAAKH,EAAoBC,G4DnEzFuN,CAAiBnZ,EAAQoT,GAAS,SAAChG,ID6CZ,SAACpN,EAAQoZ,GACzBP,GAAOQ,KAAKC,GAAsBA,GAAoBtZ,EAAQoZ,GC7CjEG,CAAYvZ,EAAQoN,EAASxL,KAC7BqU,EAAU7I,KACX8I,ICDDsD,G,2MACF1Z,MAAQ,CAAEkG,MAAO,M,EAmBjByT,gBAAkB,YAAmB,IAAhBrM,EAAe,EAAfA,SACjB,EAAKyD,SAAS,CAAE7K,MAAOoH,K,EAG3BgL,yBAA2B,SAAC3H,GAAgB,IAChC2C,EAAY3C,EAAZ2C,QACR,IAAKA,GAAqC,IAA1BA,EAAQsG,OAAOrZ,OAC3B,OAAO,KACH,IACID,EAAS,EAAKiC,MAAdjC,KACRmZ,GAAYnZ,EAAKJ,OAAQoT,EAAS,EAAKuG,qBAAsB,EAAKC,uB,EAI1ED,qBAAuB,SAACvM,GACpB,EAAKyD,SAAS,CAAEzQ,KAAMgN,EAAS9M,Q,EAGnCsZ,qBAAuB,YAAmB,IAAhBxM,EAAe,EAAfA,SAKtB,EAAKyD,SAAS,CAAE7K,MAAOoH,K,mFAxCN,IAAD,SACc9H,KAAKjD,MAA3BwX,EADQ,EACRA,UAAW7Z,EADH,EACGA,OACnBoK,QAAQC,IAAI,WAAYrK,GFOU,SAACA,EAAQ8Z,GAC/CjB,GAAOK,GAAGI,IAAsB,WAAc,IAAD,uBAATS,EAAS,yBAATA,EAAS,gBACzC3P,QAAQC,IAAI,kBAAmB0P,GAC/B,IAAMC,EAAWD,EAAK,GACtB,GAAIC,IAAaV,GAAoB,CACjC,IAAMhZ,EAAOyZ,EAAK,GACdzZ,EAAKN,SAAWA,GAChB8Z,EAASxZ,OEbjB2Z,CAA2Bja,GAAQ,SAACM,GAChC8J,QAAQC,IAAI,gBAAiB/J,GAC7BuZ,EAAU7Z,EAAQ,EAAKka,mBAAoB,EAAKT,oBAEpDI,EAAU7Z,GAAQ,cAAWsF,KAAKmU,mB,2CAGhB,IF0BIzZ,EAAQ8Z,EEzBtB1Z,EAASkF,KAAKjD,MAAdjC,KACJA,IFwBkBJ,EEvBJI,EAAKJ,OFuBO8Z,EEvBC,aFwB5BjB,GAAOQ,KAAKC,GAAmBA,GAAwBtZ,EAAQ8Z,M,+BEM5D,IAAD,EACyBxU,KAAKjD,MAA3B8V,EADH,EACGA,YAAa/X,EADhB,EACgBA,KAErB,OAAO,kBAAC,GAAD,eACH+X,YAAaA,EACb/X,KAAMA,EACNgY,yBAA0B9S,KAAK8S,0BAC3B9S,KAAKxF,Y,GArDO+F,IAAMnD,WA0DnB8W,MCxCA5W,gBAPS,SAAC9C,EAAOqa,GAC5B,MAAO,CACHhC,YAAarY,EAAMU,MAAQV,EAAMU,KAAKA,KACtCJ,KAAMN,EAAMuB,MAAM8Y,EAASna,WAIK,CAAE6Z,UCnB3B,SAAC7Z,EAAQiW,EAAWC,GAApB,OAAkC,SAAAjJ,GAC7Cf,GAAQlM,GAAQ8L,MAAK,YAAe,IAAZxL,EAAW,EAAXA,KACpB2V,EAAU3V,GACV2M,EAAS,CAAE9L,KnGLO,amGKWpB,QAASO,OACvCmM,MAAMyJ,MDeEtT,EAlBG,SAACP,GAOf,OAAO,kBAAC,GAAkBA,MEXfkW,MCQT6B,I,OAAwB,SAACvV,EAAOwV,GAClC,OACI,kBAACrM,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,yCACvB,yBAAKA,UAAU,+BACVsB,GAEL,yBAAKtB,UAAU,qCACV8W,MA6CFC,GAVO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACrB,OACI,kBAACvM,EAAA,EAAD,CAAWzK,UAAU,sCAEbgX,EA9BLH,GAFO,sCACG,2DAIW,WAC5B,IACMC,EACF,kBAAC7W,EAAA,EAAD,KACI,kBAACC,EAAD,CACIgE,KAAK,KACLlE,UAAU,4BAFd,iBAOA,kBAACG,EAAD,CACI+D,KAAK,KACLpE,QAAQ,kBACRE,UAAU,4BAHd,sBASR,OAAO6W,GAnBO,sCAmBsBC,GAOyBG,KCtDlDF,MCkDAG,GAtBa,SAACpY,GAAW,IAC5BjC,EAAwEiC,EAAxEjC,KAAMsa,EAAkErY,EAAlEqY,wBAAyBC,EAAyCtY,EAAzCsY,uBAA2BC,EAD/B,YAC6CvY,EAD7C,6DAkBnC,OAAOqY,EAbC,kBAAClX,EAAA,EAAD,KAdc,SAACpD,GACvB,IAAMJ,EAASI,EAAKJ,OAASI,EAAKJ,OAAS,GAC3C,OACI,kBAAC,IAAD,CAAM8C,GAAE,iBAAY9C,GAAUuD,UAAU,2BAAxC,QAYSsX,CAAkBza,GAClBua,EApBW,SAACva,GACzB,OAAO,kBAAC0a,EAAD,CAAwB1a,KAAMA,GAA9B,UAmB+B2a,CAAoB3a,GAAQ,MAK/B,WAAO,IAC9BmX,EAA4CqD,EAA5CrD,iBAAkBC,EAA0BoD,EAA1BpD,sBAE1B,OAtCkB,SAACD,EAAkB5U,GACzC,OAAO,kBAAC,GAAD,CACHsF,SAAUsP,EACVrP,qBAAsB,CAClBjD,MAAO,OACPtC,aAiCGqY,CAAkBzD,GADT,kBAAMC,EAAsBpX,EAAOA,EAAKJ,OAAS,OAIRib,IC1C3DC,G,2MACFC,gCAAkC,WAAO,IAAD,EACN,EAAK9Y,MAA3BjC,EAD4B,EAC5BA,KAAM+X,EADsB,EACtBA,YACd,IAAK/X,IAAS+X,EACV,OAAO,KAOX,OAAO/X,EAAKF,QAAQkb,MAJqB,SAACC,GACtC,OAAOA,GAAcA,EAAW7a,MAAQ6a,EAAW7a,KAAKoB,MAAQuW,EAAYvW,Q,EAMpF8Y,wBAA0B,SAACY,GACvB,OAAQ/Q,IAAQ+Q,I,EAGpBX,uBAAyB,SAACW,GACtB,QAAK,EAAKZ,wBAAwBY,IAKD,UADHA,EAA2BC,Y,wEAKzD,IAAMD,EAA6BhW,KAAK6V,kCACxC,OACI,kBAAC,GAAD,eACIT,wBAAyBpV,KAAKoV,wBAAwBY,GACtDX,uBAAwBrV,KAAKqV,uBAAuBW,IAChDhW,KAAKjD,Y,GAjCcwD,IAAMnD,WCJ9B+X,GD+CA7X,aAJS,SAAC9C,GACrB,MAAO,CAAEqY,YAAarY,EAAMU,KAAKA,KAAMoN,eAAgB9N,EAAMU,KAAKD,cAGvDqC,CAAyBsY,IEGzB,YAACM,GACZ,IAAKA,EACD,MAAO,YAGX,IAAMC,EAAU,IAAIC,KAAKF,GAGzB,OAtBqC,SAACG,EAASC,GAC/C,GAAID,EAAUC,EAAW,CAErB,MAAM,IAAIC,MADK,2HAInB,IAAMC,EA5C+B,SAACH,EAASC,GAC/C,IAAMG,EAAoBJ,EAAQK,UAAYJ,EAAUI,UACxD,GAAID,EAAoB,EAEpB,MAAO,CAAEE,KADEF,EAAoB,EAAI,QAAU,OAC9BG,WAAYH,GAG/B,IAAMI,EAAqBR,EAAQS,WAAaR,EAAUQ,WAC1D,GAAID,EAAqB,EAErB,MAAO,CAAEF,KADEE,EAAqB,EAAI,SAAW,QAChCD,WAAYC,GAG/B,IAAME,EAAmBV,EAAQW,UAAYV,EAAUU,UACvD,GAAID,EAAmB,EAEnB,MAAO,CAAEJ,KADEI,EAAmB,EAAI,OAAS,MAC5BH,WAAYG,GAG/B,IAAME,EAAoBZ,EAAQa,WAAaZ,EAAUY,WACzD,GAAID,EAAoB,EAEpB,MAAO,CAAEN,KADEM,EAAoB,EAAI,MAAQ,KAC5BL,WAAYK,GAG/B,IAAME,EAAsBd,EAAQe,aAAed,EAAUc,aAC7D,GAAID,EAAsB,EAEtB,MAAO,CAAER,KADEQ,EAAsB,EAAI,OAAS,MAC/BP,WAAYO,GAG/B,IAAME,EAAsBhB,EAAQiB,aAAehB,EAAUgB,aAC7D,OAAID,EAAsB,EAEf,CAAEV,KADEU,EAAsB,EAAI,OAAS,MAC/BT,WAAYS,QAF/B,EAYqBE,CAAiClB,EAASC,GAC/D,OAAKE,EAIC,GAAN,OAAUA,EAAaI,YAAvB,OAAoCJ,EAAaG,KAAjD,QAHW,WAcJa,CAFW,IAAIpB,KAE6BD,ICTxCsB,GA5CM,SAAC,GAKf,IAJH3c,EAIE,EAJFA,KACAoX,EAGE,EAHFA,sBACAD,EAEE,EAFFA,iBAEE,mEAEF,IAAKnX,EAAM,OAAO,KAkBlB,OACI,kBAAC+I,GAAA,EAAD,CAAe5F,UAAU,QACrB,kBAACyK,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,2CACvB,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,wCAnBnB,kBAAC,IAAD,CAAMT,GAAE,iBAAY1C,EAAKJ,SAAWI,EAAK8B,OAGhC,WAChB,IAAM8a,EAAY5c,EAAK6c,UACjBC,EAAgBF,EAAYA,EAAUjU,SAAW,YACjDoU,EAAgBC,GAA+Bhd,EAAKid,WAE1D,OACI,0BAAM9Z,UAAU,0BAAhB,WACa4Z,EADb,OACgCD,GAUvBI,IAEL,6BACI,kBAAC,GAAD,CACIld,KAAMA,EACNoX,sBAAuBA,EACvBD,iBAAkBA,QCF3BgG,G,2MA9BXzd,MAAQ,CAAEyX,iBtFJW,a,EsFMrBO,kBAAoB,WAChB,EAAKjH,SAAS,CAAE0G,iBtFNC,kB,EsFSrBQ,kBAAoB,WAChB,EAAKlH,SAAS,CAAE0G,iBAAkBzP,M,EAGtC0V,kBAAoB,WAChB,EAAK3M,SAAS,CAAE0G,iBAAkBxP,M,EAGtCyP,sBAAwB,SAACxX,GACrB,EAAK8X,oBACL,EAAKzV,MAAM8T,SAASnW,EAAQ,EAAK+X,kBAAmB,EAAKyF,oB,wEAIzD,OACI,kBAAC,GAAD,eACIhG,sBAAuBlS,KAAKkS,uBACxBlS,KAAKxF,MACLwF,KAAKjD,Y,GAzBWwD,IAAMnD,WCR3Bqa,GCQAna,YAAQ,KAAM,CAAEuT,aAAhBvT,EAJW,SAACP,GACvB,OAAO,kBAAC,GAA0BA,M,SCDhCob,GAA8B,CAChC,CAAExY,MAAO,sBAAuBwK,MAAO,WAAYvK,GAAI,oBACvD,CAAED,MAAO,uBAAwBwK,MAAO,WAAYvK,GAAI,oBACxD,CAAED,MAAO,qCAAsCwK,MAAO,WAAYvK,GAAI,oBACtE,CAAED,MAAO,qCAAsCwK,MAAO,WAAYvK,GAAI,qBAGpEwY,GAAgC,CAClC,CAAEzY,MAAO,YAAawK,MAAO,YAAavK,GAAI,eAC9C,CAAED,MAAO,eAAgBwK,MAAO,YAAavK,GAAI,iBACjD,CAAED,MAAO,mBAAoBwK,MAAO,gBAAiBvK,GAAI,qBACzD,CAAED,MAAO,sBAAuBwK,MAAO,eAAgBvK,GAAI,uBAC3D,CAAED,MAAO,0BAA2BwK,MAAO,mBAAoBvK,GAAI,4BAIjEyY,G,2MACFC,kBAAoB,YAA8B,IAA3BnY,EAA0B,EAA1BA,MAAUM,EAAgB,yBAC7C,OAAO,kBAAC8X,GAAA,EAAD,iBAAe9X,EAAeN,K,EAyBzCqY,wBAA0B,YAAqC,IAAlCrY,EAAiC,EAAjCA,MAAOR,EAA0B,EAA1BA,MAAUc,EAAgB,iCAC1D,OACI,oCACI,kBAACsJ,GAAA,EAAKC,MAAN,KAAarK,GACb,kBAACO,GAAA,EAAD,iBAAiBC,EAAWM,M,mFA1BnB,IAAD,OACVgY,EAAyBN,GAA4BhU,KAAI,YAAkC,IAA/BvE,EAA8B,EAA9BA,GAAO8Y,EAAuB,sBAC5F,OACI,kBAAChO,GAAA,EAAD,eACIzN,UAAW,EAAKqb,kBAChBzc,KAAK,QACLe,KAAK,SACLwH,IAAKxE,EACL+Y,UAAQ,GACJD,OAKhB,OACI,kBAAClO,GAAA,EAAD,CAAWC,UAAU,gBACjB,kBAACV,GAAA,EAAKC,MAAN,kBACCyO,K,iDAeT,OACI,kBAACjO,GAAA,EAAD,CAAWC,UAAU,kBACjB,kBAACC,GAAA,EAAD,CACIzN,UAAW+C,KAAKwY,wBAChB5b,KAAK,eACL+C,MAAM,6BACN9D,KAAK,SACL+c,IAAK,EACLC,IAAK,S,6CAMG,IAAD,OAenB,OACI,kBAACrO,GAAA,EAAD,CAAWC,UAAU,kBACjB,kBAACV,GAAA,EAAKC,MAAN,uBAfGoO,GAA8BjU,KAAI,YAAkC,IAA/BvE,EAA8B,EAA9BA,GAAO8Y,EAAuB,sBACtE,OACI,kBAAChO,GAAA,EAAD,eACIzN,UAAW,EAAKqb,kBAChBzc,KAAK,QACLe,KAAK,gBACLwH,IAAKxE,GACD8Y,U,+BAcd,IAAD,EACkC1Y,KAAKjD,MAApCuN,EADH,EACGA,aAAcC,EADjB,EACiBA,aAEtB,OACI,kBAACR,GAAA,EAAD,CAAMnK,GAhGF,kBAgGeyK,SAAUC,EAAaC,IACrCvK,KAAK8Y,oBACN,6BACC9Y,KAAK+Y,2BACN,6BACC/Y,KAAKgZ,uBACN,kBAACtQ,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,cACvB,kBAACH,EAAA,EAAD,CAAQqE,KAAK,KAAKpE,QAAQ,kBAAkBlC,KAAK,SAASU,KAvG9D,mBAuGI,c,GArFegE,IAAMnD,WCpB1B6b,GDkHAhP,aAAU,CACrB1N,KAjHY,kBAkHZ2c,cAAe,CAAE5d,OAAQ,WAAYC,aAAc,GAAI4d,cAAe,aACtEC,kBAAkB,GAHPnP,CAIZoO,IEtHYgB,GCMe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,4BA6B7B,OACI,kBAACtU,GAAD,CACIvF,KALG,kBAACwZ,GAAD,CAA6B1O,aAJf,SAACY,GAlBtBoO,SAASza,KAAK0a,QAoBVF,EAA4BnO,MAQ5BzL,iBAvBA,kBAAC,GAAD,CACI0B,KAAM,kBAAC,IAAD,CAAiBA,KAAMqY,MAC7B9X,QhGhBM,EgGiBN1D,UAAU,8BACVF,QAAQ,YACRoE,KAAK,MALT,UAwBA3D,MAAM,KCvCHkb,GCGiB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,yBAC/B,OACI,kBAAC5Y,GAAA,EAAD,CAAY9C,UAAU,WAClB,kBAAC8C,GAAA,EAAW6Y,QAAZ,KACI,kBAAC7Y,GAAA,EAAWI,KAAZ,KACI,kBAAC,IAAD,CAAiBC,KAAMyY,QAG/B,kBAAC3Z,GAAA,EAAD,CACItD,KAAK,cACL+N,YAAY,eACZmP,SAAUH,MCdXI,GCKgB,SAAC,GAIzB,IAHHC,EAGE,EAHFA,uBACAV,EAEE,EAFFA,4BACAK,EACE,EADFA,yBAEA,OACI,kBAACjR,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,0FACvB,kBAACyK,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAAC,GAAD,CACIqR,uBAAwBA,EACxBV,4BAA6BA,KAGrC,kBAAC5Q,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACsR,GAAD,CAAqBN,yBAA0BA,O,UCnBhDO,GCOgB,SAAC,GAKzB,IAJHC,EAIE,EAJFA,WACA5e,EAGE,EAHFA,aACAC,EAEE,EAFFA,kBACA4e,EACE,EADFA,qBAGMC,EAAa5K,KAAK6K,KAAKH,EAAWpf,OAASQ,GA2DjD,OACI,kBAACmN,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,8CACvB,2CAAiBzC,EAAjB,OAAwC6e,GACxC,kBAACE,GAAA,EAAD,CAAYtc,UAAU,WAElB,kBAACwS,GAAD,CACI9Q,MAAM,aACNC,GAAG,mBACHF,iBAAkB,kBAAC6a,GAAA,EAAWC,MAAZ,CAAkBnd,QArDrB,WAC3B+c,EAAqB,QAsDb,kBAAC3J,GAAD,CACI/Q,iBAAkB,kBAAC6a,GAAA,EAAWE,KAAZ,CAAiBpd,QAhEjB,WAC9B+c,EAAqB3K,KAAKoJ,IAAIrd,EAAoB,EAAG,OAgEzCmE,MAAM,gBACNC,GAAG,oBAlDQ,WAGvB,IAFA,IAAM8a,EAAkB,GADK,WAGpBC,GACLD,EAAgB7c,KACZ,kBAAC0c,GAAA,EAAW9R,KAAZ,CACImS,OAAQpf,IAAsBmf,EAC9BvW,IAAKuW,EACL/a,GAAI+a,EACJtd,QAAS,WA5BrB+c,EA4BiDO,KAEpCA,KARJA,EAAY,EAAGA,GAAaN,EAAYM,IAAc,EAAtDA,GAaT,GAAID,EAAgB3f,OCtDO,GDsD8B,CAAC,IAAD,ECxCpC,SAACS,EAAmB6e,GAC7C,IAAMQ,EAZY,SAACrf,GACnB,OAAKA,EAAoB,EAHGsf,EAIjB,EAEHtf,EAAoB,EANAsf,EAcTC,CAAcvf,GAC3Bwf,EANa,SAACxf,GACpB,OAAQA,EAAoB,EAVAsf,EAeRG,CAAezf,GAE7B0f,EAAU,CAAEC,KAAMN,EAAYO,MAAOJ,GAS3C,OAPmB,IAAfH,GAAoBG,GAAeX,IACnCa,EAAQC,MAAUH,EAAc,GAAMX,EAAa,IAEpC,IAAfQ,IACAK,EAAQE,OAAUC,GAAgC7f,EAAoB,IAGnE,CACHqf,WAAYK,EAAQC,KACpBH,YAAaE,EAAQE,OD6BbE,CAAqB9f,EAAmBkf,EAAgB3f,QAFxD8f,EAFiD,EAEjDA,WACAG,EAHiD,EAGjDA,YAGEO,EAAgB,CAACP,EAAcN,EAAgB3f,OACjD,kBAACwf,GAAA,EAAWiB,SAAZ,CAAqBpX,IAAI,mBAAsB,MAC7CqX,EAAe,CAACZ,EAAa,EAC/B,kBAACN,GAAA,EAAWiB,SAAZ,CAAqBpX,IAAI,kBAAqB,MAElD,MAAM,GAAN,OACOqX,EADP,YAEOf,EAAgBgB,MAAMb,EAAYG,EAAc,IAChDO,GAIX,OAAOb,EAmBEiB,GAED,kBAAClL,GAAD,CACI/Q,iBAAkB,kBAAC6a,GAAA,EAAWqB,KAAZ,CAAiBve,QApErB,WAC1B+c,EAAqB3K,KAAKmJ,IAAIpd,EAAoB,EAAG6e,OAoEzC1a,MAAM,YACNC,GAAG,oBAEP,kBAAC6Q,GAAD,CACI/Q,iBAAkB,kBAAC6a,GAAA,EAAWsB,KAAZ,CAAiBxe,QAjErB,WAC1B+c,EAAqBC,MAiET1a,MAAM,YACNC,GAAG,uBE1CRkc,GA/CE,SAAC,GAOX,IANHC,EAME,EANFA,eACA9G,EAKE,EALFA,eACAqE,EAIE,EAJFA,4BACAK,EAGE,EAHFA,yBACAS,EAEE,EAFFA,qBACGpX,EACD,mIAwBF,OACI,kBAAC0F,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,aACvB,kBAAC,GAAD,CACIqb,4BAA6BA,EAC7BK,yBAA0BA,IAzB9B1U,IAAQ8W,GACD,kBAAC,GAAD,CAAe9G,eAAgBA,IAItC,kBAAC/Q,GAAA,EAAD,CAAWnG,QAAQ,QAAQE,UAAU,aAE7B8d,EAAe5X,KAAI,SAACrJ,GAChB,OAAO,kBAAC,GAAD,CAAcA,KAAMA,EAAMsJ,IAAKtJ,EAAKJ,aAqBlDuK,IAAQ8W,GAEH,KADA,kBAAC7B,GAAD,iBAAwBlX,EAAxB,CAAoCoX,qBAf7B,SAAC4B,GACtB5B,EAAqB4B,SCdd,GAxBA,SAAClhB,EAAMmhB,GAClB,OAAKnhB,GAASA,EAAK8B,KAIdqf,GAAcA,EAAUrf,KAItB9B,EAAK8B,KAAKsf,cAAcD,EAAUrf,MAH9B9B,EAAO,GAAK,EAJZmhB,GAAa,EAAI,GAsBjB,GAZA,SAACnhB,EAAMmhB,GAClB,OAAKnhB,GAASA,EAAKid,UAIdkE,GAAcA,EAAUlE,UAItBjd,EAAKid,UAAUmE,cAAcD,EAAUlE,WAHnCjd,EAAO,GAAK,EAJZmhB,GAAa,EAAI,GCE1BE,GCLK,I,WAVP,WAAYC,GAAY,oBACpBpc,KAAKoc,UAAYA,E,oDAGN,IAAC,IAAD,qBAAN3H,EAAM,yBAANA,EAAM,iBACX,EAAA3P,SAAQC,IAAR,SAAY/E,KAAKoc,WAAjB,OAA+B3H,Q,KAK5B,CDKe,wBAEpB4H,G,2MAKFlI,gBAAkB,YAAmB,IAAhBrM,EAAe,EAAfA,SACjBqU,GAAOG,MAAM,wBAAyBxU,I,EAG1CyU,kBAAoB,SAACxgB,GAAW,IACOT,EAAa,EAAKyB,MAA7CZ,wBAA2Bb,OAEnC,IAAKS,EACD,MAAO,GAGX,OAAQT,GACJ,IAAK,WACD,OAAOS,EAAMygB,KAAKC,IAA8BC,UACpD,IAAK,WACD,OAAO3gB,EAAMygB,KAAKC,IACtB,IAAK,WACD,OAAO1gB,EAAMygB,KAAKC,IAA8BC,UACpD,IAAK,WACL,QACI,OAAO3gB,EAAMygB,KAAKC,M,EAI9BnD,4BAA8B,YAA6B,IAA3Bhe,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACpC,EAAKwB,MAAM4f,iBAAiBrhB,GAC5B,EAAKyB,MAAM6f,gBAAgBrhB,I,EAG/Boe,yBAA2B,SAACkD,GACxB,EAAK9f,MAAM+f,eAAeD,EAAEE,OAAO5S,Q,EAGvC6S,qBAAuB,SAACC,GAAiB,IAAD,EACqC,EAAKlgB,MAAtEZ,wBAA2BZ,EADC,EACDA,aAAcC,EADb,EACaA,kBACjD,GAAIyhB,EAAYliB,QAAUQ,EACtB,OAAO0hB,EAMX,IAAMC,EAAS3hB,GAAgBC,EAAoB,GAC7CgC,EAAKiS,KAAKmJ,IAAIsE,EAAS3hB,EAAc0hB,EAAYliB,QACvD,OAAOkiB,EAAYvB,MAAMwB,EAAQ1f,I,EAGrC2f,eAAiB,WAAO,IACe1hB,EAAkB,EAAKsB,MAAlDZ,wBAA2BV,YACnC,OAAOA,GAAeA,EAAY2hB,cAAchJ,Q,EAGpDiJ,4BAA8B,SAACC,EAAU7hB,GACrC,OAAIA,EACO6hB,EAASzgB,QAAO,SAAA/B,GACnB,IAAM4I,EAAW5I,GAAQA,EAAK8B,KAC9B,OAAO8G,GAAYA,EAAS0Z,cAAcG,SAAS9hB,MAIpD6hB,G,EAGXE,SAAW,SAAC/hB,GACR,IAAMM,EAAK,YAAO,EAAKgB,MAAMhB,OAC7B,OAAO,EAAKwgB,kBAAkB,EAAKc,4BAA4BthB,EAAON,K,mFApEtEuE,KAAKjD,MAAM0gB,iBAAiBzd,KAAKmU,mB,+BAuE3B,IAAD,EAIDnU,KAAKjD,MAFLZ,EAFC,EAEDA,wBACAie,EAHC,EAGDA,qBAGE3e,EAAcuE,KAAKmd,iBACnBphB,EAAQiE,KAAKwd,SAAS/hB,GACtBiiB,EAAiB1d,KAAKgd,qBAAqBjhB,GAEjD,OACI,kBAAC,GAAD,eACIoe,WAAYpe,EACZggB,eAAgB2B,EAChBzI,gBAAiBhQ,IAAQxJ,GACzB6d,4BAA6BtZ,KAAKsZ,4BAClCK,yBAA0B3Z,KAAK2Z,yBAC/BS,qBAAsBA,GAClBje,Q,GA3FYoE,IAAMnD,WAwGhCugB,GAAsB,CACxBF,iBExHW,SAAC7M,GAAD,OAAe,SAAMjJ,GAAN,UAAAI,EAAAC,OAAA,gD1FuCF3B,E0FtCZ,SAACyB,GACTH,EAAS,CAAE9L,K9HHe,qB8HGWpB,QAASqN,EAAS9M,Q1FqCfsL,E0FpCzCsK,E1FqCI9K,GAAMa,IAAI,cAAcH,KAAKH,EAAoBC,G0FxC9B,iC1FuCH,IAACD,EAAoBC,OwFkF5CqW,iBG1HW,SAACiB,GACZ,MAAO,CACH/hB,K/HiBoC,+B+HhBpCpB,QAASmjB,IHwHbxD,qBI3HW,SAAC5e,GACZ,MAAO,CACHK,KhImByC,6BgIlBzCpB,QAASe,IJyHbshB,eK5HW,SAACrhB,GACZ,MAAO,CACHI,KjIoBkC,6BiInBlCpB,QAASgB,IL0HbmhB,gBM7HW,SAACrhB,GACZ,MAAO,CACHM,KlIkBoC,+BkIjBpCpB,QAASc,KCHFugB,GPgIAxe,aAfS,SAAC9C,GACrB,MAAO,CACHuB,MAAOyI,OAAO0H,OAAO1R,EAAMuB,OAC3BI,wBAAyB3B,EAAM2B,2BAYCwhB,GAAzBrgB,CAA6C+e,IQ1GtDwB,I,OAAgB,SAACnjB,GACnB,GAAIA,EACA,OACI,kBAACqH,GAAA,EAVW,SAACrH,GACrB,IACMsI,EAAatI,EAAS,CAAEojB,GAAI,GAAIC,GAAI,GAAI9f,UAAW,SAAY,GAErE,OAAO,eAHY,CAAE+f,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAGvC,GAA2Blb,GAMVmb,CAAgBzjB,GACrB,kBAAC,GAAD,CAAMA,OAAQA,EAAQ0J,IAAK1J,OC1B5B0jB,GDwCI,SAACrhB,GAChB,IAAMrC,EAASqC,EAAMshB,MAAMC,OAAO1e,GAE5B2e,EACF,kBAAC7V,EAAA,EAAD,CAAWC,OAAK,EAAC1K,UAAU,iCACvB,kBAAC6D,GAAA,EAAD,CAAK7D,UAAU,yBAbD,SAACvD,GACvB,OACI,kBAACqH,GAAA,EA5BmB,SAACrH,GAEzB,OAAIA,EACO,CAAEsjB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGH,GAAI,EAAGD,GAAI,EAAG7f,UAAU,qBAAD,OAFtC,wBAIR,CAAEA,UAJM,uBA2BNugB,CAAoB9jB,GACzB,kBAAC,GAAD,OAWK+jB,CAAkB/jB,GAClBmjB,GAAcnjB,KAK3B,OAAO2O,GAAWkV,IEjCPG,GAbG,WACd,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI3hB,UAAWmM,KACjC,kBAAC,IAAD,CAAOuV,OAAK,EAACC,KAAK,cAAc3hB,UAAWmhB,KAC3C,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,SAAS3hB,UAAWwO,KACtC,kBAAC,IAAD,CAAOkT,OAAK,EAACC,KAAK,YAAY3hB,UAAWmQ,QCF1CyR,GATH,SAAC9hB,GACT,OAAIA,EAAM+hB,uBACC,yBAAK7gB,UAAU,oBAAf,4BAGJ,kBAAC,GAAD,OC+CI8gB,G,2MA9CXvkB,MAAQ,CACJskB,wBAAwB,G,EAwB5BE,kBAAoB,WAChB,EAAKzT,SAAS,CAAEuT,wBAAwB,K,EAG5CG,qBAAuB,WAEnB,EAAK1T,SAAS,CAAEuT,wBAAwB,K,EAG5CI,kBAAoB,WAChB,EAAKniB,MAAMoiB,2BACX,EAAKpiB,MAAMqiB,yB,mFzChCiB,IAAC5K,EyCC7BxU,KAAKjD,MAAM2W,gBAAgB1T,KAAKif,sBzCDHzK,EyCERxU,KAAKif,qBzCD9B1L,GAAOK,GAAG,aAAcY,GALK,SAACA,GAC9BjB,GAAOK,GAAG,UAAWY,GyCMjBwK,CAAkBhf,KAAKgf,mBzCcE,SAACxK,GAC9B1P,QAAQC,IAAI,cACZwO,GAAOK,GAAGI,IAA2B,SAACU,GAClC5P,QAAQC,IAAI,mBAAoB2P,GAC5BA,IAAaV,IACbQ,OyClBJ0K,CAAkBlf,KAAKkf,mBACvBlf,KAAKjD,MAAMsiB,aACXrf,KAAKjD,MAAMqiB,0B,yCAGIE,GACf,IAAMC,EAAWD,EAAUpkB,KACrB2X,EAAc7S,KAAKjD,MAAM7B,MAG1BqkB,GAAYA,EAASjjB,QAAUuW,GAAeA,EAAYvW,MAI/D0D,KAAKjD,MAAMqiB,0B,+BAkBX,OACI,kBAAC,GAAD,iBAAapf,KAAKxF,MAAWwF,KAAKjD,Y,GA1CnBwD,IAAMnD,WCI3BugB,GAAqB,CACvBjK,gBCXW,SAACC,GAAD,OAAwB,SAAOhM,GAAP,UAAAI,EAAAC,OAAA,mEAAAD,EAAA,MAO7B2L,GAAgBC,IAPa,OAQnChM,EAAS,CAAE9L,K1IXkB,oB0IWOpB,QAAS,CAAEH,WAAW,KARvB,uCDYnC+kB,WpGOW,kBAAM,SAAM1X,GAAN,UAAAI,EAAAC,OAAA,gDDDU3B,ECGvB,SAACyB,GAAD,OAAcL,GAAwBK,EAAUH,IDHLrB,ECI3C,gBAAGwB,EAAH,EAAGA,SAAH,OAAkBhD,QAAQC,IAAI,0BAA2B+C,IDHtDhC,GAAMa,IAAI,cAAcH,KAAKH,EAAoBC,GCAvC,iCDDS,IAACD,EAAoBC,OqGL/C8Y,sBEbW,kBAAM,SAAMzX,GAAN,UAAAI,EAAAC,OAAA,gDvGuEe3B,EuGtEZ,SAAC,GAAc,IAAZrL,EAAW,EAAXA,KACnB8J,QAAQC,IAAI,kBAAmB/J,GAC/B2M,EAAS,CAAE9L,K3IKoB,0B2ILWpB,QAASO,KvGoEHsL,EuGhEhD,gBAAGwB,EAAH,EAAGA,SAAH,OAAkBhD,QAAQC,IAAI,8BAA+B+C,IvGiE1DhC,GAAMa,IAAI,sBAAsBH,KAAKH,EAAoBC,GuGxE/C,iCvGuEc,IAACD,EAAoBC,OqGzDpD6Y,yBGfW,WACX,MAAO,CACHtjB,K5IsBkB,a4IrBlBpB,QAAS,CAAEmC,KAAM,sBCHViiB,GJuBAvhB,aALS,SAAC9C,GAAW,IACxBU,EAASV,EAATU,KACR,MAAO,CAAEA,KAAMA,GAAQA,EAAKA,QAGQyiB,GAAzBrgB,EAhBE,SAACP,GACd,OAAO,kBAAC,GAAiBA,M,SKgBdyiB,GAtBM,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,OAAQpB,EAAuB,EAAvBA,QAASqB,EAAc,EAAdA,QACzD,OACI,kBAACC,GAAA,EAAD,CACIrhB,KAAMihB,EACNK,OAAQJ,EACRK,UAAQ,GAER,kBAACF,GAAA,EAAM3W,OAAP,CAAc8W,aAAW,EAACF,OAAQJ,GAC9B,kBAACG,GAAA,EAAMxgB,MAAP,KACKsgB,IAGT,kBAACE,GAAA,EAAMI,KAAP,KACK1B,GAEL,kBAACsB,GAAA,EAAMK,OAAP,KACKN,KCgBXO,I,OAAyB,SAAC1f,GAAe,IACnCN,EAAgBM,EAAhBN,MAAOoJ,EAAS9I,EAAT8I,KACTI,EAAYJ,EAAKE,SAAWF,EAAK7I,MACjC0f,GAAsB7W,EAAKG,WAAaC,EAOxC0W,EANe,CACjB,CAAE1gB,MAAO,UAAWwK,MAAO,WAC3B,CAAExK,MAAO,SAAUwK,MAAO,UAC1B,CAAExK,MAAO,WAAYwK,MAAO,aAGChG,KAAI,SAAAmc,GACjC,OACI,kBAACvW,GAAA,EAAKyD,MAAN,CAAY/C,UAAS,mBAAc6V,EAAOnW,OAAS/F,IAAKkc,EAAOnW,OAC3D,kBAACpJ,GAAA,EAAD,KACI,kBAACgJ,GAAA,EAAKwW,MAAN,iBACQpgB,EACAmgB,EAFR,CAGIzkB,KAAK,QACL+N,UAAWD,EACXE,QAASuW,KAEb,kBAACrf,GAAA,EAAWC,OAAZ,KA/CU,SAACwf,GAC3B,IAAMC,EAAa,SAACC,GAChB,IAAMC,EAAW,kBAAC,IAAD,CAAiBvf,KAAMwf,MACxC,OAAO,kBAACnQ,GAAD,eAAgB/Q,iBAAkBihB,GAAcD,KAI3D,OAAQF,GACJ,IAAK,UACD,OAAOC,EAAW,CACd7gB,GAAI,mBACJD,MAAO,yEAEf,IAAK,WACD,OAAO8gB,EAAW,CACd7gB,GAAI,mBACJD,MAAO,uEAEf,IAAK,SACD,OAAO8gB,EAAW,CACd7gB,GAAI,mBACJD,MAAO,kEA2BEkhB,CAAsBP,EAAOnW,aAOlD,OACI,kBAACJ,GAAA,EAAKyD,MAAN,CAAY/C,UAAU,yBAClB,kBAACV,GAAA,EAAKC,MAAN,KAAY,sDACXqW,EACA1W,GAAa,kBAACpL,EAAA,EAAD,CAAOR,QAAQ,UAAUwL,EAAK7I,UAKlDogB,GAAsB,SAACrgB,GAAe,IAChCN,EAAgBM,EAAhBN,MAAOoJ,EAAS9I,EAAT8I,KACTI,EAAYJ,EAAKE,SAAWF,EAAK7I,MACjC0f,GAAsB7W,EAAKG,WAAaC,EAE9C,OACI,kBAACa,GAAA,EAAD,CAAWC,UAAU,yBACjB,kBAACV,GAAA,EAAKC,MAAN,KAAY,gCAASvJ,EAAUd,QAC/B,kBAACO,GAAA,EAAD,iBAAiBO,EAAeN,EAAhC,CAAuCyJ,UAAWD,EAAWE,QAASuW,KACtE,kBAACrW,GAAA,EAAKgX,QAAQvf,SAAd,CAAuBW,KAAK,KAAKtG,KAAK,WAAW0N,EAAK7I,SAuBnDsgB,GAlBY,SAACjkB,GAAW,IAC3BwN,EAAiBxN,EAAjBwN,aACR,OACI,kBAACR,GAAA,EAAD,CAAMkC,YAAU,EAACrM,GAAG,mBAAmByK,SAAUE,GAC7C,kBAACG,GAAA,EAAD,CACIzN,UAAW6jB,GACXlkB,KAAK,WACL+C,MAAM,mBACNgL,YAAY,6BACZgO,UAAQ,IAEZ,6BACA,kBAACjO,GAAA,EAAD,CAAOzN,UAAWkjB,GAAwBvjB,KAAK,eClG5CqkB,GCeAhX,aAAU,CACrB1N,KAAM,iBACN2N,SCnBW,SAACgC,GACZ,IAAM9B,EAAS,GASf,OARK8B,EAAOxI,WACR0G,EAAO1G,SAAW,6BAGjBwI,EAAOpF,WACRsD,EAAOtD,SAAW,6CAGfsD,IDOIH,EAXQ,SAAClN,GAAW,IACvBuN,EAA+BvN,EAA/BuN,aAAcC,EAAiBxN,EAAjBwN,aAEtB,OACI,kBAAC,GAAD,CACIA,aAAcD,EAAaC,QEmCxB2W,GAtCa,SAAC,GAMtB,IALHC,EAKE,EALFA,eACAzB,EAIE,EAJFA,UACA0B,EAGE,EAHFA,mBACAC,EAEE,EAFFA,mBACA9W,EACE,EADFA,aAsBA,OACI,kBAAC,GAAD,CACIoV,OAAO,cACPC,QAvBgB,WACpB,IAAMjW,EAAYyX,GAAsBA,EAAmBE,WAC3D,OACI,oCACI,kBAACxjB,EAAA,EAAD,CAAQC,QAAQ,YAAYV,QAASqiB,GAArC,UACA,kBAAC,GAAD,CACI/c,SAAU0e,EACV9kB,KAAK,mBACLV,KAAK,SACLuG,SAAUuH,EACV1L,UAAS,iBAAY0L,EAAY,cAAgB,cAahD4X,GACThD,QAPG,kBAAC,GAAD,CAAgBhU,aAAcA,IAQjCkV,QAAS0B,EACTzB,UAAWA,KCLR8B,G,2MAzBXhnB,MAAQ,CAAE6mB,mB9HJW,a,E8HMrBI,oBAAsB,WAClB,EAAKlW,SAAS,CAAE8V,mB9HNC,kB,E8HSrBK,oBAAsB,WAClB,EAAKnW,SAAS,CAAE8V,mBAAoB7e,M,EAGxCmf,oBAAsB,WAClB,EAAKpW,SAAS,CAAE8V,mBAAoB5e,M,EAGxC8H,aAAe,YAA6B,IAA1B7G,EAAyB,EAAzBA,SAAUoD,EAAe,EAAfA,SACxB,EAAK2a,uBAEL5a,EADuB,EAAK9J,MAApB8J,YACGnD,EAAUoD,EAAU,EAAK4a,oBAAqB,EAAKC,sB,wEAI9D,OAAO,kBAAC,GAAD,eAAqBpX,aAAcvK,KAAKuK,cAAkBvK,KAAKxF,MAAWwF,KAAKjD,Y,GAtBvDwD,IAAMnD,WCR9BwkB,GCgBAtkB,aAPS,SAAC9C,GACrB,MAAO,CACH2mB,eAAgB3mB,EAAMiC,MAAMtB,aAAyC,eAA1BX,EAAMiC,MAAMrB,UACvDgmB,mBAAoB5mB,EAAM+B,KAAN,kBAMxB,CAAEsK,WCjBS,SAACnD,EAAUoD,EAAU6J,EAAWC,GAAhC,OAA8C,SAAOjJ,GAAP,UAAAI,EAAAC,OAAA,gDACzDnB,GACInD,EACAoD,GACA,SAACgB,GACGH,EAAS,CAAE9L,KvJJI,cuJIepB,QAASqN,EAAS9M,OAChD2V,MAEJC,GARqD,uCDiBzB8O,UAAWmC,GAFhCvkB,EAXc,SAACP,GAC1B,OAAO,kBAAC,GAA6BA,MEFnC+kB,GAAsB,SAAC,GAAkE,IAAhE3hB,EAA+D,EAA/DA,MAAOR,EAAwD,EAAxDA,MAAO4J,EAAiD,EAAjDA,KAAMwY,EAA2C,EAA3CA,uBAA2BthB,EAAgB,iEAClFgJ,EAA8CF,EAA9CE,QAAS/I,EAAqC6I,EAArC7I,MAAOgJ,EAA8BH,EAA9BG,SAAUiC,EAAoBpC,EAApBoC,gBAE5BhC,EADcjJ,GAASA,EAAMkL,wBAA4BnC,GAAW/I,GAC1CqhB,EAC1BjX,EAAciX,GAA2BrhB,IAAUA,EAAMkL,uBAAyBlL,EAAM8K,OAAS9K,GAEvG,OACI,kBAAC8J,GAAA,EAAD,CAAWC,UAAU,aACjB,kBAAC3J,GAAA,EAAD,KAAYnB,GACZ,kBAACO,GAAA,EAAD,eACIjC,UAAW0N,EAAkB,gBAAkB,GAC/C9B,SAAW8B,IAAoBjC,IAAaC,EAC5CC,UAAWD,GACPxJ,EACAM,IAER,kBAACP,GAAA,EAAYsB,SAAb,CAAsB3F,KAAK,WAAWiP,KAK5CkX,GAAiB,SAACtnB,GAAD,OAAYuK,IAAQvK,GAAU,0BAAuBunB,GAiB7DC,GAfU,SAAC,GAA8C,IAA5C3X,EAA2C,EAA3CA,aAAcwX,EAA6B,EAA7BA,uBACtC,OACI,kBAAChY,GAAA,EAAD,CAAMnK,GAAG,iBAAiByK,SAAUE,GAChC,kBAACG,GAAA,EAAD,CACIzN,UAAW6kB,GACXllB,KAAK,SACL+C,MAAM,gBACNgL,YAAY,UACZoX,uBAAwBA,EACxB7X,SAAU8X,OCnCpBG,GAAc,SAAC3W,EAAQ4W,GACzB,MAAO,CAAE1nB,OAAQ,CAAE8Q,SAAQI,wBAAwB,EAAMwW,wBCF9CC,GCaApY,aAAU,CACrB1N,KAAM,eACN8P,cFCW,SAACH,GAaZ,OAZgB,IAAII,SAAQ,SAACC,EAASC,GAClC,GAAIvH,IAAQiH,EAAOxR,QACf,OAAO8R,EAAO2V,GAAY,kCAG9Bvb,GAAQsF,EAAOxR,QACV8L,KAAK+F,GACLpF,OAAM,YAAmB,IAAhBW,EAAe,EAAfA,SACN0E,EApBa,SAAC1E,GAC1B,OAAQA,EAASlD,QACb,KAAK,IACD,OAAOud,GAAY,2DAA2D,GAClF,KAAK,IACD,OAAOA,GAAY,iCACvB,QACI,OAAOA,GAAY,wDAaRG,CAAqBxa,WETxC2E,kBAAmB,CAAC,WAHTxC,EATW,SAAC,GAA4D,IAA1DK,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,aAAcwX,EAA6B,EAA7BA,uBACrD,OACI,kBAAC,GAAD,CACIxX,aAAcD,EAAaC,GAC3BwX,uBAAwBA,OCgErBQ,GAnEW,SAAC,GAOpB,IANHR,EAME,EANFA,uBACAZ,EAKE,EALFA,eACAzB,EAIE,EAJFA,UACAnV,EAGE,EAHFA,aACAiY,EAEE,EAFFA,iBACAvQ,EACE,EADFA,iBAkDA,OACI,kBAAC,GAAD,CACI0N,OAAO,kBACPC,QAnBA,oCACI,kBAAC9hB,EAAA,EAAD,CAAQT,QAASqiB,EAAW3hB,QAAQ,qBAApC,UAhCoB,WACxB,IAAM0kB,EAAcD,GAAoBA,EAAiBC,YAInD9Y,EAHa6Y,IACfA,EAAiBlB,YAAcmB,GAAeD,EAAiB7W,kBAEnCoW,EAC1BW,EAAwB,CAC1B7mB,KAAM,SACNU,KAAM,iBACN6F,SAAUuH,EACV1L,UAAU,UAAD,OAAY0L,EAAY,cAAgB,YAGrD,OAAI8Y,GAAeA,EAAY/nB,OAAO0nB,mBAE9B,kBAAC,GAAD,CACIzf,SAAUsP,EACVrP,qBAAsB8f,IAM9B,kBAAC,GAAD,CACI/f,SAAUsP,EACVrP,qBAAsB8f,IAUzBC,IAgBLpE,QAVG,kBAAC8D,GAAD,CACH9X,aAAcA,EACdwX,uBAAwBA,IASxBtC,QAAS0B,EACTzB,UAAWA,KCDRkD,G,2MAtDXpoB,MAAQ,CACJyX,iBvIRiB,YuISjB8P,uBAAwB,M,EAwB5BvP,kBAAoB,WAChB,EAAKjH,SAAS,CAAE0G,iBvIjCC,kB,EuIoCrBQ,kBAAoB,WAChB,EAAKlH,SAAS,CAAE0G,iBAAkBzP,M,EAGtC0V,kBAAoB,WAChB,EAAK3M,SAAS,CAAE0G,iBAAkBxP,M,EAGtCogB,qBAAuB,YAAiB,IAAdnoB,EAAa,EAAbA,OACtB,EAAK8X,oBACL,EAAKzV,MAAM8T,SAASnW,EAAQ,EAAK+X,kBAAmB,EAAKyF,oB,oFAnCvC,IAAD,OACjB,IAAIlY,KAAKxF,MAAMunB,uBAAf,CADiB,MAK2B/hB,KAAKjD,MAAzCylB,EALS,EAKTA,iBAAkBM,EALT,EAKSA,cACpBvmB,EAAOimB,GAAsC,GAGnD,KAFsBjmB,EAAK+kB,YAAc/kB,EAAKkmB,aAAelmB,EAAKoP,iBAE9C,CAChB,IAAMjR,EAAS6B,EAAK2P,QAAU3P,EAAK2P,OAAOxR,OAE1CkM,GAAQlM,GAAQ8L,MAAK,SAAAsB,IC/BlB,SAAChN,EAAMqY,GAClB,SAAKrY,GAASA,EAAKF,SAAYuY,KAQJ,IAJJrY,EAAKF,QAAQwY,WAAU,SAAAC,GAC1C,OAAOA,EAAOnY,MAAQmY,EAAOnY,KAAKoB,MAAQ6W,MD2B9BG,CADSxL,EAAS9M,KACC8nB,IACnB,EAAKvX,SAAS,CAAEwW,uBAAwB,6CAE7C5a,Y,+BAsBP,OACI,kBAAC,GAAD,eACIoD,aAAcvK,KAAK6iB,sBACf7iB,KAAKjD,MACLiD,KAAKxF,Y,GAjDY+F,IAAMnD,WEX5B2lB,GCkBAzlB,aATS,SAAC9C,GAAW,IACxBU,EAASV,EAATU,KACR,MAAO,CACHimB,eAAgB3mB,EAAMiC,MAAMtB,aAAyC,aAA1BX,EAAMiC,MAAMrB,UACvDonB,iBAAkBhoB,EAAM+B,KAAN,aAClBumB,cAAe5nB,GAAQA,EAAKA,MAAQA,EAAKA,KAAKoB,OAId,CAAEojB,YAAW7O,aAAtCvT,EAbY,SAACP,GACxB,OAAO,kBAAC,GAA2BA,MCJjC+jB,GAAsB,SAAC,GAAyC,IAAvC3gB,EAAsC,EAAtCA,MAAOR,EAA+B,EAA/BA,MAAUqjB,EAAqB,iCACjE,OACI,kBAACxY,GAAA,EAAD,CAAWC,UAAU,yBACjB,kBAACV,GAAA,EAAKC,MAAN,KAAY,gCAASrK,IACrB,kBAACO,GAAA,EAAD,iBAAiB8iB,EAAoB7iB,MAoBlC8iB,GAfY,SAAC,GAAgC,IAA9B1Y,EAA6B,EAA7BA,aAAcL,EAAe,EAAfA,SACxC,OACI,kBAACH,GAAA,EAAD,CAAMkC,YAAU,EAACrM,GAAG,mBAAmByK,SAAUE,GAC7C,kBAACG,GAAA,EAAD,CACIzN,UAAW6jB,GACXlkB,KAAK,WACL+C,MAAM,aACNgL,YAAY,uBACZT,SAAUA,EACVyO,UAAQ,MChBlBuK,G,YACF,WAAYnmB,GAAQ,IAAD,ECPGjC,EDOH,4BACf,4CAAMiC,KAQDomB,yBChBaroB,EDgB+B,EAAKiC,MAAMjC,KChBlC,SAAAsoB,GAC9B,OAAOtoB,GAAQsoB,IAAwBtoB,EAAK8B,UAAOqlB,EAAY,wBDM5C,E,sEAYT,IAAD,EACwDjiB,KAAKjD,MAA1DjC,EADH,EACGA,KAAMyP,EADT,EACSA,aAAc8Y,EADvB,EACuBA,eAAgB/Y,EADvC,EACuCA,aAC5C,OACI,kBAAC,GAAD,CACIxP,KAAMA,EACNwoB,mBAAoBD,EACpB9Y,aAAcD,EAAaC,GAC3BL,SAAUlK,KAAKmjB,8B,GApBG5iB,IAAMnD,WEJzBmmB,GF8BAtZ,aAAU,CACrB1N,KAAM,oBADK0N,CAEZiZ,IGiDYM,GAxEa,SAAC,GAOtB,IANHC,EAME,EANFA,mBACAH,EAKE,EALFA,mBACAjoB,EAIE,EAJFA,WACA8lB,EAGE,EAHFA,eACAzB,EAEE,EAFFA,UACAnV,EACE,EADFA,aAuDA,OACI,kBAAC,GAAD,CACIoV,OAAO,cACPC,QArCgB,WACpB,IAIM8D,EAHKD,IAAuBjhB,IAC1BihB,IAAuBhhB,GAEc,UAAY,SACzD,OACI,oCACI,kBAAC3E,EAAA,EAAD,CAAQC,QAAQ,oBAAoBV,QAASqiB,GAAYgE,GA1B1C,WACvB,IAAMpC,EAAagC,EAAqBA,EAAmBhC,WAAa,KAClE3X,EAAY2X,GAAcA,EAAW5d,SAE3C,OACI,kBAAC,GAAD,CACIf,SAAU8gB,EACV7gB,qBAAsB,CAClB/G,KAAM,SACN,KAAQ,mBACRkC,QAAS,SACTqE,SAAUuH,EACV1L,UAAU,UAAD,OAAY0L,EAAY,cAAgB,cAepDga,IA4BIpC,GACThD,QAxBgB,WAAO,IACnBzjB,EAASO,EAATP,KACF4I,EAAW5I,EAAOA,EAAK8B,KAAO,YACpC,OACI,kBAACkF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKgc,GAAI,IACL,kBAACwF,GAAD,CACIhZ,aAAcA,EACdzP,KAAMA,KAGd,kBAACiH,GAAA,EAAD,KACI,uBAAG9D,UAAU,wBAAb,sBACuB,gCAASyF,GADhC,yCAYCkgB,GACTnE,QAAS0B,EACTzB,UAAWA,KCtEjBmE,G,2MACFC,uBAAyB,WAAO,IAAD,EAOvB,EAAK/mB,MALLgnB,EAFuB,EAEvBA,oBACAC,EAHuB,EAGvBA,oBACAC,EAJuB,EAIvBA,iBACAld,EALuB,EAKvBA,WACcjM,EANS,EAMvBO,WAAcP,KAGlBipB,IACAhd,EAAWjM,EAAKJ,OAAQspB,EAAqBC,I,wEAGvC,IAAD,EAODjkB,KAAKjD,MALLsmB,EAFC,EAEDA,eACAI,EAHC,EAGDA,mBACApoB,EAJC,EAIDA,WACA8lB,EALC,EAKDA,eACAzB,EANC,EAMDA,UAGJ,OACI,kBAAC,GAAD,CACI4D,mBAAoBD,EACpBI,mBAAoBA,EACpBpoB,WAAYA,EACZ8lB,eAAgBA,EAChBzB,UAAWA,EACXnV,aAAcvK,KAAK8jB,6B,GA9BAvjB,IAAMnD,WA6C1BE,gBATS,SAAC9C,GAAW,IACxBiC,EAAUjC,EAAViC,MACR,MAAO,CACH0kB,eAAgB1kB,EAAMtB,aAAmC,eAApBsB,EAAMrB,UAC3CC,WAAYoB,EAAMpB,WAClBgoB,eAAgB7oB,EAAM+B,KAAK,uBAM/B,CAAEmjB,UAAWmC,EAAiB9a,WCpDnB,SAACrM,EAAQiW,EAAWC,GAApB,OAAkC,SAAMjJ,GAAN,UAAAI,EAAAC,OAAA,gDAC7CjB,GAAWrM,GAAQ8L,MAAK,SAAAxK,GACpB2U,IACAhJ,EAAS,CAAE9L,KvKDQ,cuKCWpB,QAASC,OACxCyM,MAAMyJ,GAJoC,wCDkDlCtT,CAGbumB,IEtDaK,G,2MCUX1pB,MAAQ,CAAEipB,mBnJLW,a,EmJOrBM,oBAAsB,WAClB,EAAKxY,SAAS,CAAEkY,mBnJPC,kB,EmJUrBO,oBAAsB,WAClB,EAAKzY,SAAS,CAAEkY,mBAAoBjhB,M,EAGxCyhB,iBAAmB,WACf,EAAK1Y,SAAS,CAAEkY,mBAAoBhhB,M,wEAIpC,OACI,kBAAC,GAAD,eACIshB,oBAAqB/jB,KAAK+jB,oBAC1BC,oBAAqBhkB,KAAKgkB,oBAC1BC,iBAAkBjkB,KAAKikB,kBACnBjkB,KAAKxF,Y,GArBc+F,IAAMnD,WCmD9B+mB,GApDY,SAAC,GAMrB,IALHrpB,EAKE,EALFA,KACAqmB,EAIE,EAJFA,eACAzB,EAGE,EAHFA,UACA0E,EAEE,EAFFA,uBACAC,EACE,EADFA,kBAoCA,OACI,kBAAC,GAAD,CACI1E,OAAO,aACPC,QAjBgB,WACpB,IAIM8D,EAHKW,IAAsB7hB,IACzB6hB,IAAsB5hB,GAEe,UAAY,SACzD,OACI,oCACI,kBAAC3E,EAAA,EAAD,CAAQC,QAAQ,oBAAoBV,QAASqiB,GAAYgE,GAlB7D,kBAAC,GAAD,CACI/gB,SAAU0hB,EACVzhB,qBAAsB,CAClB7E,QAAS,SACTV,QAAS+mB,MAuBR7C,GACThD,QArCgB,WACpB,IAAM7a,EAAW,gCAAS5I,EAAOA,EAAK8B,KAAO,aAC7C,OAAO,uBAAGqB,UAAU,wBAAb,2CACsCyF,EADtC,KAmCMkgB,GACTnE,QAAS0B,EACTzB,UAAWA,KClBRpiB,gBARS,SAAC9C,GAAW,IACxBiC,EAAUjC,EAAViC,MACR,MAAO,CACH0kB,eAAgB1kB,EAAMtB,aAAmC,cAApBsB,EAAMrB,UAC3CC,WAAYoB,EAAMpB,cAMtB,CAAEqkB,UAAWmC,EAAiByC,UC7BnB,SAACxpB,EAAM6V,EAAWC,GAAlB,OAAgC,SAACjJ,EAAU4c,GACtD,IAAKzpB,EACD,OAAO8V,EAAU,IAAI2F,MAAM,CAAEzO,SAAU,uBAG3C,IxI6CsBpN,EAAQ8pB,EAAUne,EAAoBC,EwI7CtDkI,EAAS+V,IAAWrpB,KAAKA,KAAKoB,IAChCmoB,EAfmB,SAAC3pB,EAAM0T,GAC9B,IAAK,IAAIkW,EAAI,EAAGA,EAAI5pB,EAAKF,QAAQG,OAAQ2pB,IAAK,CAC1C,IAAIrR,EAASvY,EAAKF,QAAQ8pB,GAC1B,GAAIrR,GAAUA,EAAOnY,MAAQmY,EAAOnY,KAAKoB,MAAQkS,EAC7C,OAAO6E,GAWOsR,CAAmB7pB,EAAM0T,GAE/C,IAAKiW,EACD,OAAO7T,EAAU,IAAI2F,MAAM,CAAEzO,SAAU,wBxIyCrBpN,EwItCZI,EAAKJ,OxIsCe8pB,EwItCPC,EAAgBnoB,IxIuChCwJ,GAAMkB,OAAN,qBAA2BtM,EAA3B,oBAA6C8pB,IAAYhe,KAAKH,EAAoBC,IwIvC7CE,MAAK,SAAAsB,GAC7CH,EAAS,CACL9L,K5KnBc,a4KoBdpB,QAAS,CACLC,OAAQI,EAAKJ,OACbC,eAAgBmN,EAAS9M,KAAKJ,WAGtC+V,EAAU7I,MACXX,MAAMyJ,MDMEtT,EAhCa,SAAC,GAA6C,IAA7BxC,EAA4B,EAA1CO,WAAcP,KAAWkI,EAAiB,8BAQjEme,EAGAne,EAHAme,eACAzB,EAEA1c,EAFA0c,UACA2E,EACArhB,EADAqhB,kBAGJ,OACI,kBAAC,GAAD,CACIvpB,KAAMA,EACN4kB,UAAWA,EACXyB,eAAgBA,EAChBkD,kBAAmBA,EACnBD,uBAlBuB,WAAO,IAC1BE,EAAuEthB,EAAvEshB,UAAWM,EAA4D5hB,EAA5D4hB,mBAAoBC,EAAwC7hB,EAAxC6hB,mBAAoBC,EAAoB9hB,EAApB8hB,gBAC3DF,IACAN,EAAUxpB,EAAM+pB,EAAoBC,SET7BC,G,2MCSXvqB,MAAQ,CAAE6pB,kBxJJW,a,EwJMrBO,mBAAqB,WACjB,EAAKrZ,SAAS,CAAE8Y,kBxJNC,kB,EwJSrBQ,mBAAqB,WACjB,EAAKtZ,SAAS,CAAE8Y,kBAAmB7hB,M,EAGvCsiB,gBAAkB,WACd,EAAKvZ,SAAS,CAAE8Y,kBAAmB5hB,M,wEAInC,OACI,kBAAC,GAAD,eACImiB,mBAAoB5kB,KAAK4kB,mBACzBC,mBAAoB7kB,KAAK6kB,mBACzBC,gBAAiB9kB,KAAK8kB,iBAClB9kB,KAAKxF,Y,GArBa+F,IAAMnD,WCNtC0jB,GAAsB,SAAC,GAAyC,IAAvC3gB,EAAsC,EAAtCA,MAAOR,EAA+B,EAA/BA,MAAUqjB,EAAqB,iCACjE,OACI,kBAACxY,GAAA,EAAD,CAAWC,UAAU,6BACjB,kBAACV,GAAA,EAAKC,MAAN,KAAY,gCAASrK,IACrB,kBAACO,GAAA,EAAD,iBAAiB8iB,EAAoB7iB,MAmBlC6kB,GAdY,SAAC,GAAsB,IAApBza,EAAmB,EAAnBA,aAC1B,OACI,kBAACR,GAAA,EAAD,CAAMnK,GAAG,mBAAmByK,SAAUE,GAClC,kBAACG,GAAA,EAAD,CACIzN,UAAW6jB,GACXlkB,KAAK,kBACL+C,MAAM,oBACNgL,YAAY,uCACZgO,UAAQ,MCnBTsM,GCOAhb,aAAU,CACrB1N,KAAM,oBADK0N,EAJa,SAAC,GAAoC,IAAlCM,EAAiC,EAAjCA,aAAcD,EAAmB,EAAnBA,aACzC,OAAO,kBAAC,GAAD,CAAoBC,aAAcD,EAAaC,QCEpD2a,I,OAAuB,SAAC,GAA2B,IAAzBhqB,EAAwB,EAAxBA,KAAMiqB,EAAkB,EAAlBA,YAElC,OACI,kBAACjhB,GAAA,EAAUuE,KAAX,CACIxK,UAAU,0BAEV,kBAACH,EAAA,EAAD,CAAQC,QAAQ,YAAYE,UAAU,iBAAiBZ,QAAS8nB,GAC3DjqB,EAAKuI,aAMhB2hB,GAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACtB,WACf,IAAMC,EAAergB,IAAQogB,GAC7B,MAAO,CACHE,KAAMD,EAAe,2BAAH,4BAAqDD,EAArD,KAClBjkB,KAAMkkB,EAAeE,IAASC,KAIf9hB,GAAf4hB,EATiC,EASjCA,KAAMnkB,EAT2B,EAS3BA,KACd,OAEI,yBAAKnD,UAAU,iGACX,kBAAC,IAAD,CAAiBmD,KAAMA,EAAMe,KAAK,OAClC,uBAAGlE,UAAU,8BAA8BsnB,KCjCxCG,GDsCU,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUN,EAAiC,EAAjCA,cAAeF,EAAkB,EAAlBA,YACjD,OAAIlgB,IAAQ0gB,GACD,kBAAC,GAAD,CAAeN,cAAeA,IAIrC,yBAAKpnB,UAAU,mEACX,uBAAGA,UAAU,YAAb,SACW0nB,EAAS5qB,OACf,IAFL,OAEc4qB,EAAS5qB,OAAS,EAAI,KAAO,IAF3C,aAGesqB,EAHf,KAKA,kBAACnhB,GAAA,EAAD,CAAWjG,UAAU,iBAAiBF,QAAQ,SACzC4nB,EAASxhB,KAAI,SAAAjJ,GACV,OACI,kBAAC,GAAD,CACIkJ,IAAKlJ,EAAKoB,IACVpB,KAAMA,EACNiqB,YAAa,kBAAMA,EAAYjqB,EAAKuI,mBEOjDmiB,GAzDa,SAAC,GAQtB,IAPHzE,EAOE,EAPFA,eACAzB,EAME,EANFA,UACAnV,EAKE,EALFA,aACAsb,EAIE,EAJFA,cACAR,EAGE,EAHFA,cACAS,EAEE,EAFFA,eACAC,EACE,EADFA,mBAuCA,OACI,kBAAC,GAAD,CACIpG,OAAO,cACPC,QA1BA,oCACI,kBAAC9hB,EAAA,EAAD,CAAQT,QAASqiB,EAAW3hB,QAAQ,qBAApC,UAZA,kBAAC,GAAD,CACI4E,SAAUojB,EACVnjB,qBAAsB,CAClB/G,KAAM,SACN,KAAQ,uBAkCpB0iB,QAhBA,kBAAC7V,EAAA,EAAD,KACI,kBAACuc,GAAD,CAAgB1a,aAAcA,IAC9B,6BACA,kBAAC,GAAD,CACIob,SAAUE,EACVR,cAAeA,EACfF,YAAa,SAAC1hB,GAAD,OAAcqiB,EAAeriB,OAWlDgc,QAAS0B,EACTzB,UAAWA,KCsBRsG,G,2MArEXxrB,MAAQ,CACJurB,mB/JPiB,Y+JQjBF,cAAe,I,EAwBnBI,oBAAsB,WAClB,EAAK1a,SAAS,CAAEwa,mB/JhCC,kB,E+JmCrBG,oBAAsB,YAAe,IAAZlrB,EAAW,EAAXA,KACrB8J,QAAQC,IAAI,SAAU/J,GACtB,EAAKuQ,SAAS,CAAEwa,mBAAoBvjB,M,EAGxC2jB,oBAAsB,YAAmB,IAAhBre,EAAe,EAAfA,SACrBhD,QAAQC,IAAI,cAAe+C,GAC3B,EAAKyD,SAAS,CAAEwa,mBAAoBtjB,M,EAGxC2jB,uBAAyB,YAA0B,IAAvBC,EAAsB,EAAtBA,gBACxB,EAAKJ,sBACLvf,GAAkB2f,GACb7f,MAAK,SAACsB,GACH,IAAM5M,EAAO4M,EAAS9M,KACdF,EAAS,EAAKiC,MAAM1B,WAApBP,KACRsM,GAAmBlM,EAAKoB,IAAKxB,EAAKJ,OAAQ,EAAKwrB,oBAAqB,EAAKC,wBAC1Ehf,MAAM,EAAKgf,sB,EAGtBG,8BAAgC,SAACC,GAC7B,IAAMpb,EAAaob,GAAkBA,EAAera,OAC9CzI,EAAW0H,GAAcA,EAAWkb,gBAC1C,OAAO5iB,EAAWA,EAAS2Q,OAAS3Q,G,kFAhDf6b,G,8EACfkH,EAAkBxmB,KAAKsmB,8BAA8BtmB,KAAKjD,MAAMwpB,gBACjDvmB,KAAKsmB,8BAA8BhH,EAAUiH,kBAC7CC,E,wDAIjBvhB,IAAQuhB,IACRxmB,KAAKuL,SAAS,CAAEsa,cAAe,K,8BjJDfpiB,EiJMkB+iB,EjJNRngB,OiJMJogB,EjJNwBngB,OiJMxBmgB,EjJLvB3gB,GAAMa,IAAN,0CAA6ClD,IAC/C+C,KAAKH,EAAoBC,K,OiJItBuf,E,yDAEAA,EAAgB,CAAE7qB,KAAM,CAAEP,QAAS,K,yBAEnCuF,KAAKuL,SAAS,CAAEsa,cAAeA,EAAc7qB,KAAKP,U,+CjJVnC,IAACgJ,EAAU4C,EAAoBC,I,2DiJ6ClD,IAAM+e,EAAgBrlB,KAAKsmB,8BAA8BtmB,KAAKjD,MAAMwpB,gBACpE,OACI,kBAAC,GAAD,eACIhc,aAAcvK,KAAKomB,uBACnBf,cAAeA,GACXrlB,KAAKjD,MACLiD,KAAKxF,Y,GAhEc+F,IAAMnD,WCV9BspB,GCkBAppB,aATS,SAAC9C,GAAW,IAAD,EACiCA,EAAxDiC,MAAStB,EADc,EACdA,YAAaC,EADC,EACDA,UAC9B,MAAO,CACH+lB,eAAgBhmB,GAA6B,eAAdC,EAC/BC,WAJ2B,EACUA,WAIrCkrB,eAJ4D/rB,EAAT+B,KAI9B,uBAIW,CAAEmjB,YAAWoG,eClB9B,SAACriB,GACpB,OAAOkjB,aAAO,mBAAoB,kBAAmBljB,KDiB1CnG,EAbc,SAACP,GAC1B,OAAO,kBAAC,GAA6BA,MEoD1B6pB,GAtDuB,SAAC,GAQhC,IAPHC,EAOE,EAPFA,yBACcxjB,EAMZ,EANFhI,WAAcgI,WACd8d,EAKE,EALFA,eACAzB,EAIE,EAJFA,UACAoH,EAGE,EAHFA,gBACAC,EAEE,EAFFA,oBACAC,EACE,EADFA,oBAoCA,OACI,kBAAC,GAAD,CACIrH,OAAO,yBACPpB,QApCqB,WAAO,IACxBhb,EAAkBF,EAAlBE,QAASzI,EAASuI,EAATvI,KACX0I,EAAkBD,GAAWA,EAAQE,SACrCC,EAAW5I,GAAQA,EAAK8B,KAE9B,OACI,uBAAGqB,UAAU,QACT,4BAAKuF,GAAsB,IAD/B,+BAEyC,IACrC,4BAAKE,IA2BAujB,GACTrH,QArBA,oCACI,kBAAC9hB,EAAA,EAAD,CACIC,QAAQ,oBACRV,QAASypB,EAAkBpH,EAAYqH,GAEtCD,EAAkB,UAAY,UAEnC,kBAAC,GAAD,CACInkB,SAAUkkB,EACVjkB,qBAAsB,CAClBvF,QAAS2pB,MAYrBvH,QAAS0B,EACTzB,UAAWA,KCSRwH,G,2MArDX1sB,MAAQ,CAAEqsB,yBpKJW,a,EoKMrBM,0BAA4B,WACxB,EAAK5b,SAAS,CAAEsb,yBpKNC,kB,EoKSrBO,0BAA4B,WACxB,EAAK7b,SAAS,CAAEsb,yBAA0BrkB,KADZ,MAK1B,EAAKzF,OACTkK,EAN8B,EAG1BA,4BAH0B,EAI1B5L,WAAciI,iB,EAKtB+jB,uBAAyB,WACrB,EAAK9b,SAAS,CAAEsb,yBAA0BpkB,M,EAG9C6kB,8BAAgC,WAC5B,EAAKH,4BAD6B,MAE2B,EAAKpqB,OAClEwK,EAHkC,EAE1BA,sBAF0B,EAEJlM,WAAcgI,WACZ/G,IAAK,EAAK8qB,0BAA2B,EAAKC,yB,EAG9EE,8BAAgC,WAAO,IAAD,EAK9B,EAAKxqB,MAHL2iB,EAF8B,EAE9BA,WAKJzY,EAPkC,EAG9BA,4BAH8B,EAI9B5L,WAAciI,gBAIlBoc,K,wEAIA,IAAMoH,EAAkB,CACpBtkB,GAAkBC,IACpB8a,SAASvd,KAAKxF,MAAMqsB,0BAEtB,OACI,kBAAC,GAAD,eACIE,oBAAqB/mB,KAAKunB,8BAC1BP,oBAAqBhnB,KAAKsnB,8BAC1BR,gBAAiBA,GACb9mB,KAAKjD,MACLiD,KAAKxF,Y,GAhDwB+F,IAAMnD,WCRxCoqB,GCkBAlqB,aARS,SAAC9C,GAAW,IACxBiC,EAAUjC,EAAViC,MACR,MAAO,CACH0kB,eAAgB1kB,EAAMtB,aAAmC,yBAApBsB,EAAMrB,UAC3CC,WAAYoB,EAAMpB,cAMtB,CAAEqkB,YAAWzY,2BCjBF,SAAC3D,GAAD,OAAoB,SAAMqE,GAAN,UAAAI,EAAAC,OAAA,gDAC/BlD,QAAQC,IAAI,CAAEzB,mBAQd2D,GAA2B3D,GAPT,SAACwE,GACfH,EAAS,CACL9L,K7LCuB,sB6LAvBpB,QAASqN,EAAS9M,UALK,uCDiBUuM,qBEnB9B,SAACC,EAAcnB,EAAoBC,GAC9C,OAAO,SAAMqB,GAAN,UAAAI,EAAAC,OAAA,gDASHT,GAAqBC,GARH,SAACM,GACfH,EAAS,CACL9L,K9LCW,c8LAXpB,QAASqN,EAAS9M,OAEtBqL,EAAmByB,KAGuBxB,GAT3C,wCFgBIhJ,EAZwB,SAACP,GACpC,OAAO,kBAAC,GAAuCA,MGgCpCO,gBAJS,SAAC9C,GACrB,MAAO,CAAEiC,MAAOjC,EAAMiC,SAGXa,EAZQ,SAACP,GACpB,OAAKA,EAAMN,MAAMtB,YApBW,SAACC,GAC7B,OAAQA,GACJ,IAAK,aACD,OAAO,kBAACwmB,GAAD,MACX,IAAK,WACD,OAAO,kBAACmB,GAAD,MACX,IAAK,aACD,OAAO,kBAACmB,GAAD,MACX,IAAK,YACD,OAAO,kBAACa,GAAD,MACX,IAAK,aACD,OAAO,kBAAC2B,GAAD,MACX,IAAK,uBACD,OAAO,kBAACc,GAAD,MACX,QACI,OAAO,MASRC,CAAwB1qB,EAAMN,MAAMrB,WAHhC,Q,8BC7BAssB,I,OCKM,SAAC,GAA+C,IAA7C/H,EAA4C,EAA5CA,OAAQ7gB,EAAoC,EAApCA,KAAML,EAA8B,EAA9BA,QAASD,EAAqB,EAArBA,KAASzB,EAAY,kDAE1D4qB,EAAelpB,GAAW,aAChC,OACI,kBAACmpB,GAAA,EAAD,eACIppB,KAAMA,EACNqpB,UAAU,EACVC,MANa,IAObrpB,QAASkpB,GACL5qB,GAEJ,kBAACgrB,GAAA,EAAD,CAAa/H,aAAa,EAAO/hB,UAAU,uBACvC,yBAAKA,UAAU,gDACX,6BAAM0hB,GACN,yBAAK1hB,UAAU,0BACX,kBAAC,IAAD,CACImD,KAAMoP,IACNnT,QAASsqB,OAKzB,kBAACK,GAAA,EAAD,KAAYlpB,MCdTmpB,GAXkB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,eAAgBP,EAAmB,EAAnBA,aAChD,OACI,kBAAC,GAAD,CACIhI,OAAO,mBACP7gB,KAAK,8BACLN,KAAM0pB,EACNzpB,QAASkpB,KCRNQ,GCmBA7qB,aANS,SAAC9C,GACrB,MAAO,CACH0tB,eAAgB1tB,EAAMkC,MAAMhB,aAAa6hB,SAX9B,sBAeqB,CAAE6K,UCnB3B,SAACxrB,GACZ,MAAO,CACHf,KrMuBkB,aqMtBlBpB,QAAS,CAAEmC,WDgBJU,EAbmB,SAACP,GAI/B,OAAO,kBAAC,GAAD,iBAA8BA,EAA9B,CAAqC4qB,aAHvB,WACjB5qB,EAAMqrB,UAJK,0BEJJC,I,OCyBA/qB,aAJS,SAAC9C,GACrB,MAAO,CAAEkB,aAAclB,EAAMkC,MAAMhB,gBAGxB4B,EAZQ,SAAC,GAAsB,IAApB5B,EAAmB,EAAnBA,aACtB,OACI,yBAAKuC,UAAU,mBACVvC,EAAayI,KAAI,SAAAzH,GAAK,OAZf,SAACA,GACjB,OAAQA,GACJ,IAAK,kBACD,OAAO,kBAACyrB,GAAD,MACX,QACI,OAAO,MAOoBG,CAAY5rB,WCR7C6rB,GAAoBC,OAAOC,sCAAwCC,IACnEC,GAAQC,YAAYC,EAAUN,GAChCO,YAAgBC,OAGpBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJpP,SAAS2P,cAAc,Y","file":"static/js/main.7a748e87.chunk.js","sourcesContent":["import { CONNECT_TO_SERVER } from '../action-constants';\n\nconst INITIAL_STATE = {\n    connected: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    if (action.type === CONNECT_TO_SERVER) {\n        return {connected: action.payload.connected}\n    }\n\n    return state;\n}","import _ from 'lodash'\n\nimport {\n    DELETE_ROOM,\n    FETCH_PUBLIC_ROOMS,\n    LEAVE_ROOM,\n    JOIN_ROOM,\n    FETCH_ROOM,\n    UPDATE_ROOM\n} from '../action-constants';\n\nconst handleRoomMemberUpdate = (state, payload) => {\n    const { roomId, updatedMembers } = payload\n    return {\n        ...state,\n        [roomId]: {\n            ...state[roomId],\n            members: updatedMembers\n        }\n    }\n}\n\nconst addRoomToState = (state, room) => {\n    return { ...state, [room.roomId]: room }\n}\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_PUBLIC_ROOMS:\n            return { ...state, ..._.mapKeys(action.payload, 'roomId') }\n        case FETCH_ROOM:\n            return addRoomToState(state, action.payload)\n        case DELETE_ROOM:\n            return _.omit(state, action.payload)\n        case LEAVE_ROOM:\n            return handleRoomMemberUpdate(state, action.payload)\n        case JOIN_ROOM:\n            return handleRoomMemberUpdate(state, action.payload)\n        case UPDATE_ROOM:\n            return addRoomToState(state, action.payload)\n        default:\n            return state;\n    }\n}","import _ from 'lodash'\nimport {\n    FETCH_ALL_NOTIFICATIONS,\n    UPDATE_NOTIFICATION\n} from '../action-constants';\n\nconst INITIAL_STATE = { length: 0, data: {} }\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case FETCH_ALL_NOTIFICATIONS:\n            const data = action.payload\n            return {\n                ...state,\n                length: data.length,\n                data: _.mapKeys(data, '_id')\n            }\n        case UPDATE_NOTIFICATION:\n            const notification = action.payload\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    [notification._id]: notification\n                }\n            }\n        default:\n            return state;\n    }\n}","import { LOGIN, UPDATE_USER, LOGOUT, REGISTER } from '../action-constants';\n\nconst INITIAL_STATE = {\n    isLoggedIn: false,\n    user: {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return { isLoggedIn: true, user: action.payload.user }\n        case LOGOUT:\n            return INITIAL_STATE\n        case REGISTER:\n            return { isLoggedIn: false, user: action.payload }\n        case UPDATE_USER:\n            //Update only what is provided in payload\n            return { ...state, ...action.payload }\n        default:\n            return state;\n    }\n}","import { SHOW_MODAL, HIDE_MODAL } from '../action-constants'\n\nconst INITIAL_STATE = {\n    isModalOpen: false,\n    modalName: null,\n    modalProps: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SHOW_MODAL:\n            return {\n                isModalOpen: true,\n                ...action.payload\n            }\n\n        case HIDE_MODAL:\n            return INITIAL_STATE\n\n        default:\n            return state\n    }\n}","import {\n    SET_ROOM_LIST_SORT_TECHNIQUE,\n    SET_ROOM_LIST_ITEMS_PER_PAGE,\n    SET_ROOM_LIST_CURRENT_PAGE_NUMBER,\n    SET_ROOM_LIST_SEARCH_QUERY\n} from '../action-constants'\n\nconst INITIAL_STATE = {\n    sortBy: 'name-asc',\n    itemsPerPage: 10,\n    currentPageNumber: 1,\n    searchQuery: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_ROOM_LIST_SORT_TECHNIQUE:\n            return { ...state, sortBy: action.payload }\n        case SET_ROOM_LIST_ITEMS_PER_PAGE:\n            return { ...state, itemsPerPage: action.payload }\n        case SET_ROOM_LIST_CURRENT_PAGE_NUMBER:\n            return { ...state, currentPageNumber: action.payload }\n        case SET_ROOM_LIST_SEARCH_QUERY:\n            return { ...state, searchQuery: action.payload }\n        default:\n            return state\n    }\n}","import _ from 'lodash'\nimport { SHOW_TOAST, HIDE_TOAST } from '../action-constants'\n\nconst INITIAL_STATE = {\n    activeToasts: []\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SHOW_TOAST:\n            //Need only one instance of a particular toastName, hence, removing duplicates using _.uniq\n            return { activeToasts: _.uniq([...state.activeToasts, action.payload.name]) }\n        case HIDE_TOAST:\n            let { name } = action.payload\n            return { activeToasts: state.activeToasts.filter(toast => toast !== name) }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport serverReducer from './serverReducer';\nimport roomReducer from './roomReducer';\nimport notificationReducer from './notificationReducer';\nimport userReducer from './userReducer';\nimport modalReducer from './modalReducer';\nimport roomListDisplaySettingsReducer from './roomListDisplaySettingsReducer'\nimport toastReducer from './toastReducer'\n\nexport default combineReducers({\n    user: userReducer,\n    serverConnection: serverReducer,\n    rooms: roomReducer,\n    roomListDisplaySettings: roomListDisplaySettingsReducer,\n    notifications: notificationReducer,\n    form: formReducer,\n    modal: modalReducer,\n    toast: toastReducer\n})\n","export const CONNECT_TO_SERVER = \"CONNECT_TO_SERVER\";\n\nexport const FETCH_PUBLIC_ROOMS = 'FETCH_PUBLIC_ROOMS'\nexport const FETCH_ROOM = 'FETCH_ROOM'\nexport const CREATE_ROOM = \"CREATE_ROOM\";\nexport const DELETE_ROOM = 'DELETE_ROOM'\nexport const JOIN_ROOM = \"JOIN_ROOM\";\nexport const LEAVE_ROOM = \"LEAVE_ROOM\";\nexport const UPDATE_ROOM = \"UPDATE_ROOM\"\n\nexport const UPDATE_NOTIFICATION = \"UPDATE_NOTIFICATION\"\nexport const FETCH_ALL_NOTIFICATIONS = \"FETCH_ALL_NOTIFICATIONS\"\n\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const LOGIN = \"LOGIN\"\nexport const LOGOUT = \"LOGOUT\"\nexport const REGISTER = \"REGISTER\"\n\nexport const SHOW_MODAL = 'SHOW_MODAL'\nexport const HIDE_MODAL = 'HIDE_MODAL'\n\nexport const SET_ROOM_LIST_SORT_TECHNIQUE = 'SET_ROOM_LIST_SORT_TECHNIQUE'\nexport const SET_ROOM_LIST_ITEMS_PER_PAGE = 'SET_ROOM_LIST_ITEMS_PER_PAGE'\nexport const SET_ROOM_LIST_CURRENT_PAGE_NUMBER = 'SET_ROOM_LIST_CURRENT_PAGE'\nexport const SET_ROOM_LIST_SEARCH_QUERY = 'SET_ROOM_LIST_SEARCH_QUERY'\n\nexport const SHOW_TOAST = 'SHOW_TOAST'\nexport const HIDE_TOAST = 'HIDE_TOAST'","import React from 'react'\n\nconst WithModalTriggerView = (props) => {\n    const { showModal, modalName, modalProps, component, children, ...rest } = props\n    const Component = component\n    return (\n        <Component onClick={() => showModal(modalName, modalProps)} {...rest}>\n            {children}\n        </Component>\n    )\n}\n\nexport default WithModalTriggerView\n\n","import { HIDE_MODAL } from '../../action-constants'\n\nexport default _ => {\n    return { type: HIDE_MODAL }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport WithModalTriggerView from './WithModalTrigger-View'\nimport { showModal } from '../../../redux/actions/modal-actions'\n\nconst WithModalTriggerRedux = (props) => {\n    return <WithModalTriggerView {...props} />\n}\n\nexport default connect(null, { showModal })(WithModalTriggerRedux)\n\n","import { SHOW_MODAL } from '../../action-constants'\n\nexport default (modalName, modalProps) => {\n    return {\n        type: SHOW_MODAL,\n        payload: { modalName, modalProps }\n    }\n}","import WithModalTrigger from './WithModalTrigger-Redux'\n\nexport default WithModalTrigger","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport default (props) => {\n    const { to, shouldUseReplace, component, children, ...rest } = props\n    const Component = component\n\n    const history = useHistory()\n    const onClick = () => {\n        return shouldUseReplace ? history.replace(to) : history.push(to)\n    }\n\n    return (\n        <Component onClick={onClick} {...rest}>\n            {children}\n        </Component>\n    )\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nimport { WithModalTrigger } from '../../hoc'\n\nexport default ({ component, children, ...rest }) => {\n    return (\n        <WithModalTrigger\n            modalName='CreateRoom'\n            component={component || Button}\n            {...rest}\n        >\n            {children}\n        </WithModalTrigger>\n    )\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nimport { WithModalTrigger } from '../../hoc'\n\nexport default ({ component, children, ...rest }) => {\n    return (\n        <WithModalTrigger\n            modalName='JoinRoom'\n            component={component || Button}\n            {...rest}\n        >\n            {children}\n        </WithModalTrigger>\n    )\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nimport { WithModalTrigger } from '../../hoc'\n\nexport default ({ component, children, room, ...rest }) => {\n    return (\n        <WithModalTrigger\n            modalName='DeleteRoom'\n            modalProps={{ room }}\n            component={component || Button}\n            variant='danger'\n            {...rest}\n        >\n            {children}\n        </WithModalTrigger>\n    )\n}","import React from 'react';\nimport { ButtonGroup } from 'react-bootstrap'\n\nimport {\n    CreateRoomModalTrigger,\n    JoinRoomModalTrigger\n} from '../standalone/RoomModalTriggers'\n\nimport './LandingPage-Style.scss';\n\nconst LandingPage = () => {\n    return (\n        <div className='landing-page compensate-header w-100'>\n            <div className='d-flex flex-column align-items-center'>\n                <p className='welcome-msg'>Welcome to ChatRooms!</p>\n\n                <ButtonGroup>\n                    <CreateRoomModalTrigger>\n                        Create Room\n                    </CreateRoomModalTrigger>\n                    <JoinRoomModalTrigger variant='outline-primary'>\n                        Join Room By Id\n                    </JoinRoomModalTrigger>\n                </ButtonGroup>\n            </div>\n        </div>\n    );\n}\n\nexport default LandingPage;\n","import LandingPage from './LandingPage-View'\n\nexport default LandingPage","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default (props) => {\n    const shouldShowDismissIcon = !props.dismissAction;\n    return (\n        <Alert show={props.show} variant={props.variant} onClose={props.onDismiss} dismissible={shouldShowDismissIcon}>\n            <Alert.Heading>{props.heading}</Alert.Heading>\n            <p>{props.body}</p>\n            <div className='d-flex justify-content-end'>\n                {props.dismissAction && props.dismissAction()}\n            </div>\n        </Alert>\n    )\n}","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\n\nexport default (props) => {\n\n    const renderPopover = () => {\n        return (\n            <Popover>\n                <Popover.Title as=\"h2\">{props.title}</Popover.Title>\n                <Popover.Content>\n                    {props.menu}\n                </Popover.Content>\n            </Popover>\n        )\n    }\n\n    return (\n        <OverlayTrigger\n            trigger=\"click\"\n            placement=\"bottom\"\n            rootClose={true}\n            overlay={renderPopover()}\n        >\n            {props.triggerComponent}\n        </OverlayTrigger>\n    )\n}","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nexport default (props) => {\n    const { triggerComponent, label, id, ...rest } = props\n\n    const renderTooltip = () => {\n        return (\n            <Tooltip id={id}>\n                {label}\n            </Tooltip>\n        )\n    }\n\n    return (\n        <OverlayTrigger\n            trigger=\"hover\"\n            placement=\"bottom\"\n            rootClose={true}\n            overlay={renderTooltip()}\n            {...rest}\n        >\n            {triggerComponent}\n        </OverlayTrigger>\n    )\n}","import React from 'react';\nimport { FormControl } from 'react-bootstrap'\nimport autosize from 'autosize'\n\nimport './style.scss'\n\nclass TextInputWordWrap extends React.Component {\n\n    componentDidMount() {\n        autosize(this.textareaRef)\n    }\n\n    render() {\n        return (\n            <FormControl\n                {...this.props}\n                {...this.props.input}\n                as='textarea'\n                rows='1'\n                className='text-input-wrap'\n                ref={el => this.textareaRef = el}\n            />\n        )\n    }\n}\n\nexport default TextInputWordWrap;\n","import React, { useState } from 'react';\nimport { InputGroup, FormControl, FormLabel } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nconst ToggleablePasswordField = ({ formProps, error }) => {\n    const [passwordVisible, setPasswordVisibility] = useState(false)\n\n    const togglePasswordVisibility = () => {\n        setPasswordVisibility(!passwordVisible)\n    }\n\n    const renderDummyFormControlForFeedback = () => {\n        return (\n            <FormControl\n                {...formProps}\n                {...formProps.input}\n                style={{ display: 'none' }}\n            />\n        )\n    }\n\n    return (\n        <>\n            <FormLabel>{formProps.label}</FormLabel>\n            <InputGroup>\n                <FormControl\n                    {...formProps}\n                    {...formProps.input}\n                    type={passwordVisible ? 'text' : 'password'}\n                />\n                <InputGroup.Append onClick={togglePasswordVisibility} style={{ cursor: 'pointer' }}>\n                    <InputGroup.Text>\n                        <FontAwesomeIcon icon={passwordVisible ? faEye : faEyeSlash} />\n                    </InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n            {renderDummyFormControlForFeedback()}\n            <FormControl.Feedback type=\"invalid\">{error}</FormControl.Feedback>\n        </>\n    )\n}\n\nexport default ToggleablePasswordField;\n","import React from 'react';\nimport { Button } from 'react-bootstrap'\n\nconst ProgressButtonInitial = ({ label, ...rest }) => {\n    return <Button {...rest}>{label || 'Initial'}</Button>\n}\n\nexport default ProgressButtonInitial;\n","import React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nconst ICON_POS_LEFT = 0;\nconst ICON_POS_RIGHT = 1;\n\nconst IconButton = ({ icon, iconPos, children, childrenProps, ...rest }) => {\n    const isIconLeft = iconPos === ICON_POS_LEFT\n    return (\n        <Button {...rest}>\n            <Row>\n                {isIconLeft ? <Col>{icon}</Col> : null}\n                <Col\n                    className={isIconLeft ? 'pl-0' : 'pr-0'}\n                    style={{ whiteSpace: 'nowrap' }}\n                >\n                    {children}\n                </Col>\n                {iconPos === ICON_POS_RIGHT ? <Col>{icon}</Col> : null}\n            </Row>\n        </Button>\n    )\n}\n\nexport { ICON_POS_RIGHT, ICON_POS_LEFT }\nexport default IconButton;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nimport IconButton, { ICON_POS_LEFT } from '../IconButton'\n\nconst ProgressButtonInitial = ({ icon, iconPos, label, ...rest }) => {\n    return (\n        <IconButton\n            icon={icon || <Spinner animation='border' size='sm' />}\n            iconPos={iconPos || ICON_POS_LEFT}\n            style={{ cursor: 'not-allowed' }}\n            variant='info'\n            disabled\n            {...rest}\n        >\n            {label || 'Pending'}\n        </IconButton>\n    )\n}\n\nexport default ProgressButtonInitial;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport IconButton, { ICON_POS_LEFT } from '../IconButton'\n\nconst ProgressButtonSuccess = ({ icon, iconPos, label, ...rest }) => {\n    return (\n        <IconButton\n            icon={icon || <FontAwesomeIcon icon={faCheckCircle} />}\n            iconPos={iconPos || ICON_POS_LEFT}\n            style={{ cursor: 'not-allowed' }}\n            variant='success'\n            disabled\n            {...rest}\n        >\n            {label || 'Initial'}\n        </IconButton>\n    )\n}\n\nexport default ProgressButtonSuccess;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport IconButton, { ICON_POS_LEFT } from '../IconButton'\n\nconst ProgressButtonSuccess = ({ icon, iconPos, label, ...rest }) => {\n    return (\n        <IconButton\n            icon={icon || <FontAwesomeIcon icon={faTimesCircle} />}\n            iconPos={iconPos || ICON_POS_LEFT}\n            style={{ cursor: 'not-allowed' }}\n            variant='danger'\n            disabled\n            {...rest}\n        >\n            {label || 'Initial'}\n        </IconButton>\n    )\n}\n\nexport default ProgressButtonSuccess;\n","import React from 'react'\n\nimport ProgressButtonInitial from './ProgressButtonInitial'\nimport ProgressButtonPending from './ProgressButtonPending'\nimport ProgressButtonSuccess from './ProgressButtonSuccess'\nimport ProgressButtonFailure from './ProgressButtonFailure'\n\nconst PROGRESS_INITIAL = 'prog_init'\nconst PROGRESS_PENDING = 'prog_pending'\nconst PROGRESS_SUCCESS = 'prog_success'\nconst PROGRESS_FAIL = 'prog_fail'\n\nconst ProgressButton = ({\n    progress,\n    propsProgressInitial,\n    propsProgressPending,\n    propsProgressSuccess,\n    propsProgressFailure,\n    ...otherProps\n}) => {\n    switch (progress) {\n        case PROGRESS_INITIAL:\n            return <ProgressButtonInitial {...propsProgressInitial} {...otherProps} />\n        case PROGRESS_PENDING:\n            return <ProgressButtonPending {...propsProgressPending} {...otherProps} />\n        case PROGRESS_SUCCESS:\n            return <ProgressButtonSuccess {...propsProgressSuccess} {...otherProps} />\n        case PROGRESS_FAIL:\n            return <ProgressButtonFailure {...propsProgressFailure} {...otherProps} />\n        default: return <ProgressButtonInitial label='Click Here' {...otherProps} />\n    }\n}\n\nexport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n}\n\nexport default ProgressButton","import ProgressButton, {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from './ProgressButton'\n\nexport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n}\nexport default ProgressButton","import React from 'react'\n\nexport default ({ navigate, ...rest }, Component) => {\n    return <Component {...rest} />\n}","import React from 'react';\n\nimport { WithModalTrigger } from '../../../hoc'\n\nconst getContent = (invitation) => {\n    const { inviter, room } = invitation\n    const inviterUsername = inviter && inviter.username\n    const roomName = room && room.name\n\n    return (\n        <p className='mb-0'>\n            <em>{inviterUsername}</em>{' '}\n                invited you to join the room{' '}\n            <em>{roomName}</em>\n        </p>\n    )\n}\n\nconst RoomInvitationNotificationItem = ({ invitation, notificationId }) => {\n    return (\n        <WithModalTrigger\n            modalName='ReviewRoomInvitation'\n            modalProps={{ invitation, notificationId }}\n            component={({ children, ...props }) => <div {...props}>{children}</div>}\n        >\n            <h6 className='mb-1 mt-0'>Room Invitation</h6>\n            {getContent(invitation)}\n        </WithModalTrigger>\n    )\n}\n\nexport default RoomInvitationNotificationItem;\n","import RoomInvitationNotificationItem from './RoomInvitationNotificationItem-View'\n\nexport default RoomInvitationNotificationItem","import React from 'react';\nimport { ListGroupItem } from 'react-bootstrap'\n\nimport RoomInvitationNotificationItem from '../RoomInvitationNotificationItem'\nimport './NotificationListItem-Style.scss'\n\nconst renderNotificationContent = (notification) => {\n    const { roomInvitation, _id } = notification\n    if (roomInvitation) {\n        return <RoomInvitationNotificationItem invitation={roomInvitation} notificationId={_id} />\n    }\n}\n\nconst NotificationListItemView = ({ notification }) => {\n    return (\n        <ListGroupItem className='m-0 notification-item'>\n            {renderNotificationContent(notification)}\n        </ListGroupItem>\n    );\n}\n\nexport default NotificationListItemView;\n","import NotificationListItem from './NotificationListItem-View'\n\nexport default NotificationListItem","import React from 'react';\nimport { ListGroup } from 'react-bootstrap'\n\nimport NotificationListItem from '../NotificationListItem';\nimport './NotificationList-Style.scss'\n\nconst NotificationListView = ({ notifications }) => {\n    const getNotificationData = () => {\n        if (notifications.length === 0) {\n            return \"You don't have any notifications\"\n        }\n\n        return notifications.map(notification => {\n            return <NotificationListItem key={notification._id} notification={notification} />\n        })\n    }\n\n    return (\n        <ListGroup variant='flush' className='notification-list'>\n            {getNotificationData()}\n        </ListGroup>\n    )\n}\n\nexport default NotificationListView;\n\n","import NotificationList from './NotificationList-View';\n\nexport default NotificationList","const getPendingNotifications = (notifications) => {\n    if (!notifications) {\n        return 0\n    }\n\n    const notificationIdList = Object.keys(notifications.data)\n    const pendingNotifications = []\n\n    notificationIdList.forEach(id => {\n        const notification = notifications.data[id]\n        if (notification.status === 'pending') {\n            pendingNotifications.push(notification)\n        }\n    })\n\n    return pendingNotifications\n}\n\nexport default getPendingNotifications","import React from 'react';\nimport isEmpty from 'is-empty'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { Dropdown } from '../../../standalone'\nimport NotificationList from '../NotificationList'\nimport { getPendingNotifications } from '../../utils'\nimport './NotificationIcon-Style.scss'\n\nconst NotificationIconView = ({ notifications }) => {\n    console.log('all notifs: ', notifications)\n    const pendingNotifications = getPendingNotifications(notifications)\n    console.log('pending notifs: ', pendingNotifications)\n    const getNotificationIcon = () => {\n        const hasNotifications = pendingNotifications.length > 0\n        const badgeVisibility = hasNotifications ? 'visible' : 'hidden'\n        const bellActivity = hasNotifications ? 'active' : 'inactive'\n\n        return (\n            <div className='notification-icon-container'>\n                <FontAwesomeIcon\n                    icon={faBell}\n                    size='lg'\n                    className={`notification-bell-icon ${bellActivity}`}\n                />\n                <FontAwesomeIcon\n                    icon={faCircle}\n                    size='xs'\n                    color='red'\n                    className={`notification-badge ${badgeVisibility}`}\n                />\n            </div>\n        );\n    }\n\n    const getTitle = () => {\n        return (\n            <p className='m-0'>\n                Notifications\n                {isEmpty(pendingNotifications) ? '' : ` (${pendingNotifications.length})`}\n            </p>\n        )\n    }\n\n    return (\n        <Dropdown\n            title={getTitle()}\n            menu={<NotificationList notifications={pendingNotifications} />}\n            triggerComponent={getNotificationIcon()}\n        />\n    )\n}\n\nexport default NotificationIconView;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NotificationIconView from './NotificationIcon-View'\n\nconst NotificationIconRedux = ({ notifications }) => {\n    return <NotificationIconView notifications={notifications} />\n}\n\nconst mapStateToProps = (state) => {\n    return { notifications: state.notifications }\n}\n\nexport default connect(mapStateToProps)(NotificationIconRedux);\n","import NotificationIcon from './NotificationIcon-Redux'\n\nexport default NotificationIcon","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport { Dropdown } from '../../../standalone'\n\nconst UserIconView = ({ username, logoutUser }) => {\n    const renderMenu = () => {\n        return (\n            <div className='d-flex flex-column align-items-center'>\n                <Button variant=\"outline-secondary\" onClick={logoutUser}>\n                    Sign Out\n                </Button>\n            </div>\n        )\n    }\n\n    const UserIcon = <FontAwesomeIcon icon={faUser} size=\"lg\" />\n    const Title = (\n        <span>\n            Signed in as <strong>{username}</strong>\n        </span>\n    )\n\n    return (\n        <Dropdown\n            title={Title}\n            menu={renderMenu()}\n            triggerComponent={UserIcon}\n        />\n    )\n}\n\nexport default UserIconView","import Axios from 'axios';\n\nconst axios = Axios.create({ withCredentials: true })\n\nexport const registerUser = (username, password, confirmPassword, onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/register', { username, password, confirmPassword }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const loginUser = (username, password, onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/login', { username, password }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getUser = (userId, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/user/${userId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getUserByUsername = (username, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/user/${username}/?byUsername=true`)\n        .then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getCurrentUser = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/user/').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const searchUsers = (username, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/search?category=user&query=${username}`)\n        .then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const checkLoginStatus = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/user/status/login').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const logoutUser = (onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/logout').then(onRequestFulfilled, onRequestRejected);\n}\n\nexport const getRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/rooms/${roomId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getAllRooms = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/rooms').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const createRoom = (roomName, roomType, onRequestFulfilled, onRequestRejected) => {\n    return axios.post('/api/rooms', { roomName, roomType }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const updateRoom = (roomId, update, onRequestFulfilled, onRequestRejected) => {\n    return axios.patch(`/api/rooms/${roomId}`, update).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const deleteRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.delete(`/api/rooms/${roomId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const joinRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.post(`/api/rooms/${roomId}/members`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const leaveRoom = (roomId, memberId, onRequestFulfilled, onRequestRejected) => {\n    return axios.delete(`/api/rooms/${roomId}/members/${memberId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getRoomMessage = (roomId, messageId, onRequestFulfilled, onRequestRejected) => {\n    return axios.get(`/api/rooms/${roomId}/messages/${messageId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const addMessageToRoom = (roomId, message, onRequestFulfilled, onRequestRejected) => {\n    return axios.post(`/api/rooms/${roomId}/messages`, { message }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getAllNotifications = (onRequestFulfilled, onRequestRejected) => {\n    return axios.get('/api/notifications').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const markNotificationAsReviewed = (notificationId, onRequestFulfilled, onRequestRejected) => {\n    return axios.patch(\n        `/api/notifications/${notificationId}`,\n        { status: 'reviewed' }\n    ).then(onRequestFulfilled).catch(onRequestRejected)\n}\n\nexport const sendRoomInvitation = (inviteeUserId, roomId, onRequestFulfilled, onRequestRejected) => {\n    return axios.post(\n        '/api/room_invitations',\n        { invitee: inviteeUserId, roomId }\n    ).then(onRequestFulfilled).catch(onRequestRejected)\n}\n\nexport const acceptRoomInvitation = (invitationId, onRequestFulfilled, onRequestRejected) => {\n    return axios.post(`/api/room_invitations/${invitationId}/accept`)\n        .then(onRequestFulfilled).catch(onRequestRejected)\n}","import { UPDATE_USER } from '../../action-constants'\n\nimport { getCurrentUser, checkLoginStatus } from '../../../server-communication/httpServer'\n\n\nconst actionUpdateUser = (isLoggedIn, user) => {\n    return {\n        type: UPDATE_USER,\n        payload: { isLoggedIn, user }\n    }\n}\n\nconst onGetCurrentUserSuccess = (userResponse, dispatch) => {\n    const onCheckLoginStatusSuccess = (loginResponse) => {\n        const user = userResponse.data\n        const isLoggedIn = loginResponse.data.isLoggedIn\n        dispatch(actionUpdateUser(isLoggedIn, user))\n    }\n\n    checkLoginStatus(onCheckLoginStatusSuccess, ({ response }) => console.log('Check user status fail: ', response))\n}\n\nexport default () => async dispatch => {\n    getCurrentUser(\n        (response) => onGetCurrentUserSuccess(response, dispatch),\n        ({ response }) => console.log('Get current user fail: ', response)\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport UserIconView from './UserIcon-View'\nimport { logoutUser as logoutUserAction } from '../../../../redux/actions/user-actions'\n\nconst UserIconRedux = ({ username, logoutUser }) => {\n    return <UserIconView username={username} logoutUser={logoutUser} />\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state\n    return { username: user.user && user.user.username }\n}\n\nexport default connect(mapStateToProps, { logoutUser: logoutUserAction })(UserIconRedux);","import { LOGOUT } from '../../action-constants';\n\nimport { logoutUser } from '../../../server-communication/httpServer'\n\nexport default () => async dispatch => {\n    logoutUser(() => dispatch({ type: LOGOUT }),({ response }) => console.log('Logout Failed: ', response));\n}\n","import UserIcon from './UserIcon-Redux'\n\nexport default UserIcon","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Nav, Navbar } from 'react-bootstrap'\n\nimport { NotificationIcon, UserIcon } from './components'\nimport { withoutNavigateProp } from '../standalone'\nimport './Header-Style.scss'\n\n\nconst RegisterButton = (\n    <Link to='/register' component={(props) => withoutNavigateProp(props, Button)}>\n        Register\n    </Link>\n)\n\nconst LoginButton = (\n    <Link\n        to='/login'\n        component={(props) => withoutNavigateProp(props, Button)}\n        variant='outline-primary'\n    >\n        Login\n    </Link>\n)\n\nconst HeaderView = ({ isUserRegistered, isUserLoggedIn }) => {\n    const asNavItem = (component) => {\n        return <Nav.Item className='mx-3 cursor-pointer'>{component}</Nav.Item>\n    }\n\n    const getRegisterButton = () => {\n        return !isUserRegistered ? asNavItem(RegisterButton) : null;\n    }\n\n    const getLoginButton = () => {\n        return !isUserLoggedIn ? asNavItem(LoginButton) : null;\n    }\n\n    const getUserIcon = () => {\n        return (isUserLoggedIn && isUserRegistered) ? asNavItem(<UserIcon />) : null;\n    }\n\n    return (\n        <Container className='header-navbar-container' fluid>\n            <Navbar expand='large' sticky='top'>\n                <Navbar.Brand>\n                    <Link to=\"/\" className='brand'> ChatRooms </Link>\n                </Navbar.Brand>\n\n                <Nav className='flex-row'>\n                    <Container>\n                        <Nav.Item className='mx-3'>\n                            <Link\n                                to='/rooms'\n                                component={(props) => withoutNavigateProp(props, Nav.Link)}\n                                className='header-text'\n                            >\n                                Rooms\n                            </Link>\n                        </Nav.Item>\n                        <Nav.Item className='mx-3 cursor-pointer'>\n                            <NotificationIcon />\n                        </Nav.Item>\n                        {getLoginButton()}\n                        {getRegisterButton()}\n                        {getUserIcon()}\n                    </Container>\n                </Nav>\n            </Navbar>\n        </Container>\n    );\n}\n\nexport default HeaderView;\n\n/*\nLogo credits\n\n<div>\n    Icons made by\n    <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\n        Smashicons\n    </a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n        www.flaticon.com\n    </a>\n</div>\n*/","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport HeaderView from './Header-View'\n\nconst HeaderRedux = ({ isUserRegistered, isUserLoggedIn }) => {\n    return (\n        <HeaderView\n            isUserRegistered={isUserRegistered}\n            isUserLoggedIn={isUserLoggedIn}\n        />\n    );\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state\n    return {\n        isUserLoggedIn: user.isLoggedIn,\n        isUserRegistered: user.user && user.user.isRegistered\n    }\n}\n\nexport default connect(mapStateToProps)(HeaderRedux);\n\n/*\nLogo credits\n\n<div>\n    Icons made by\n    <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\n        Smashicons\n    </a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n        www.flaticon.com\n    </a>\n</div>\n*/","import Header from './Header-Redux'\n\nexport default Header","import React from 'react';\nimport Header from '../../components/Header'\n\nconst LayoutEnhancer = Component => {\n    return (\n        <div>\n            <Header />\n            <div className='centered-content'>\n                {Component}\n            </div>\n        </div>\n    )\n}\n\nexport default LayoutEnhancer;\n","import React from 'react'\n\nimport LandingPage from '../../components/LandingPage'\nimport withLayout from '../../components/hoc/WithLayout'\n\nconst RouteRoot = (props) => {\n    return withLayout(<LandingPage {...props} />)\n}\n\nexport default RouteRoot","import RouteRoot from './Route-Root'\n\nexport default RouteRoot","import React from 'react'\nimport { Button, Form, FormControl, FormGroup } from 'react-bootstrap'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { ToggleablePasswordField } from '../../../standalone'\nimport validate from './validate'\n\nconst getFormControlProps = (formProps) => {\n    const { touched, error, pristine } = formProps.meta\n    const hasErrors = touched && error\n\n    return {\n        ...formProps,\n        ...formProps.input,\n        isInvalid: hasErrors,\n        isValid: !pristine && !hasErrors\n    }\n}\n\nconst renderField = (formProps) => {\n    const { error } = formProps.meta\n    const formControlProps = getFormControlProps(formProps)\n\n    if (formProps.type === 'password') {\n        return <ToggleablePasswordField formProps={formControlProps} error={error} />\n    }\n\n    return (\n        <>\n            <Form.Label>{formProps.label}</Form.Label>\n            <FormControl {...formControlProps} />\n            <FormControl.Feedback type='invalid'>{error}</FormControl.Feedback>\n        </>\n    );\n}\n\nconst LoginForm = (props) => {\n    return (\n        <Form onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <FormGroup controlId=\"formUsernameGroup\">\n                <Field\n                    component={renderField}\n                    name=\"username\"\n                    type=\"text\"\n                    label=\"Enter Username\"\n                    placeholder=\"Example: mitsy_the_cat\"\n                />\n            </FormGroup>\n\n            <FormGroup controlId=\"formPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Enter Password\"\n                    placeholder=\"Password\"\n                />\n            </FormGroup>\n\n            <Button type=\"submit\">Login</Button>\n        </Form>\n    );\n}\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm)","export default (value) => {\n    const errors = {}\n    if(!value.username){\n        errors.username = 'Username is required'\n    }\n    if(!value.password){\n        errors.password = 'Password is required'\n    }\n\n    return errors\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Alert, Container } from 'react-bootstrap';\n\nimport { LoginForm } from './components'\nimport { DismissibleAlert } from '../standalone'\n\nimport './Login-Style.scss'\n\nconst renderAppropriateContentIfRedirect = (props) => {\n    const locationState = props.location.state;\n    if (locationState && locationState.isRedirectFromSuccessfulRegister) {\n        return (\n            <Alert variant=\"success\">\n                <Alert.Heading>Registration Completed!</Alert.Heading>\n                <p>Please login to continue</p>\n            </Alert>\n        )\n    }\n}\n\nconst renderLoginView = (props) => {\n    const {\n        shouldShowErrorAlert,\n        errorReason,\n        onErrorAlertDismissed,\n        onFormSubmit\n    } = props\n\n    return (\n        <Container className=\"compensate-header\">\n            <div className=\"centered-content login-container\">\n                {false && renderAppropriateContentIfRedirect(props)}\n                <DismissibleAlert\n                    variant=\"danger\"\n                    heading=\"Login Unsuccessful\"\n                    body={errorReason}\n                    show={shouldShowErrorAlert}\n                    onDismiss={onErrorAlertDismissed}\n                />\n                <LoginForm onFormSubmit={onFormSubmit} />\n            </div>\n        </Container>\n    )\n}\n\nconst LoginView = (props) => {\n    return props.isUserLoggedIn ? <Redirect to=\"/\" /> : renderLoginView(props)\n}\n\n\nexport default LoginView","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport LoginView from './Login-View'\nimport { loginUser } from '../../redux/actions/user-actions'\n\nclass LoginRedux extends React.Component {\n    onFormSubmit = (formValues) => {\n        this.props.loginUser(\n            formValues.username,\n            formValues.password,\n            this.props.onLoginFailure\n        );\n    }\n\n    render() {\n        const {\n            shouldShowErrorAlert,\n            errorReason,\n            onErrorAlertDismissed,\n            isUserLoggedIn\n        } = this.props\n\n        return (\n            <LoginView\n                isUserLoggedIn={isUserLoggedIn}\n                errorReason={errorReason}\n                shouldShowErrorAlert={shouldShowErrorAlert}\n                onErrorAlertDismissed={onErrorAlertDismissed}\n                onFormSubmit={this.onFormSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isUserLoggedIn: state.user.isLoggedIn }\n}\n\nexport default connect(mapStateToProps, { loginUser })(LoginRedux);\n","import { LOGIN } from '../../action-constants'\nimport { loginUser } from '../../../server-communication/httpServer'\n\nconst loginAction = (user) => {\n    return {\n        type: LOGIN,\n        payload: {\n            user: user\n        }\n    }\n}\n\nexport default (username, password, onFailureCallback) => async (dispatch) => {\n    const dispatchLoginAction = (response) => {\n        dispatch(loginAction(response.data))\n    }\n\n    loginUser(username, password, dispatchLoginAction, onFailureCallback);\n}\n","import React from 'react';\n\nimport LoginRedux from './Login-Redux';\n\nclass LoginContainer extends React.Component {\n    state = {\n        errorReason: null,\n        shouldShowErrorAlert: false,\n    }\n\n    onLoginFailure = ({ response }) => {\n        this.setState({\n            errorReason: response.data.reason,\n            shouldShowErrorAlert: true\n        })\n    }\n\n    onErrorAlertDismissed = () => {\n        this.setState({ shouldShowErrorAlert: false })\n    }\n\n    render() {\n        return (\n            <LoginRedux\n                onLoginFailure={this.onLoginFailure}\n                onErrorAlertDismissed={this.onErrorAlertDismissed}\n                {...this.state}\n            />\n        )\n    }\n}\n\nexport default LoginContainer;\n","import LoginContainer from './Login-Container'\n\nexport default LoginContainer","import React from 'react'\n\nimport withLayout from '../../components/hoc/WithLayout'\nimport Login from '../../components/Login'\n\nconst RouteLogin = (props) => {\n    return withLayout(<Login {...props} />)\n}\n\nexport default RouteLogin","import RouteLogin from './Route-Login'\n\nexport default RouteLogin","import React from 'react';\nimport { Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport { Field } from 'redux-form';\n\nimport { USERNAME_TAKEN_ERROR_MESSAGE } from './asyncValidate';\nimport { ToggleablePasswordField } from '../../../standalone'\n\nconst isAsyncValidationError = (error) => {\n    return error === USERNAME_TAKEN_ERROR_MESSAGE\n}\n\nconst getPropsForFormControl = (formProps) => {\n    const { touched, error, pristine, asyncValidating } = formProps.meta\n    const hasErrors = isAsyncValidationError(error) || (touched && error)\n\n    return {\n        ...formProps,\n        ...formProps.input,\n        className: asyncValidating ? 'input-loading' : '',\n        isInvalid: hasErrors,\n        isValid: !asyncValidating && !pristine && !hasErrors\n    }\n}\n\nconst renderField = (formProps) => {\n    const { error } = formProps.meta\n    const formControlProps = getPropsForFormControl(formProps)\n\n    if (formProps.type === 'password') {\n        return <ToggleablePasswordField formProps={formControlProps} error={error} />\n    }\n\n    return (\n        <>\n            <Form.Label>{formProps.label}</Form.Label>\n            <FormControl {...formControlProps} />\n            <FormControl.Feedback type=\"invalid\">{error}</FormControl.Feedback>\n        </>\n    );\n}\n\nconst RegistrationForm = ({ onFormSubmit, isRegisterButtonDisabled }) => {\n    const registerButtonCursorStyle = isRegisterButtonDisabled ? 'not-allowed' : 'cursor'\n\n    return (\n        <Form noValidate id=\"registration-form\" onSubmit={onFormSubmit}>\n            <FormGroup controlId=\"formUsernameGroup\">\n                <Field\n                    component={renderField}\n                    name=\"username\"\n                    type=\"text\"\n                    label=\"Enter Username\"\n                    placeholder=\"Example: mitsy_the_cat\"\n                />\n            </FormGroup>\n            <FormGroup controlId=\"formPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Enter Password\"\n                    placeholder=\"Password\"\n                />\n            </FormGroup>\n\n            <FormGroup controlId=\"formConfirmPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    label=\"Confirm Password\"\n                    placeholder=\"Confirm Password\"\n                />\n            </FormGroup>\n\n            <Button\n                type=\"submit\"\n                form=\"registration-form\"\n                className={`cursor-${registerButtonCursorStyle}`}\n                disabled={isRegisterButtonDisabled}\n            >\n                Register\n            </Button>\n        </Form>\n    );\n}\n\nexport default RegistrationForm","import { getUserByUsername } from '../../../../server-communication/httpServer'\n\nexport const USERNAME_TAKEN_ERROR_MESSAGE = 'That username is already taken'\n\nexport const checkUsernameExists = (values, _) => {\n    return new Promise((resolve, reject) => {\n        const onUsernameFound = () => {\n            reject({ 'username': USERNAME_TAKEN_ERROR_MESSAGE })\n        }\n        getUserByUsername(values.username, onUsernameFound, resolve)\n    })\n}","import React from 'react';\nimport { reduxForm } from 'redux-form';\n\nimport RegistrationFormView from './RegistrationForm-View'\nimport validate from './validate';\nimport { checkUsernameExists } from './asyncValidate';\n\nconst RegistrationFormRedux = ({ handleSubmit, onFormSubmit, ...otherProps }) => {\n    const { pristine, submitting, asyncValidating, invalid } = otherProps;\n    const isRegisterButtonDisabled = (pristine || submitting || asyncValidating || invalid);\n\n    return (\n        <RegistrationFormView\n            isRegisterButtonDisabled={isRegisterButtonDisabled}\n            onFormSubmit={handleSubmit(onFormSubmit)}\n        />\n    )\n}\n\nexport default reduxForm({\n    form: 'registerForm',\n    validate: validate,\n    asyncValidate: checkUsernameExists,\n    asyncChangeFields: ['username']\n})(RegistrationFormRedux)","const hasPasswordMismatch = (password, confirmPassword) => {\n    return password !== confirmPassword\n}\n\nexport default (values) => {\n    const { username, password, confirmPassword } = values;\n    const errors = {}\n\n    if (!username) {\n        errors.username = \"Username cannot be empty\"\n    }\n    if (!password) {\n        errors.password = \"Password cannot be empty\"\n    }\n    if (!confirmPassword) {\n        errors.confirmPassword = \"Confirm Password cannot be empty\"\n    } else if (hasPasswordMismatch(password, confirmPassword)) {\n        const errMsg = \"Confirm Password and Password must match\"\n        errors.confirmPassword = errMsg\n        errors.password = errMsg\n    }\n\n    return errors\n}","import RegistrationForm from './RegistrationForm-Redux'\n\nexport default RegistrationForm","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Redirect } from 'react-router-dom';\n\nimport { RegistrationForm } from './components'\n\nexport default ({ onFormSubmit, isUserLoggedIn, isUserRegistered }) => {\n    const renderRedirect = () => {\n        const RedirectToHome = <Redirect to=\"/\" />\n        const RedirectToLogin = <Redirect to={{\n            pathname: \"/login\",\n            state: { isRedirectFromSuccessfulRegister: true }\n        }} />\n\n        if (isUserLoggedIn) {\n            return RedirectToHome;\n        } else if (isUserRegistered) {\n            return isUserLoggedIn ? RedirectToHome : RedirectToLogin\n        }\n    }\n\n    if (isUserLoggedIn || isUserRegistered) {\n        return renderRedirect()\n    }\n    return (\n        <div className=\"centered-content\">\n            <Container>\n                <RegistrationForm onFormSubmit={onFormSubmit} />\n            </Container>\n        </div>\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport RegisterView from './Register-View'\nimport { registerUser } from '../../redux/actions/user-actions';\n\nclass RegisterContainer extends React.Component {\n\n    onRegistrationFailed = ({ response }) => {\n        console.log(\"Registration failed: \", response)\n    }\n\n    onFormSubmit = (formValues) => {\n        console.log(\"Registration Form Values: \", formValues)\n        this.props.registerUser(\n            formValues.username,\n            formValues.password,\n            formValues.confirmPassword,\n            this.onRegistrationFailed\n        )\n    }\n\n    render() {\n        const { isUserLoggedIn, isUserRegistered } = this.props\n\n        return (\n            <RegisterView\n                isUserLoggedIn={isUserLoggedIn}\n                isUserRegistered={isUserRegistered}\n                onFormSubmit={this.onFormSubmit}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isUserRegistered: state.user.user && state.user.user.isRegistered,\n        isUserLoggedIn: state.user.isLoggedIn\n    }\n}\n\nexport default connect(mapStateToProps, { registerUser })(RegisterContainer);\n","import { REGISTER } from '../../action-constants';\nimport { registerUser } from '../../../server-communication/httpServer'\n\n\nexport default (username, password, confirmPassword, onRequestRejected) => async (dispatch) => {\n    registerUser(username, password, confirmPassword,\n        (response) => dispatch({ type: REGISTER, payload: response.data }),\n        onRequestRejected\n    )\n}\n","import Register from './Register-Redux'\n\nexport default Register","import React from 'react'\n\nimport withLayout from '../../components/hoc/WithLayout'\nimport Register from '../../components/Register'\n\nconst RouteRegister = (props) => {\n    return withLayout(<Register {...props} />)\n}\n\nexport default RouteRegister","import RouteRegister from './Route-Register'\n\nexport default RouteRegister","import React from 'react';\nimport { Field } from 'redux-form';\nimport { Container, Button, Form } from 'react-bootstrap';\n\nimport { TextInputWordWrap } from '../../../standalone'\nimport './ChatMessageForm-Style.scss'\n\nconst renderMessageField = (formProps) => {\n    return (\n        <TextInputWordWrap {...formProps} />\n    );\n}\n\nconst ChatMessageFormView = (props) => {\n    const { onFormSubmit, formId } = props\n\n    return (\n        <Form onSubmit={onFormSubmit} id={formId} className='chat-message-form'>\n            <Container className='d-flex align-items-center' fluid>\n                <div className='textarea-flex-container'>\n                    <Form.Group controlId='message' className='textarea-wrapper'>\n                        <Field\n                            name='message'\n                            placeholder='Type a message...'\n                            type='text'\n                            component={renderMessageField}\n                        />\n                    </Form.Group>\n                </div>\n                <div className='send-btn-flex-container'>\n                    <Button type='submit' form={formId} variant='outline-primary'>Send</Button>\n                </div>\n            </Container>\n        </Form>\n    )\n}\n\nexport default ChatMessageFormView","import React from 'react';\nimport { reduxForm, reset } from 'redux-form';\n\nimport ChatMessageFormView from './ChatMessageForm-View'\n\nconst FORM_ID = 'chat-message-form'\n\nconst ChatMessageFormRedux = (props) => {\n    const { handleSubmit, onFormSubmit } = props\n    return <ChatMessageFormView onFormSubmit={handleSubmit(onFormSubmit)} formId={FORM_ID} />\n}\n\nconst resetForm = (_/*result*/, dispatch) => {\n    dispatch(reset(FORM_ID))\n}\n\nexport default reduxForm({\n    form: FORM_ID,\n    onSubmitSuccess: resetForm\n})(ChatMessageFormRedux);","import ChatMessageFormRedux from './ChatMessageForm-Redux'\n\nexport default ChatMessageFormRedux","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport './Message-Style.scss'\n\nconst Message = (props) => {\n    const { message, align, color, isCurrentUserMessageAuthor } = props\n    if (!message) {\n        return null\n    }\n\n    const getMessageAuthor = () => {\n        return isCurrentUserMessageAuthor ? 'You' : message.author && message.author.username ? message.author.username : '<unknown-user>'\n    }\n\n    const renderMessageArrow = () => {\n        const borderAttr = `15px solid #0c5460`\n        const style = align === 'left' ? { borderRight: borderAttr } : { borderLeft: borderAttr }\n\n        return <p className={`msg-box-arrow ${align}`} style={style} />\n    }\n\n    const messageAuthor = getMessageAuthor()\n    const messageArrow = renderMessageArrow()\n    return (\n        <Container className={`message float-${align}`}>\n            {align === 'left' && messageArrow}\n            {\n                <p style={{ color }} className='mb-0'>\n                    <strong>{messageAuthor}</strong>\n                </p>\n            }\n            <p className='mb-0'>{message.data}</p>\n            {align === 'right' && messageArrow}\n        </Container>\n    )\n}\n\nexport default Message","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport MessageView from './Message-View'\n\nclass MessageRedux extends React.Component {\n    isCurrentUserMessageAuthor = () => {\n        const { message, userId } = this.props\n        return message && message.author && message.author._id === userId\n    }\n\n    render() {\n        const { message, color } = this.props\n        if (!message) {\n            return null\n        }\n\n        const messageAlignment = this.isCurrentUserMessageAuthor() ? 'right' : 'left'\n\n        return (\n            <MessageView\n                message={message}\n                align={messageAlignment}\n                color={color}\n                isCurrentUserMessageAuthor={this.isCurrentUserMessageAuthor()}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { userId: state.user.user._id }\n}\n\nexport default connect(mapStateToProps, null)(MessageRedux);\n","import MessageRedux from './Message-Redux'\n\nexport default MessageRedux","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport Message from '../Message'\nimport './ChatWindow-Style.scss'\n\nconst ChatWindow = (props) => {\n    const { room, colorsAssignedToMessageAuthors } = props\n\n    const renderMessages = () => {\n        let prevMessageAuthor;\n        return room.messages.map(message => {\n            const messageAuthor = message.author && message.author._id\n            const paddingTop = messageAuthor === prevMessageAuthor ? 'pt-0' : ''\n            prevMessageAuthor = messageAuthor\n\n            return (\n                <ListGroup.Item\n                    key={message && message._id}\n                    className={`border-0 ${paddingTop} pb-1`}\n                >\n                    <Message\n                        color={colorsAssignedToMessageAuthors[messageAuthor]}\n                        roomId={room.roomId}\n                        message={message}\n                    />\n                </ListGroup.Item>\n            )\n        })\n    }\n\n    return (\n        <ListGroup className='chat-window pre-scrollable' variant=\"flush\">\n            {renderMessages()}\n        </ListGroup>\n    )\n}\n\nexport default ChatWindow;","const colors = [\n    '#fff07c',\n    '#80ff72',\n    '#7ee8fa',\n    '#eec0c6',\n    '#e58c8a'\n]\n\nconst colorChoicesExhausted = (usedColors) => {\n    return colors.length === usedColors.length\n}\n\nconst isColorUsed = (usedColors, randomColor) => {\n    return usedColors.indexOf(randomColor) !== -1\n}\n\nconst getRandomColor = (usedColors) => {\n    let randomColor;\n    do {\n        let randomIndex = Math.floor(Math.random() * colors.length)\n        randomColor = colors[randomIndex]\n    } while (isColorUsed(usedColors, randomColor) && !colorChoicesExhausted(usedColors));\n    return randomColor\n}\n\nconst assignColorsRandomly = (keys) => {\n    const assignedKeys = {}\n    const usedColors = []\n    keys.forEach(key => {\n        if (!assignedKeys[key]) {\n            const randomColor = getRandomColor(usedColors)\n            assignedKeys[key] = randomColor\n            if (!colorChoicesExhausted(usedColors)) usedColors.push(randomColor)\n        }\n    })\n\n    return assignedKeys\n}\n\nexport { assignColorsRandomly }","import React from 'react';\n\nimport ChatWindowView from './ChatWindow-View'\nimport { assignColorsRandomly } from './utils'\n\nclass ChatWindowContainer extends React.Component {\n    state = { randomAuthorColors: [] }\n\n    componentDidMount() {\n        const { room } = this.props\n        if (room) {\n            this.setState({\n                randomAuthorColors: this.assignRandomColorsToMessageAuthors()\n            })\n        }\n    }\n\n    assignRandomColorsToMessageAuthors() {\n        const { room } = this.props\n        const messageAuthors = room.messages.map(message => message.author && message.author._id)\n        return assignColorsRandomly(messageAuthors)\n    }\n\n    render() {\n        const { room } = this.props\n        const { randomAuthorColors } = this.state\n        if (!room) {\n            return null\n        }\n\n        return <ChatWindowView room={room} colorsAssignedToMessageAuthors={randomAuthorColors} />\n    }\n}\n\nexport default ChatWindowContainer;\n","import ChatWindowContainer from './ChatWindow-Container'\n\nexport default ChatWindowContainer","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\nimport { Container } from 'react-bootstrap/';\n\nimport { WithLink, WithModalTrigger } from '../../../hoc'\nimport { TooltipWrapper } from '../../../standalone'\nimport './RoomHeader-Style.scss'\n\nconst RoomHeader = ({ room, className }) => {\n    const renderRoomActionIcons = () => {\n        const ActionLeaveRoom = (\n            <WithModalTrigger\n                component={FontAwesomeIcon}\n                icon={faSignOutAlt}\n                className='cursor-pointer'\n                modalName='LeaveRoom'\n                modalProps={{ room }}\n            />\n        )\n\n        const ActionInviteUser = (\n            <WithModalTrigger\n                component={FontAwesomeIcon}\n                icon={faPlus}\n                className='cursor-pointer'\n                modalName='InviteUser'\n                modalProps={{ room }}\n            />\n        )\n\n        const ActionCloseRoomWindow = (\n            <WithLink\n                component={FontAwesomeIcon}\n                icon={faWindowClose}\n                className='cursor-pointer'\n                to='/rooms'\n            />\n        )\n\n        const actionsWithTooltip = [\n            {\n                tooltipLabel: 'Leave Room',\n                tooltipId: 'tooltip-leave-room',\n                Component: ActionLeaveRoom\n            },\n            {\n                tooltipLabel: 'Invite User',\n                tooltipId: 'tooltip-invite-user',\n                Component: ActionInviteUser\n            },\n            {\n                tooltipLabel: 'Close Room Window',\n                tooltipId: 'tooltip-close-room',\n                Component: ActionCloseRoomWindow\n            }\n        ]\n\n        return actionsWithTooltip.map(({ tooltipId, tooltipLabel, Component }) => {\n            return <TooltipWrapper\n                triggerComponent={Component}\n                label={tooltipLabel}\n                id={tooltipId}\n                key={tooltipId}\n            />\n        })\n    }\n\n    return (\n        <Container fluid className={`room-page-sub-header ${className}`}>\n            <div className='d-flex align-items-center h-100'>\n                <div className='room-name-container text-overflow-ellipses'>\n                    {room.name}\n                </div>\n                <div className='room-actions-container'>\n                    <div className='d-flex justify-content-around'>\n                        {renderRoomActionIcons()}\n                    </div>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\nexport default RoomHeader","import RoomHeaderView from './RoomHeader-View'\n\nexport default RoomHeaderView","import { joinRoom } from '../../../server-communication/httpServer'\nimport { JOIN_ROOM } from '../../action-constants'\n\nexport default (roomId, onSuccess, onFailure) => dispatch => {\n    joinRoom(roomId).then(({ data }) => {\n        dispatch({ type: JOIN_ROOM, payload: { roomId, updatedMembers: data.members } })\n        onSuccess()\n    }).catch(onFailure)\n}","import React from 'react';\n\nimport ProgressButton from '../ProgressButton'\n\nconst RoomActionButton = ({\n    progress,\n    propsProgressInitial,\n    propsProgressPending,\n    propsProgressSuccess,\n    propsProgressFailure,\n    defaultProps,\n    ...rest\n}) => {\n\n    const constructProps = () => {\n        const propsInit = propsProgressInitial && { ...propsProgressInitial }\n        const propsPending = propsProgressPending && { ...propsProgressPending }\n        const propsSuccess = propsProgressSuccess && { ...propsProgressSuccess }\n        const propsFailure = propsProgressFailure && { ...propsProgressFailure }\n        return (\n            {\n                propsProgressInitial: { ...defaultProps.initial, ...propsInit },\n                propsProgressPending: { ...defaultProps.pending, ...propsPending },\n                propsProgressSuccess: { ...defaultProps.success, ...propsSuccess },\n                propsProgressFailure: { ...defaultProps.fail, ...propsFailure }\n            }\n        )\n    }\n\n    return <ProgressButton progress={progress} {...constructProps()} {...rest} />\n}\n\nexport default RoomActionButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst CreateRoomButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Create Room' },\n        pending: { label: 'Creating Room...' },\n        success: { label: 'Room Created' },\n        fail: { label: 'Error Creating Room' },\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default CreateRoomButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst DeleteRoomButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Delete Room' },\n        pending: { label: 'Deleting Room...' },\n        success: { label: 'Room Deleted' },\n        fail: { label: 'Error Deleting Room' }\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default DeleteRoomButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst JoinRoomButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Join Room', },\n        pending: { label: 'Joining Room...' },\n        success: { label: 'Room Joined' },\n        fail: { label: 'Error Joining Room' }\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default JoinRoomButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst LeaveRoomButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Leave Room' },\n        pending: { label: 'Leaving Room...' },\n        success: { label: 'Room Left' },\n        fail: { label: 'Error Leaving Room' },\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default LeaveRoomButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst SendRoomJoinRequestButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Send Join Request' },\n        pending: { label: 'Sending Request...' },\n        success: { label: 'Request Sent' },\n        fail: { label: 'Error Sending Request' },\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default SendRoomJoinRequestButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst InviteUserButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Send Invitation' },\n        pending: { label: 'Sending Invitation...' },\n        success: { label: 'Invitation Sent' },\n        fail: { label: 'Error Sending Invitation' }\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default InviteUserButton;\n","import React from 'react';\n\nimport RoomActionButton from './RoomActionButton'\n\nconst AcceptRoomInvitationButton = (props) => {\n    const defaultProps = {\n        initial: { label: 'Accept' },\n        pending: { label: 'Accepting Invitation...' },\n        success: { label: 'Accepted' },\n        fail: { label: 'Error Accepting Invitation' },\n    }\n    return <RoomActionButton  defaultProps={defaultProps} {...props} />\n}\n\nexport default AcceptRoomInvitationButton;  ","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ButtonGroup, Container } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSadCry } from '@fortawesome/free-solid-svg-icons'\n\nimport { JoinRoomButton } from '../../../standalone/RoomActionButtons'\n\nconst getJoinRoomButton = (joinRoomProgress, onClick) => {\n    return (\n        <JoinRoomButton\n            progress={joinRoomProgress}\n            propsProgressInitial={{ onClick }}\n        />\n    )\n}\n\nconst RoomNotJoinedView = ({\n    room,\n    joinRoomProgress,\n    onJoinRoomButtonClick\n}) => {\n    console.log('room: ', room)\n    if (!room) return null\n\n    const isPrivateRoom = room.type === 'private'\n    const possibleActionText = isPrivateRoom ? 'send a join request' : 'join the room'\n\n    //Using className for button (Link) because a \n    //Button component will cause page reload which isn't desired here\n    //since Room and RoomList are supposed to look like same page application \n    //instead of separate\n    return (\n        <Container fluid className='centered-content h-100'>\n            <div className='d-flex flex-column justify-content-between align-items-center mx-auto'>\n                <FontAwesomeIcon icon={faSadCry} size='5x' color='#b7b9ba' className='mb-4' />\n                <h4>You are not a member of this room</h4>\n                <p className=' h-100 subtitle'>To access, you must {possibleActionText}</p>\n                <ButtonGroup>\n                    {\n                        isPrivateRoom ?\n                            <div>Send a request</div> :\n                            getJoinRoomButton(joinRoomProgress, onJoinRoomButtonClick)\n                    }\n                    <Link to='/rooms' className='btn btn-outline-secondary'>\n                        Back to Rooms\n                    </Link>\n                </ButtonGroup>\n            </div>\n        </Container>\n    )\n}\n\nexport default RoomNotJoinedView","import React from 'react'\n\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../../standalone/ProgressButton'\nimport RoomNotJoinedView from './RoomNotJoined-View'\n\nclass RoomNotJoinedContainer extends React.Component {\n    state = { joinRoomProgress: PROGRESS_INITIAL }\n\n    onJoinRoomButtonClick = () => {\n        this.onJoinRoomPending()\n        const { room, joinRoom } = this.props\n        const roomId = room && room.roomId\n        joinRoom(roomId, this.onJoinRoomSuccess, this.onJoinRoomFail)\n    }\n\n    onJoinRoomPending = () => {\n        this.setState({ joinRoomProgress: PROGRESS_PENDING })\n    }\n\n    onJoinRoomSuccess = () => {\n        this.setState({ joinRoomProgress: PROGRESS_SUCCESS })\n    }\n\n    onJoinRoomFail = () => {\n        this.setState({ joinRoomProgress: PROGRESS_FAIL })\n    }\n\n    render() {\n        return (\n            <RoomNotJoinedView\n                onJoinRoomButtonClick={this.onJoinRoomButtonClick}\n                {...this.props}\n                {...this.state}\n            />\n        )\n    }\n}\n\nexport default RoomNotJoinedContainer","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n    joinRoom\n} from '../../../../redux/actions/room-actions'\nimport RoomNotJoinedContainer from './RoomNotJoined-Container'\n\nconst RoomNotJoinedRedux = (props) => {\n    return <RoomNotJoinedContainer {...props} />\n}\n\nexport default connect(null, { joinRoom })(RoomNotJoinedRedux)","import RoomNotJoined from './RoomNotJoined-Redux'\n\nexport default RoomNotJoined","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nimport { ChatMessageForm, ChatWindow, RoomHeader, RoomNotJoined } from './components'\nimport isRoomMember from './utils/isRoomMember'\nimport './Room-Style.scss'\n\nconst renderLoadingRoom = () => {\n    return (\n        <div className='centered-content'>\n            <h2>Please wait while the Room is loading...</h2>\n            <Spinner size='lg' animation='border' />\n        </div>\n    );\n}\n\nconst renderErrorScreen = (error) => {\n    //TODO:\n    //Make components like <RoomNotFound room-{room} />\n    //Use <PageNotFound />, etc inside those components providing appropriate messages\n    switch (error.status) {\n        default:\n            return <div>Unexpected Error</div>\n    }\n}\n\nconst renderRoomContent = (room, onSendMessageButtonClick) => {\n    return (\n        <>\n            <RoomHeader room={room} className='room-content-header' />\n            <div className='room-content-body'>\n                <ChatWindow room={room} />\n            </div>\n            <div className='room-content-footer'>\n                <ChatMessageForm onFormSubmit={onSendMessageButtonClick} />\n            </div>\n        </>\n    )\n}\n\nconst renderRoom = (room, currentUser, onSendMessageButtonClick) => {\n    return (\n        <div className='d-flex flex-column room-content-container'>\n            {renderRoomContent(room, currentUser, onSendMessageButtonClick)}\n        </div>\n    );\n}\n\nconst Room = (props) => {\n    const { error, room, currentUser, onSendMessageButtonClick } = props\n\n    if (error) {\n        return renderErrorScreen(error)\n    } else if (!room) {\n        return renderLoadingRoom()\n    } else if (!isRoomMember(room, currentUser && currentUser._id)) {\n        return <RoomNotJoined room={room} />\n    } else {\n        return renderRoom(room, onSendMessageButtonClick)\n    }\n}\n\nexport default Room;","export default (room, queryUserId) => {\n    if (!room || !room.members || !queryUserId) {\n        return false\n    }\n\n    const memberDocIndex = room.members.findIndex(member => {\n        return member.user && member.user._id === queryUserId\n    })\n\n    return memberDocIndex !== -1\n}","export default {\n    ROOM_EVENT: 'event:room',\n    ROOM_JOIN_PERMISSION_SEND: 'room_join_permission_send',\n    ROOM_JOIN_PERMISSION_RECIEVE: 'room_join_permission_recieve',\n    CONNECT_TO_ROOM: 'connect_to_room',\n    JOIN_ROOM: 'join_room',\n    NEW_USER_IN_ROOM: 'new_user_in_room',\n\n    MESSAGE_EVENT: 'event:message',\n    NEW_MESSAGE: 'send_message',\n\n    NOTIFICATION_EVENT: 'event:notification',\n    NEW_NOTIFICATION: 'new_notification'\n}","import openSocket from 'socket.io-client';\nimport events from '../constants/serverEventConstants';\n\nconst socket = openSocket('/', { autoConnect: false });\n\nexport const connectToServer = (onConnectionFailed) => {\n    socket.connect();\n    socket.on('connect_error', onConnectionFailed);\n}\n\nexport const onServerConnected = (callback) => {\n    socket.on('connect', callback)\n}\n\nexport const onServerDisconnected = (callback) => {\n    socket.on('disconnect', callback)\n}\n\nexport const registerNewMessageListener = (roomId, callback) => {\n    socket.on(events.MESSAGE_EVENT, (...args) => {\n        console.log(\"Message Event: \", args)\n        const subEvent = args[0]\n        if (subEvent === events.NEW_MESSAGE) {\n            const data = args[1]\n            if (data.roomId === roomId) {\n                callback(data)\n            }\n        }\n    })\n}\n\nexport const onNewNotification = (callback) => {\n    console.log('registered')\n    socket.on(events.NOTIFICATION_EVENT, (subEvent) => {\n        console.log('on notif event: ', subEvent)\n        if (subEvent === events.NEW_NOTIFICATION) {\n            callback()\n        }\n    })\n}\n\nexport const joinRoom = (roomId, callback) => {\n    return socket.emit(events.ROOM_EVENT, events.JOIN_ROOM, roomId, callback);\n}\n\nexport const connectToRoom = (roomId, callback) => {\n    return socket.emit(events.ROOM_EVENT, events.CONNECT_TO_ROOM, roomId, callback)\n}\n\nexport const sendMessage = (roomId, messageId) => {\n    return socket.emit(events.MESSAGE_EVENT, events.NEW_MESSAGE, roomId, messageId)\n}","import { sendMessage } from '../server-communication/socketServer'\nimport { addMessageToRoom } from '../server-communication/httpServer'\n\nexport default (roomId, message, onSuccess, onFailure) => {\n    addMessageToRoom(roomId, message, (response) => {\n        sendMessage(roomId, response._id)\n        onSuccess(response)\n    }, onFailure)\n}","import React from 'react';\n\nimport RoomView from './Room-View';\nimport { connectToRoom, registerNewMessageListener } from '../../server-communication/socketServer'\nimport sendMessage from '../../helpers/sendMessage'\n\nclass RoomContainer extends React.Component {\n    state = { error: null }\n\n    componentDidMount() {\n        const { fetchRoom, roomId } = this.props;\n        console.log('roomId: ', roomId)\n        registerNewMessageListener(roomId, (data) => {\n            console.log(\"new message: \", data)\n            fetchRoom(roomId, this.onRoomFetchSuccess, this.onRoomFetchFail)\n        })\n        fetchRoom(roomId, () => { }, this.onRoomFetchFail)\n    }\n\n    componentDidUpdate() {\n        const { room } = this.props\n        if (room) {\n            connectToRoom(room.roomId, () => { })\n        }\n    }\n\n    onRoomFetchFail = ({ response }) => {\n        this.setState({ error: response })\n    }\n\n    onSendMessageButtonClick = (formValues) => {\n        const { message } = formValues\n        if (!message || message.trim().length === 0) {\n            return null\n        } else {\n            const { room } = this.props\n            sendMessage(room.roomId, message, this.onSendMessageSuccess, this.onSendMessageFailure)\n        }\n    }\n\n    onSendMessageSuccess = (response) => {\n        this.setState({ room: response.data })\n    }\n\n    onSendMessageFailure = ({ response }) => {\n        //TODO: Message send failure should be addressed using separate state field\n        //As of now, if any error occurs, it will simply be treated as a \"room-error\"\n        //and appropriate message shown (e.g. \"Room not found\" or \"Forbidden\")\n        //which is misleading and inappropriate\n        this.setState({ error: response })\n    }\n\n    render() {\n        const { currentUser, room } = this.props\n\n        return <RoomView\n            currentUser={currentUser}\n            room={room}\n            onSendMessageButtonClick={this.onSendMessageButtonClick}\n            {...this.state}\n        />;\n    }\n}\n\nexport default RoomContainer\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport RoomContainer from './Room-Container'\nimport { fetchRoom } from '../../redux/actions/room-actions'\n\nconst RoomRedux = (props) => {\n    //TODO: When directly visiting a room's url, the store gets confusingly malfunctioned\n    //Example: On clicking join, the component is not updated and it remains same\n    //i.e., with the \"Joined Room\" button instead of reloading and showing the room window\n    //Upon inspecting, the redux store seems to consider the user as the member of the room\n    //However, as stated, the component doesn't seems to do the same and still shows the \n    //Room not joined screen with the green (successful) \"Room Joined\" button\n    return <RoomContainer {...props} />;\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        currentUser: state.user && state.user.user,\n        room: state.rooms[ownProps.roomId]\n    }\n}\n\nexport default connect(mapStateToProps, { fetchRoom })(RoomRedux)\n","import { getRoom } from '../../../server-communication/httpServer'\nimport {\n    FETCH_ROOM\n} from '../../action-constants'\n\nexport default (roomId, onSuccess, onFailure) => dispatch => {\n    getRoom(roomId).then(({ data }) => {\n        onSuccess(data)\n        dispatch({ type: FETCH_ROOM, payload: data })\n    }).catch(onFailure)\n}","import Room from './Room-Redux'\n\nexport default Room","import React from 'react'\nimport { ButtonGroup, Container } from 'react-bootstrap'\n\nimport {\n    CreateRoomModalTrigger,\n    JoinRoomModalTrigger\n} from '../../../standalone/RoomModalTriggers'\n\nimport './EmptyRoomList-Style.scss'\n\nconst titleSubtitleTemplate = (title, subtitle) => {\n    return (\n        <Container fluid className='d-flex flex-column align-items-center'>\n            <div className='title empty-room-list-title'>\n                {title}\n            </div>\n            <div className='subtitle empty-room-list-subtitle'>\n                {subtitle}\n            </div>\n        </Container>\n    )\n}\n\nconst renderEmptySearchResultView = () => {\n    const title = 'No rooms matching your search query'\n    const subtitle = 'Try checking spelling and other possible errors, if any'\n    return titleSubtitleTemplate(title, subtitle)\n}\n\nconst renderEmptyRoomListView = () => {\n    const title = 'There are no public rooms available'\n    const subtitle = (\n        <ButtonGroup>\n            <CreateRoomModalTrigger\n                size='sm'\n                className='empty-room-list-subtitle'\n            >\n                Create a room\n            </CreateRoomModalTrigger>\n\n            <JoinRoomModalTrigger\n                size='sm'\n                variant='outline-primary'\n                className='empty-room-list-subtitle'\n            >\n                Join a room by Id\n            </JoinRoomModalTrigger>\n        </ButtonGroup>\n    )\n    return titleSubtitleTemplate(title, subtitle)\n}\n\nconst EmptyRoomList = ({ isSearchResult }) => {\n    return (\n        <Container className='centered-content compensate-header'>\n            {\n                isSearchResult ? renderEmptySearchResultView() : renderEmptyRoomListView()\n            }\n        </Container>\n    )\n}\n\nexport default EmptyRoomList","import EmptyRoomList from './EmptyRoomList-View'\n\nexport default EmptyRoomList","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { ButtonGroup } from 'react-bootstrap';\n\nimport { DeleteRoomModalTrigger } from '../../../standalone/RoomModalTriggers'\nimport { JoinRoomButton } from '../../../standalone/RoomActionButtons'\n\nconst getJoinRoomAction = (joinRoomProgress, onClick) => {\n    return <JoinRoomButton\n        progress={joinRoomProgress}\n        propsProgressInitial={{\n            label: 'Join',\n            onClick\n        }}\n    />\n}\n\nconst getDeleteRoomAction = (room) => {\n    return <DeleteRoomModalTrigger room={room}>Delete</DeleteRoomModalTrigger>\n}\n\nconst getOpenRoomAction = (room) => {\n    const roomId = room.roomId ? room.roomId : ''\n    return (\n        <Link to={`/rooms/${roomId}`} className='btn btn-outline-primary'>\n            Open\n        </Link>\n    )\n}\n\nconst RoomListItemActions = (props) => {\n    const { room, isCurrentUserRoomMember, isCurrentUserRoomAdmin, ...restProps } = props\n\n    const getActionsForRoomMember = () => {\n        return (\n            <ButtonGroup>\n                {getOpenRoomAction(room)}\n                {isCurrentUserRoomAdmin ? getDeleteRoomAction(room) : null}\n            </ButtonGroup>\n        )\n    }\n\n    const getActionsForNonRoomMember = () => {\n        const { joinRoomProgress, onJoinRoomButtonClick } = restProps\n        const onClick = () => onJoinRoomButtonClick(room ? room.roomId : '')\n        return getJoinRoomAction(joinRoomProgress, onClick)\n    }\n\n    return isCurrentUserRoomMember ? getActionsForRoomMember() : getActionsForNonRoomMember()\n}\n\n\nexport default RoomListItemActions\n","import React from 'react';\nimport isEmpty from 'is-empty'\nimport { connect } from 'react-redux';\n\nimport RoomListItemActions from './RoomListItemActions-View'\n\nclass RoomListItemActionsRedux extends React.Component {\n    getMemberReferenceOfCurrentUser = () => {\n        const { room, currentUser } = this.props\n        if (!room || !currentUser) {\n            return null\n        }\n\n        const currentUserMatchesRoomMemberUser = (roomMember) => {\n            return roomMember && roomMember.user && roomMember.user._id === currentUser._id\n        }\n\n        return room.members.find(currentUserMatchesRoomMemberUser)\n    }\n\n    isCurrentUserRoomMember = (currentUserMemberReference) => {\n        return !isEmpty(currentUserMemberReference)\n    }\n\n    isCurrentUserRoomAdmin = (currentUserMemberReference) => {\n        if (!this.isCurrentUserRoomMember(currentUserMemberReference)) {\n            return false\n        }\n\n        const currentUserMemberType = currentUserMemberReference.memberType\n        return currentUserMemberType === 'admin'\n    }\n\n    render() {\n        const currentUserMemberReference = this.getMemberReferenceOfCurrentUser()\n        return (\n            <RoomListItemActions\n                isCurrentUserRoomMember={this.isCurrentUserRoomMember(currentUserMemberReference)}\n                isCurrentUserRoomAdmin={this.isCurrentUserRoomAdmin(currentUserMemberReference)}\n                {...this.props}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { currentUser: state.user.user, isUserLoggedIn: state.user.isLoggedIn }\n}\n\nexport default connect(mapStateToProps)(RoomListItemActionsRedux);","import RoomListItemActions from './RoomListItemActions-Redux'\n\nexport default RoomListItemActions","const getAppropriateTimeDifferenceData = (oneDate, otherDate) => {\n    const differenceInYears = oneDate.getYear() - otherDate.getYear()\n    if (differenceInYears > 0) {\n        let unit = differenceInYears > 1 ? 'years' : 'year'\n        return { unit, difference: differenceInYears }\n    }\n\n    const differenceInMonths = oneDate.getMonth() - otherDate.getMonth()\n    if (differenceInMonths > 0) {\n        let unit = differenceInMonths > 1 ? 'months' : 'month'\n        return { unit, difference: differenceInMonths }\n    }\n\n    const differenceInDays = oneDate.getDate() - otherDate.getDate()\n    if (differenceInDays > 0) {\n        let unit = differenceInDays > 1 ? 'days' : 'day'\n        return { unit, difference: differenceInDays }\n    }\n\n    const differenceInHours = oneDate.getHours() - otherDate.getHours()\n    if (differenceInHours > 0) {\n        let unit = differenceInHours > 1 ? 'hrs' : 'hr'\n        return { unit, difference: differenceInHours }\n    }\n\n    const differenceInMinutes = oneDate.getMinutes() - otherDate.getMinutes()\n    if (differenceInMinutes > 0) {\n        let unit = differenceInMinutes > 1 ? 'mins' : 'min'\n        return { unit, difference: differenceInMinutes }\n    }\n\n    const differenceInSeconds = oneDate.getSeconds() - otherDate.getSeconds()\n    if (differenceInSeconds > 0) {\n        let unit = differenceInSeconds > 1 ? 'secs' : 'sec'\n        return { unit, difference: differenceInSeconds }\n    }\n}\n\nconst getAppropriateTimeDifferenceText = (oneDate, otherDate) => {\n    if (oneDate < otherDate) {\n        const errMsg = '[ISODateToReadableString.getAppropriateTimeDifferenceText] First date argument must be greater than the second argument'\n        throw new Error(errMsg)\n    }\n\n    const timeDiffData = getAppropriateTimeDifferenceData(oneDate, otherDate)\n    if (!timeDiffData) {\n        return 'just now'\n    }\n\n    return `${timeDiffData.difference}${timeDiffData.unit} ago`\n}\n\nexport default (isoDate) => {\n    if (!isoDate) {\n        return '<unknown>'\n    }\n\n    const argDate = new Date(isoDate)\n    const todayDate = new Date()\n\n    return getAppropriateTimeDifferenceText(todayDate, argDate)\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroupItem } from 'react-bootstrap';\n\nimport RoomListItemActions from '../RoomListItemActions'\nimport convertISODateToReadableString from '../../../../helpers/convertISODateToReadableString'\n\nconst RoomListItem = ({\n    room,\n    onJoinRoomButtonClick,\n    joinRoomProgress,\n    ...props\n}) => {\n\n    if (!room) return null\n\n    const getTitle = () => {\n        return <Link to={`/rooms/${room.roomId}`}>{room.name}</Link>\n    }\n\n    const getSubtitle = () => {\n        const roomOwner = room.createdBy\n        const roomCreatedBy = roomOwner ? roomOwner.username : '<unknown>'\n        const roomCreatedAt = convertISODateToReadableString(room.createdAt)\n\n        return (\n            <span className='max-width-100 subtitle'>\n                Created {roomCreatedAt} by {roomCreatedBy}\n            </span>\n        )\n    }\n\n    return (\n        <ListGroupItem className='px-0'>\n            <Container fluid className='d-flex flex-row justify-content-between'>\n                <div className='text-overflow-ellipses'>\n                    <h5 className='max-width-100 text-overflow-ellipses'>{getTitle()}</h5>\n                    {getSubtitle()}\n                </div>\n                <div>\n                    <RoomListItemActions\n                        room={room}\n                        onJoinRoomButtonClick={onJoinRoomButtonClick}\n                        joinRoomProgress={joinRoomProgress}\n                    />\n                </div>\n            </Container>\n        </ListGroupItem>\n    )\n}\n\nexport default RoomListItem;\n","import React from 'react';\n\nimport RoomListItemView from './RoomListItem-View'\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../../standalone/ProgressButton'\n\nclass RoomListItemContainer extends React.Component {\n    state = { joinRoomProgress: PROGRESS_INITIAL }\n\n    onJoinRoomPending = () => {\n        this.setState({ joinRoomProgress: PROGRESS_PENDING })\n    }\n\n    onJoinRoomSuccess = () => {\n        this.setState({ joinRoomProgress: PROGRESS_SUCCESS })\n    }\n\n    onJoinRoomFailure = () => {\n        this.setState({ joinRoomProgress: PROGRESS_FAIL })\n    }\n\n    onJoinRoomButtonClick = (roomId) => {\n        this.onJoinRoomPending()\n        this.props.joinRoom(roomId, this.onJoinRoomSuccess, this.onJoinRoomFailure)\n    }\n\n    render() {\n        return (\n            <RoomListItemView\n                onJoinRoomButtonClick={this.onJoinRoomButtonClick}\n                {...this.state}\n                {...this.props}\n            />\n        )\n    }\n}\n\nexport default RoomListItemContainer;\n","import RoomListItem from './RoomListItem-Redux'\n\nexport default RoomListItem","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport RoomListItemContainer from './RoomListItem-Container'\nimport { joinRoom } from '../../../../redux/actions/room-actions'\n\nconst RoomListItemRedux = (props) => {\n    return <RoomListItemContainer {...props} />\n}\n\nexport default connect(null, { joinRoom })(RoomListItemRedux)","import React from 'react';\nimport { Button, Container, Form, FormGroup, FormCheck, FormControl } from 'react-bootstrap'\nimport { reduxForm, Field } from 'redux-form'\n\nconst FORM_ID = 'rooms-sort-form'\n\nconst sortOptionsRadioButtonProps = [\n    { label: 'By name (ascending)', value: 'name-asc', id: 'sort-by-name-asc' },\n    { label: 'By name (descending)', value: 'name-des', id: 'sort-by-name-des' },\n    { label: 'By date of creation (oldest first)', value: 'date-asc', id: 'sort-by-date-asc' },\n    { label: 'By date of creation (newest first)', value: 'date-des', id: 'sort-by-date-des' }\n]\n\nconst filterOptionsRadioButtonProps = [\n    { label: 'All Rooms', value: 'no-filter', id: 'filter-none' },\n    { label: 'Joined Rooms', value: 'is-member', id: 'filter-member' },\n    { label: 'Rooms Not Joined', value: 'is-not-Member', id: 'filter-not-member' },\n    { label: 'Rooms Created By Me', value: 'user-created', id: 'filter-user-created' },\n    { label: 'Rooms Not Created By Me', value: 'user-not-created', id: 'filter-user-not-created' }\n]\n\n\nclass RoomListControlsForm extends React.Component {\n    renderRadioButton = ({ input, ...formProps }) => {\n        return <FormCheck {...formProps} {...input} />\n    }\n\n    renderSortOptions() {\n        const sortOptionRadioButtons = sortOptionsRadioButtonProps.map(({ id, ...radioButtonProps }) => {\n            return (\n                <Field\n                    component={this.renderRadioButton}\n                    type='radio'\n                    name='sortBy'\n                    key={id}\n                    required\n                    {...radioButtonProps}\n                />\n            )\n        })\n\n        return (\n            <FormGroup controlId='sort-options'>\n                <Form.Label>Sort By: </Form.Label>\n                {sortOptionRadioButtons}\n            </FormGroup>\n        )\n    }\n\n    renderInputRangedNumber = ({ input, label, ...formProps }) => {\n        return (\n            <>\n                <Form.Label>{label}</Form.Label>\n                <FormControl {...input} {...formProps} />\n            </>\n        )\n    }\n\n    renderPaginationControls() {\n        return (\n            <FormGroup controlId='items-per-page'>\n                <Field\n                    component={this.renderInputRangedNumber}\n                    name='itemsPerPage'\n                    label='Rooms Displayed Per Page: '\n                    type='number'\n                    min={1}\n                    max={100}\n                />\n            </FormGroup>\n        )\n    }\n\n    renderDisplayFilters() {\n        const renderDisplayFilterRadioButtons = () => {\n            return filterOptionsRadioButtonProps.map(({ id, ...radioButtonProps }) => {\n                return (\n                    <Field\n                        component={this.renderRadioButton}\n                        type='radio'\n                        name='displayFilter'\n                        key={id}\n                        {...radioButtonProps}\n                    />\n                )\n            })\n        }\n\n        return (\n            <FormGroup controlId='display-filter' >\n                <Form.Label>Filter Rooms: </Form.Label>\n                {renderDisplayFilterRadioButtons()}\n            </FormGroup>\n        )\n    }\n\n    render() {\n        const { handleSubmit, onFormSubmit } = this.props\n\n        return (\n            <Form id={FORM_ID} onSubmit={handleSubmit(onFormSubmit)}>\n                {this.renderSortOptions()}\n                <hr />\n                {this.renderPaginationControls()}\n                <hr />\n                {this.renderDisplayFilters()}\n                <Container fluid className='text-right'>\n                    <Button size='sm' variant='outline-primary' type='submit' form={FORM_ID}>\n                        Done\n                    </Button>\n                </Container>\n            </Form>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: FORM_ID,\n    initialValues: { sortBy: 'name-asc', itemsPerPage: 10, displayFilter: 'no-filter' },\n    destroyOnUnmount: false\n})(RoomListControlsForm);\n","import RoomListDisplayControlsForm from './RoomListDisplayControlsForm-View'\n\nexport default RoomListDisplayControlsForm","import RoomListDisplayFilter from './RoomListDisplayFilter-View'\n\nexport default RoomListDisplayFilter","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\n\nimport { Dropdown } from '../../../standalone'\nimport RoomListDisplayControlsForm from '../RoomListDisplayControlsForm'\nimport IconButton, { ICON_POS_LEFT } from '../../../standalone/IconButton';\n\nconst RoomListDisplayFilter = ({ onDisplayControlsFormSubmit }) => {\n    const hideDropdown = () => {\n        //Since rootClose is set to true in OverlayTrigger in Dropdown,\n        //clicking anywhere on body dismisses the dropdown\n        document.body.click()\n    }\n\n    const getFilterButton = () => {\n        return (\n            <IconButton\n                icon={<FontAwesomeIcon icon={faFilter} />}\n                iconPos={ICON_POS_LEFT}\n                className='no-highlight-around-element'\n                variant='secondary'\n                size='sm'\n            >\n                Filter\n            </IconButton>\n        )\n    }\n\n    const getDisplayControlsForm = () => {\n        const onFormSubmit = (formValues) => {\n            hideDropdown()\n            onDisplayControlsFormSubmit(formValues)\n        }\n        return <RoomListDisplayControlsForm onFormSubmit={onFormSubmit} />\n    }\n\n    return (\n        <Dropdown\n            menu={getDisplayControlsForm()}\n            triggerComponent={getFilterButton()}\n            show={true}\n        />\n    )\n}\n\nexport default RoomListDisplayFilter\n","import RoomListControlsSearchField from './RoomListSearchField-View'\n\nexport default RoomListControlsSearchField","import React from 'react';\nimport { FormControl, InputGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst RoomListSearchFieldView = ({ onSearchFieldInputChange }) => {\n    return (\n        <InputGroup className='rounded'>\n            <InputGroup.Prepend>\n                <InputGroup.Text>\n                    <FontAwesomeIcon icon={faSearch} />\n                </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n                name='searchQuery'\n                placeholder='Search Rooms'\n                onChange={onSearchFieldInputChange}\n            />\n        </InputGroup>\n    )\n}\n\nexport default RoomListSearchFieldView;\n","import RoomListControlsHeader from './RoomListControlsHeader-View'\n\nexport default RoomListControlsHeader","import React from 'react';\nimport { Container } from 'react-bootstrap'\n\nimport RoomListDisplayFilter from '../RoomListDisplayFilter'\nimport RoomListSearchField from '../RoomListSearchField'\n\n\nconst RoomListControlsHeader = ({\n    paginationItemsPerPage,\n    onDisplayControlsFormSubmit,\n    onSearchFieldInputChange\n}) => {\n    return (\n        <Container fluid className='room-page-sub-header d-flex align-items-center justify-content-between px-sm-0 mx-sm-0'>\n            <Container fluid>\n                <RoomListDisplayFilter\n                    paginationItemsPerPage={paginationItemsPerPage}\n                    onDisplayControlsFormSubmit={onDisplayControlsFormSubmit}\n                />\n            </Container>\n            <Container fluid>\n                <RoomListSearchField onSearchFieldInputChange={onSearchFieldInputChange} />\n            </Container>\n        </Container>\n    )\n}\n\nexport default RoomListControlsHeader;\n","import RoomListPagination from './RoomListPagination-View'\n\nexport default RoomListPagination","import React from 'react';\nimport { Container, Pagination } from 'react-bootstrap'\n\nimport { TooltipWrapper } from '../../../standalone'\nimport {\n    getPaginationOffsets,\n    MAX_PAGE_NUMBERS_DISPLAYED\n} from './utils'\n\nconst RoomListPaginationView = ({\n    totalRooms,\n    itemsPerPage,\n    currentPageNumber,\n    setCurrentPageNumber,\n}) => {\n\n    const totalPages = Math.ceil(totalRooms.length / itemsPerPage)\n\n    const onPaginationItemClick = (itemNumber) => {\n        setCurrentPageNumber(itemNumber)\n    }\n\n    const onPaginationPreviousClick = () => {\n        setCurrentPageNumber(Math.max(currentPageNumber - 1, 1))\n    }\n\n    const onPaginationNextClick = () => {\n        setCurrentPageNumber(Math.min(currentPageNumber + 1, totalPages))\n    }\n\n    const onPaginationFirstClick = () => {\n        setCurrentPageNumber(1)\n    }\n\n    const onPaginationLastClick = () => {\n        setCurrentPageNumber(totalPages)\n    }\n\n    const getPaginationItems = () => {\n        const paginationItems = []\n\n        for (let pageIndex = 1; pageIndex <= totalPages; pageIndex++) {\n            paginationItems.push(\n                <Pagination.Item\n                    active={currentPageNumber === pageIndex}\n                    key={pageIndex}\n                    id={pageIndex}\n                    onClick={() => onPaginationItemClick(pageIndex)}\n                >\n                    {pageIndex}\n                </Pagination.Item>\n            )\n        }\n\n        if (paginationItems.length > MAX_PAGE_NUMBERS_DISPLAYED) {\n            const {\n                leftOffset,\n                rightOffset\n            } = getPaginationOffsets(currentPageNumber, paginationItems.length)\n\n            const rightEllipsis = [rightOffset < paginationItems.length ?\n                <Pagination.Ellipsis key='ellipsis-right' /> : null]\n            const leftEllipsis = [leftOffset > 0 ?\n                <Pagination.Ellipsis key='ellipsis-left' /> : null]\n\n            return [\n                ...leftEllipsis,\n                ...paginationItems.slice(leftOffset, rightOffset + 1),\n                ...rightEllipsis\n            ]\n        }\n\n        return paginationItems\n    }\n\n    return (\n        <Container fluid className='d-flex flex-column align-items-center mt-5'>\n            <p>Showing Page {currentPageNumber} of {totalPages}</p>\n            <Pagination className='mx-auto'>\n\n                <TooltipWrapper\n                    label='First page'\n                    id='pagination-first'\n                    triggerComponent={<Pagination.First onClick={onPaginationFirstClick} />}\n                />\n                <TooltipWrapper\n                    triggerComponent={<Pagination.Prev onClick={onPaginationPreviousClick} />}\n                    label='Previous Page'\n                    id='pagination-prev'\n                />\n\n                {getPaginationItems()}\n\n                <TooltipWrapper\n                    triggerComponent={<Pagination.Next onClick={onPaginationNextClick} />}\n                    label='Next Page'\n                    id='pagination-next'\n                />\n                <TooltipWrapper\n                    triggerComponent={<Pagination.Last onClick={onPaginationLastClick} />}\n                    label='Last Page'\n                    id='pagination-last'\n                />\n\n            </Pagination>\n        </Container>\n    )\n}\n\nexport default RoomListPaginationView;\n","const MAX_PAGE_NUMBERS_DISPLAYED = 10\nconst MAX_ALLOWED_PAGE_OFFSET = MAX_PAGE_NUMBERS_DISPLAYED / 2 - 1\n\nconst getLeftOffset = (currentPageNumber) => {\n    if ((currentPageNumber - 1) < MAX_ALLOWED_PAGE_OFFSET) {\n        return 0\n    }\n    return (currentPageNumber - 1) - MAX_ALLOWED_PAGE_OFFSET\n}\n\nconst getRightOffset = (currentPageNumber) => {\n    return (currentPageNumber - 1) + MAX_ALLOWED_PAGE_OFFSET\n}\n\nconst getPaginationOffsets = (currentPageNumber, totalPages) => {\n    const leftOffset = getLeftOffset(currentPageNumber)\n    const rightOffset = getRightOffset(currentPageNumber)\n\n    const offsets = { left: leftOffset, right: rightOffset }\n\n    if (leftOffset !== 0 && rightOffset >= totalPages) {\n        offsets.left -= ((rightOffset + 1) - (totalPages - 1))\n    }\n    if (leftOffset === 0) {\n        offsets.right += (MAX_ALLOWED_PAGE_OFFSET + 1) - (currentPageNumber - 1)\n    }\n\n    return {\n        leftOffset: offsets.left,\n        rightOffset: offsets.right\n    }\n}\n\nexport { getPaginationOffsets, MAX_PAGE_NUMBERS_DISPLAYED, MAX_ALLOWED_PAGE_OFFSET }","import React from 'react'\nimport isEmpty from 'is-empty'\nimport { Container, ListGroup } from 'react-bootstrap'\n\nimport {\n    EmptyRoomList,\n    RoomListControlsHeader,\n    RoomListItem,\n    RoomListPagination\n} from './components/'\n\n\nconst RoomList = ({\n    roomsToDisplay,\n    isSearchResult,\n    onDisplayControlsFormSubmit,\n    onSearchFieldInputChange,\n    setCurrentPageNumber,\n    ...otherProps\n}) => {\n\n    const renderRoomList = () => {\n        if (isEmpty(roomsToDisplay)) {\n            return <EmptyRoomList isSearchResult={isSearchResult} />\n        }\n\n        return (\n            <ListGroup variant='flush' className='mx-0 mt-3'>\n                {\n                    roomsToDisplay.map((room) => {\n                        return <RoomListItem room={room} key={room.roomId} />\n                    })\n                }\n            </ListGroup>\n        )\n    }\n\n    const updatePageNumber = (pageNumber) => {\n        setCurrentPageNumber(pageNumber)\n    }\n\n    //TODO: Add custom sort style where users can drag a room up and down \n    //according to their convenience\n    return (\n        <Container fluid className='pb-5 mb-5' >\n            <RoomListControlsHeader\n                onDisplayControlsFormSubmit={onDisplayControlsFormSubmit}\n                onSearchFieldInputChange={onSearchFieldInputChange}\n            />\n            {renderRoomList()}\n            {\n                !isEmpty(roomsToDisplay)\n                    ? <RoomListPagination {...otherProps} setCurrentPageNumber={updatePageNumber} />\n                    : null\n            }\n        </Container>\n    )\n}\n\nexport default RoomList;\n","const byName = (room, otherRoom) => {\n    if (!room || !room.name) {\n        return otherRoom ? -1 : 1\n    }\n\n    if (!otherRoom || !otherRoom.name) {\n        return room ? 1 : -1\n    }\n\n    return room.name.localeCompare(otherRoom.name)\n}\n\nconst byDate = (room, otherRoom) => {\n    if (!room || !room.createdAt) {\n        return otherRoom ? -1 : 1\n    }\n\n    if (!otherRoom || !otherRoom.createdAt) {\n        return room ? 1 : -1\n    }\n\n    return room.createdAt.localeCompare(otherRoom.createdAt)\n}\n\nexport default { byName, byDate }","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport RoomList from './RoomList-View'\nimport { fetchPublicRooms } from '../../redux/actions/room-actions'\nimport {\n    setSortTechnique,\n    setCurrentPageNumber,\n    setSearchQuery,\n    setItemsPerPage\n} from '../../redux/actions/room-list-display-settings-actions'\nimport { sort as roomSortingTechniques } from './utils'\n\nimport loggerInit from '../../helpers/logger'\nimport isEmpty from 'is-empty';\n\nconst logger = loggerInit('[RoomListContainer] ')\n\nclass RoomListContainer extends React.Component {\n    componentDidMount() {\n        this.props.fetchPublicRooms(this.onRoomFetchFail)\n    }\n\n    onRoomFetchFail = ({ response }) => {\n        logger.debug('RoomList fetch fail: ', response)\n    }\n\n    getSortedRoomList = (rooms) => {\n        const { roomListDisplaySettings: { sortBy } } = this.props\n\n        if (!rooms) {\n            return []\n        }\n\n        switch (sortBy) {\n            case 'name-des':\n                return rooms.sort(roomSortingTechniques.byName).reverse()\n            case 'date-asc':\n                return rooms.sort(roomSortingTechniques.byDate)\n            case 'date-des':\n                return rooms.sort(roomSortingTechniques.byDate).reverse()\n            case 'name-asc':\n            default:\n                return rooms.sort(roomSortingTechniques.byName)\n        }\n    }\n\n    onDisplayControlsFormSubmit = ({sortBy, itemsPerPage}) => {\n        this.props.setSortTechnique(sortBy)\n        this.props.setItemsPerPage(itemsPerPage)\n    }\n\n    onSearchFieldInputChange = (e) => {\n        this.props.setSearchQuery(e.target.value)\n    }\n\n    getPaginatedRoomList = (sortedRooms) => {\n        const { roomListDisplaySettings: { itemsPerPage, currentPageNumber } } = this.props\n        if (sortedRooms.length <= itemsPerPage) {\n            return sortedRooms\n        }\n\n        //Page numbers are 1-indexed (1, 2, 3...) whereas array is 0-indexed (0, 1, 2...)\n        //So to make 1-indexed page number applicable while indexing array, \n        //we subtract 1 from the page number\n        const offset = itemsPerPage * (currentPageNumber - 1);\n        const to = Math.min(offset + itemsPerPage, sortedRooms.length)\n        return sortedRooms.slice(offset, to)\n    }\n\n    getSearchQuery = () => {\n        const { roomListDisplaySettings: { searchQuery } } = this.props\n        return searchQuery && searchQuery.toLowerCase().trim()\n    }\n\n    filterRoomListBySearchQuery = (roomList, searchQuery) => {\n        if (searchQuery) {\n            return roomList.filter(room => {\n                const roomName = room && room.name\n                return roomName && roomName.toLowerCase().includes(searchQuery)\n            })\n        }\n\n        return roomList\n    }\n\n    getRooms = (searchQuery) => {\n        const rooms = [...this.props.rooms]\n        return this.getSortedRoomList(this.filterRoomListBySearchQuery(rooms, searchQuery))\n    }\n\n    render() {\n        const {\n            roomListDisplaySettings,\n            setCurrentPageNumber\n        } = this.props\n\n        const searchQuery = this.getSearchQuery()\n        const rooms = this.getRooms(searchQuery)\n        const paginatedRooms = this.getPaginatedRoomList(rooms)\n\n        return (\n            <RoomList\n                totalRooms={rooms}\n                roomsToDisplay={paginatedRooms}\n                isSearchResult={!isEmpty(searchQuery)}\n                onDisplayControlsFormSubmit={this.onDisplayControlsFormSubmit}\n                onSearchFieldInputChange={this.onSearchFieldInputChange}\n                setCurrentPageNumber={setCurrentPageNumber}\n                {...roomListDisplaySettings}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        rooms: Object.values(state.rooms),\n        roomListDisplaySettings: state.roomListDisplaySettings,\n    }\n}\n\nconst mapDispatchToProps = ({\n    fetchPublicRooms,\n    setSortTechnique,\n    setCurrentPageNumber,\n    setSearchQuery,\n    setItemsPerPage\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomListContainer);\n","class Logger {\n    constructor(loggerKey) {\n        this.loggerKey = loggerKey\n    }\n\n    debug(...args) {\n        console.log(this.loggerKey, ...args)\n    }\n}\n\nexport default (loggerKey) => {\n    return new Logger(loggerKey)\n}","import { FETCH_PUBLIC_ROOMS } from '../../action-constants'\nimport { getAllRooms } from '../../../server-communication/httpServer'\n\nexport default (onFailure) => async dispatch => {\n    getAllRooms((response) => {\n        dispatch({ type: FETCH_PUBLIC_ROOMS, payload: response.data })\n    }, onFailure)\n}","import { SET_ROOM_LIST_SORT_TECHNIQUE } from \"../../action-constants\"\n\nexport default (technique) => {\n    return {\n        type: SET_ROOM_LIST_SORT_TECHNIQUE,\n        payload: technique\n    }\n}","import { SET_ROOM_LIST_CURRENT_PAGE_NUMBER } from \"../../action-constants\"\n\nexport default (currentPageNumber) => {\n    return {\n        type: SET_ROOM_LIST_CURRENT_PAGE_NUMBER,\n        payload: currentPageNumber\n    }\n}","import { SET_ROOM_LIST_SEARCH_QUERY } from \"../../action-constants\";\n\nexport default (searchQuery) => {\n    return {\n        type: SET_ROOM_LIST_SEARCH_QUERY,\n        payload: searchQuery\n    }\n}","import { SET_ROOM_LIST_ITEMS_PER_PAGE } from \"../../action-constants\"\n\nexport default (itemsPerPage) => {\n    return {\n        type: SET_ROOM_LIST_ITEMS_PER_PAGE,\n        payload: itemsPerPage\n    }\n}","import RoomList from './RoomList-Redux'\n\nexport default RoomList","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap'\n\nimport withLayout from '../../components/hoc/WithLayout'\nimport Room from '../../components/Room'\nimport RoomList from '../../components/RoomList'\nimport './Route-Room-Style.scss'\n\nconst getRoomListColProps = (roomId) => {\n    const fixedClass = 'overflow-auto h-100'\n    if (roomId) {\n        return { xl: 5, lg: 5, md: 5, sm: 0, xs: 0, className: `d-none d-md-block ${fixedClass}` }\n    } else {\n        return { className: fixedClass }\n    }\n}\n\nconst getRoomColProps = (roomId) => {\n    const fixedProps = { xl: 7, lg: 7, md: 7 }\n    const otherProps = roomId ? { xs: 12, sm: 12, className: 'h-100' } : {}\n\n    return { ...fixedProps, ...otherProps }\n}\n\nconst renderRoomCol = (roomId) => {\n    if (roomId) {\n        return (\n            <Col {...getRoomColProps(roomId)} >\n                <Room roomId={roomId} key={roomId} />\n            </Col>\n        )\n    }\n}\n\nconst renderRoomListCol = (roomId) => {\n    return (\n        <Col {...getRoomListColProps(roomId)}>\n            <RoomList />\n        </Col>\n    )\n}\n\nconst RouteRooms = (props) => {\n    const roomId = props.match.params.id\n\n    const content = (\n        <Container fluid className='pl-0 pr-0 room-page-container'>\n            <Row className='mx-0 no-gutters h-100'>\n                {renderRoomListCol(roomId)}\n                {renderRoomCol(roomId)}\n            </Row>\n        </Container>\n    )\n\n    return withLayout(content)\n}\n\nexport default RouteRooms;\n","import RouteRooms from './Route-Rooms'\n\nexport default RouteRooms","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport RouteRoot from './root'\nimport RouteLogin from './login'\nimport RouteRegister from './register'\nimport RouteRooms from './rooms'\n\nconst AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={RouteRoot} />\n                <Route exact path=\"/rooms/:id?\" component={RouteRooms} />\n                <Route exact path=\"/login\" component={RouteLogin} />\n                <Route exact path=\"/register\" component={RouteRegister} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter","import React from 'react';\n\nimport AppRouter from '../../routes/'\n\nconst App = (props) => {\n    if (props.serverConnectionFailed) {\n        return <div className='centered-content'>Cannot Connect To Server</div>;\n    }\n\n    return <AppRouter />\n}\n\n\nexport default App;","import React from 'react';\n\nimport AppView from './App-View'\nimport {\n    onServerConnected,\n    onServerDisconnected,\n    onNewNotification\n} from '../../server-communication/socketServer'\n\nclass AppContainer extends React.Component {\n    state = {\n        serverConnectionFailed: false\n    }\n\n    componentDidMount() {\n        this.props.connectToServer(this.onServerDisconnected);\n        onServerDisconnected(this.onServerDisconnected);\n        onServerConnected(this.onServerConnected);\n        onNewNotification(this.onNewNotification)\n        this.props.updateUser()\n        this.props.fetchAllNotifications()\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevUser = prevProps.user\n        const currentUser = this.props.user\n        //Prevent infinite re-rendering by checking if the user is same as before\n        //If same, don't fetch the notifications\n        if ((prevUser && prevUser._id) === (currentUser && currentUser._id)) {\n            return\n        }\n\n        this.props.fetchAllNotifications()\n    }\n\n    onServerConnected = () => {\n        this.setState({ serverConnectionFailed: false })\n    }\n\n    onServerDisconnected = () => {\n        //TODO: Use redux store for this state as it affects the whole application\n        this.setState({ serverConnectionFailed: true })\n    }\n\n    onNewNotification = () => {\n        this.props.showNewNotificationToast()\n        this.props.fetchAllNotifications()\n    }\n\n    render() {\n        return (\n            <AppView {...this.state} {...this.props} />\n        );\n    }\n}\n\nexport default AppContainer\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport AppContainer from './App-Container'\nimport { connectToServer } from '../../redux/actions/server-actions'\nimport { updateUser } from '../../redux/actions/user-actions';\nimport { fetchAllNotifications } from '../../redux/actions/notification-actions'\nimport { showNewNotificationToast } from '../../redux/actions/toast-actions'\n\nconst AppRedux = (props) => {\n    return <AppContainer {...props} />\n}\n\nconst mapDispatchToProps = {\n    connectToServer,\n    updateUser,\n    fetchAllNotifications,\n    showNewNotificationToast\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state\n    return { user: user && user.user }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRedux);\n","import { connectToServer } from '../../../server-communication/socketServer'\nimport { CONNECT_TO_SERVER } from '../../action-constants'\n\nexport default (onConnectionFailed) => async (dispatch) => {\n    /*\n        TODO: This function will dispatch connected:true even if the connection may have failed.\n            Although the onConnectionFailed callback takes care of it,\n            the connection status should be either removed from redux store and use callback(s) only\n            or remove callback(s) and read/update the connection status from/on the redux store\n    */\n    await connectToServer(onConnectionFailed);\n    dispatch({ type: CONNECT_TO_SERVER, payload: { connected: true } })\n}\n","import { getAllNotifications } from '../../../server-communication/httpServer'\nimport { FETCH_ALL_NOTIFICATIONS } from '../../action-constants'\n\nexport default () => async dispatch => {\n    const onFulfilled = ({ data }) => {\n        console.log('actions notif: ', data)\n        dispatch({ type: FETCH_ALL_NOTIFICATIONS, payload: data })\n    }\n\n    getAllNotifications(onFulfilled,\n        ({ response }) => console.log('notification fetch failed: ', response)\n    )\n}","import { SHOW_TOAST } from '../../action-constants'\n\nexport default () => {\n    return {\n        type: SHOW_TOAST,\n        payload: { name: 'NewNotification' }\n    }\n}","import App from './App-Redux'\n\nexport default App","import React from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\n\nconst GenericModal = ({ visible, hideModal, header, content, actions }) => {\n    return (\n        <Modal\n            show={visible}\n            onHide={hideModal}\n            centered\n        >\n            <Modal.Header closeButton onHide={hideModal}>\n                <Modal.Title>\n                    {header}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {content}\n            </Modal.Body>\n            <Modal.Footer>\n                {actions}\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default GenericModal;\n","import React from 'react';\nimport { Field } from 'redux-form'\nimport { Alert, Form, FormGroup, FormControl, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport { TooltipWrapper } from '../../../../standalone'\nimport './CreateRoomForm-Style.scss';\n\n\nconst renderRadioOptionHelp = (radioOption) => {\n    const createHelp = (tooltipProps) => {\n        const helpIcon = <FontAwesomeIcon icon={faQuestionCircle} />\n        return <TooltipWrapper triggerComponent={helpIcon} {...tooltipProps} />\n    }\n\n    //eslint-disable-next-line\n    switch (radioOption) {\n        case 'private':\n            return createHelp({\n                id: 'private-room-opt',\n                label: 'Private rooms require permission to join and are not listed publicly'\n            })\n        case 'unlisted':\n            return createHelp({\n                id: 'private-room-opt',\n                label: 'Unlisted rooms can be joined by anyone but are not listed publicly'\n            })\n        case 'public':\n            return createHelp({\n                id: 'private-room-opt',\n                label: 'Public rooms are listed publicly and can be joined by anyone'\n            })\n    }\n}\n\nconst renderRadioButtonGroup = (formProps) => {\n    const { input, meta } = formProps;\n    const hasErrors = meta.touched && meta.error;\n    const impureFormNoErrors = !meta.pristine && !hasErrors;\n    const radioOptions = [\n        { label: 'Private', value: 'private' },\n        { label: 'Public', value: 'public' },\n        { label: 'Unlisted', value: 'unlisted' }\n    ]\n\n    const radioInputs = radioOptions.map(option => {\n        return (\n            <Form.Group controlId={`roomType-${option.value}`} key={option.value}>\n                <InputGroup>\n                    <Form.Check\n                        {...input}\n                        {...option}\n                        type=\"radio\"\n                        isInvalid={hasErrors}\n                        isValid={impureFormNoErrors}\n                    />\n                    <InputGroup.Append>\n                        {renderRadioOptionHelp(option.value)}\n                    </InputGroup.Append>\n                </InputGroup>\n            </Form.Group>\n        )\n    })\n\n    return (\n        <Form.Group controlId=\"create-room-form-type\">\n            <Form.Label><strong>Select Room Type:</strong></Form.Label>\n            {radioInputs}\n            {hasErrors && <Alert variant=\"danger\">{meta.error}</Alert>}\n        </Form.Group>\n    );\n}\n\nconst renderRoomNameField = (formProps) => {\n    const { input, meta } = formProps;\n    const hasErrors = meta.touched && meta.error;\n    const impureFormNoErrors = !meta.pristine && !hasErrors;\n\n    return (\n        <FormGroup controlId=\"create-room-form-name\">\n            <Form.Label><strong>{formProps.label}</strong></Form.Label>\n            <FormControl {...formProps} {...input} isInvalid={hasErrors} isValid={impureFormNoErrors} />\n            <Form.Control.Feedback size=\"lg\" type=\"invalid\">{meta.error}</Form.Control.Feedback>\n        </FormGroup>\n    );\n}\n\nconst CreateRoomFormView = (props) => {\n    const { onFormSubmit } = props\n    return (\n        <Form noValidate id=\"create-room-form\" onSubmit={onFormSubmit}>\n            <Field\n                component={renderRoomNameField}\n                name=\"roomName\"\n                label=\"Enter Room Name:\"\n                placeholder=\"Example: The Mystical Room\"\n                required\n            />\n            <hr />\n            <Field component={renderRadioButtonGroup} name='roomType' />\n        </Form>\n    );\n}\n\n\nexport default CreateRoomFormView","import CreateRoomForm from './CreateRoomForm-Redux'\n\nexport default CreateRoomForm","import React from 'react';\nimport { reduxForm } from 'redux-form'\n\nimport CreateRoomFormView from './CreateRoomForm-View'\nimport validate from './validate';\n\nconst CreateRoomForm = (props) => {\n    const { handleSubmit, onFormSubmit } = props\n\n    return (\n        <CreateRoomFormView\n            onFormSubmit={handleSubmit(onFormSubmit)}\n        />\n    )\n}\n\n\nexport default reduxForm({\n    form: 'createRoomForm',\n    validate: validate\n})(CreateRoomForm)","export default (values) => {\n    const errors = {}\n    if (!values.roomName) {\n        errors.roomName = 'Room name cannot be empty'\n    }\n\n    if (!values.roomType) {\n        errors.roomType = 'Please choose one of the room types above'\n    }\n\n    return errors\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport GenericModal from '../GenericModal';\nimport { CreateRoomForm } from './components'\n\nimport { CreateRoomButton } from '../../standalone/RoomActionButtons'\n\nconst CreateRoomModalView = ({\n    isModalVisible,\n    hideModal,\n    createRoomFormData,\n    createRoomProgress,\n    onFormSubmit\n}) => {\n    const getModalActions = () => {\n        const hasErrors = createRoomFormData && createRoomFormData.syncErrors\n        return (\n            <>\n                <Button variant='secondary' onClick={hideModal}>Cancel</Button>\n                <CreateRoomButton\n                    progress={createRoomProgress}\n                    form='create-room-form'\n                    type='submit'\n                    disabled={hasErrors}\n                    className={`cursor-${hasErrors ? 'not-allowed' : 'pointer'}`}\n                />\n            </>\n        );\n    }\n\n    const getModalContent = () => {\n        return <CreateRoomForm onFormSubmit={onFormSubmit} />\n    }\n    \n    return (\n        <GenericModal\n            header='Create Room'\n            actions={getModalActions()}\n            content={getModalContent()}\n            visible={isModalVisible}\n            hideModal={hideModal}\n        />\n    );\n}\n\nexport default CreateRoomModalView\n\n","import React from 'react';\n\nimport CreateRoomModalView from './CreateRoomModal-View'\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\n\nclass CreateRoomModalContainer extends React.Component {\n    state = { createRoomProgress: PROGRESS_INITIAL }\n\n    onCreateRoomPending = () => {\n        this.setState({ createRoomProgress: PROGRESS_PENDING })\n    }\n\n    onCreateRoomSuccess = () => {\n        this.setState({ createRoomProgress: PROGRESS_SUCCESS })\n    }\n\n    onCreateRoomFailure = () => {\n        this.setState({ createRoomProgress: PROGRESS_FAIL })\n    }\n\n    onFormSubmit = ({ roomName, roomType }) => {\n        this.onCreateRoomPending()\n        const { createRoom } = this.props\n        createRoom(roomName, roomType, this.onCreateRoomSuccess, this.onCreateRoomFailure)\n    }\n\n    render() {\n        return <CreateRoomModalView onFormSubmit={this.onFormSubmit} {...this.state} {...this.props} />\n    }\n}\n\nexport default CreateRoomModalContainer\n\n","import CreateRoomModal from './CreateRoomModal-Redux'\n\nexport default CreateRoomModal","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CreateRoomModalContainer from './CreateRoomModal-Container'\nimport { createRoom as createRoomAction } from '../../../redux/actions/room-actions';\nimport { hideModal as hideModalAction } from '../../../redux/actions/modal-actions';\n\nconst CreateRoomModalRedux = (props) => {\n    return <CreateRoomModalContainer {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isModalVisible: state.modal.isModalOpen && state.modal.modalName === 'CreateRoom',\n        createRoomFormData: state.form['createRoomForm']\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { createRoom: createRoomAction, hideModal: hideModalAction }\n)(CreateRoomModalRedux);\n\n","import { createRoom } from '../../../server-communication/httpServer';\nimport { CREATE_ROOM } from '../../action-constants';\n\nexport default (roomName, roomType, onSuccess, onFailure) => async (dispatch) => {\n    createRoom(\n        roomName,\n        roomType,\n        (response) => {\n            dispatch({ type: CREATE_ROOM, payload: response.data })\n            onSuccess()\n        },\n        onFailure,\n    )\n}","import React from 'react'\nimport isEmpty from 'is-empty'\nimport { Field } from 'redux-form'\nimport { Form, FormControl, FormGroup, FormLabel } from 'react-bootstrap'\n\n//TODO: See this and implement -> https://github.com/redux-form/redux-form/issues/3944\nconst renderJoinRoomField = ({ input, label, meta, roomAlreadyJoinedError, ...formProps }) => {\n    const { touched, error, pristine, asyncValidating } = meta\n    const formErrors = (error && error.isAsyncValidationError) || (touched && error)\n    const hasErrors = formErrors || roomAlreadyJoinedError\n    const errorReason = roomAlreadyJoinedError || (error && (error.isAsyncValidationError ? error.reason : error))\n\n    return (\n        <FormGroup controlId='join-room'>\n            <FormLabel>{label}</FormLabel>\n            <FormControl\n                className={asyncValidating ? 'input-loading' : ''}\n                isValid={(!asyncValidating && !pristine && !hasErrors)}\n                isInvalid={hasErrors}\n                {...input}\n                {...formProps}\n            />\n            <FormControl.Feedback type='invalid'>{errorReason}</FormControl.Feedback>\n        </FormGroup>\n    )\n}\n\nconst ensureNotEmpty = (roomId) => isEmpty(roomId) ? 'RoomId is required' : undefined\n\nconst JoinRoomFormView = ({ onFormSubmit, roomAlreadyJoinedError }) => {\n    return (\n        <Form id='join-room-form' onSubmit={onFormSubmit} >\n            <Field\n                component={renderJoinRoomField}\n                name='roomId'\n                label='Enter Room Id'\n                placeholder='X-X-X-X'\n                roomAlreadyJoinedError={roomAlreadyJoinedError}\n                validate={ensureNotEmpty}\n            />\n        </Form>\n    );\n}\n\nexport default JoinRoomFormView","import isEmpty from 'is-empty'\nimport { getRoom } from '../../../../../server-communication/httpServer'\n\nconst createError = (reason, isPrivateRoomError) => {\n    return { roomId: { reason, isAsyncValidationError: true, isPrivateRoomError } }\n}\n\nconst getErrorFromResponse = (response) => {\n    switch (response.status) {\n        case 403:\n            return createError('This is a private room. You need to send a join request', true)\n        case 404:\n            return createError('No rooms matching that roomId')\n        default:\n            return createError('Some error ocurred; Please try again after sometime')\n    }\n}\n\nexport default (values) => {\n    const promise = new Promise((resolve, reject) => {\n        if (isEmpty(values.roomId)) {\n            return reject(createError('No rooms matching that roomId'))\n        }\n\n        getRoom(values.roomId)\n            .then(resolve)\n            .catch(({ response }) => {\n                reject(getErrorFromResponse(response))\n            })\n    })\n\n    return promise\n}","import JoinRoomForm from './JoinRoomForm-Redux'\n\nexport default JoinRoomForm","import React from 'react';\nimport { reduxForm } from 'redux-form'\n\nimport JoinRoomFormView from './JoinRoomForm-View'\nimport asyncValidate from './asyncValidate'\n\nconst JoinRoomFormRedux = ({ handleSubmit, onFormSubmit, roomAlreadyJoinedError }) => {\n    return (\n        <JoinRoomFormView\n            onFormSubmit={handleSubmit(onFormSubmit)}\n            roomAlreadyJoinedError={roomAlreadyJoinedError}\n        />\n    )\n}\n\nexport default reduxForm({\n    form: 'joinRoomForm',\n    asyncValidate,\n    asyncChangeFields: ['roomId']\n})(JoinRoomFormRedux)","import React from 'react';\nimport { Button } from 'react-bootstrap'\n\nimport GenericModal from '../GenericModal'\nimport { JoinRoomForm } from './components'\nimport { JoinRoomButton, SendRoomJoinRequestButton } from '../../standalone/RoomActionButtons'\n\nconst JoinRoomModalView = ({\n    roomAlreadyJoinedError,\n    isModalVisible,\n    hideModal,\n    onFormSubmit,\n    joinRoomFormData,\n    joinRoomProgress\n}) => {\n    const getModalActions = () => {\n        const getRoomActionButton = () => {\n            const asyncErrors = joinRoomFormData && joinRoomFormData.asyncErrors\n            const formErrors = joinRoomFormData && (\n                joinRoomFormData.syncErrors || asyncErrors || joinRoomFormData.asyncValidating\n            )\n            const hasErrors = formErrors || roomAlreadyJoinedError\n            const roomActionButtonProps = {\n                type: 'submit',\n                form: 'join-room-form',\n                disabled: hasErrors,\n                className: `cursor-${hasErrors ? 'not-allowed' : 'pointer'}`\n            }\n\n            if (asyncErrors && asyncErrors.roomId.isPrivateRoomError) {\n                return (\n                    <SendRoomJoinRequestButton\n                        progress={joinRoomProgress}\n                        propsProgressInitial={roomActionButtonProps}\n                    />\n                )\n            }\n\n            return (\n                <JoinRoomButton\n                    progress={joinRoomProgress}\n                    propsProgressInitial={roomActionButtonProps}\n                />\n            )\n        }\n\n        return (\n            <>\n                <Button onClick={hideModal} variant='outline-secondary'>\n                    Cancel\n                </Button>\n                {getRoomActionButton()}\n            </>\n        );\n    }\n\n    const getModalContent = () => {\n        return <JoinRoomForm\n            onFormSubmit={onFormSubmit}\n            roomAlreadyJoinedError={roomAlreadyJoinedError}\n        />\n    }\n\n    return (\n        <GenericModal\n            header=\"Join Room By Id\"\n            actions={getModalActions()}\n            content={getModalContent()}\n            visible={isModalVisible}\n            hideModal={hideModal}\n        />\n    );\n}\n\nexport default JoinRoomModalView;\n","import React from 'react'\n\nimport JoinRoomModalView from './JoinRoomModal-View'\n\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\nimport { getRoom } from '../../../server-communication/httpServer'\nimport isRoomMember from '../../../helpers/isRoomMember'\n\nclass JoinRoomModalContainer extends React.Component {\n    state = {\n        joinRoomProgress: PROGRESS_INITIAL,\n        roomAlreadyJoinedError: null\n    }\n\n    componentDidUpdate() {\n        if (this.state.roomAlreadyJoinedError) {\n            return\n        }\n\n        const { joinRoomFormData, currentUserId } = this.props\n        const form = joinRoomFormData ? joinRoomFormData : {}\n        const formHasErrors = form.syncErrors || form.asyncErrors || form.asyncValidating\n\n        if (!formHasErrors) {\n            const roomId = form.values && form.values.roomId\n\n            getRoom(roomId).then(response => {\n                const room = response.data\n                if (isRoomMember(room, currentUserId)) {\n                    this.setState({ roomAlreadyJoinedError: 'You are already a member of this room' })\n                }\n            }).catch()\n        }\n    }\n\n    onJoinRoomPending = () => {\n        this.setState({ joinRoomProgress: PROGRESS_PENDING })\n    }\n\n    onJoinRoomSuccess = () => {\n        this.setState({ joinRoomProgress: PROGRESS_SUCCESS })\n    }\n\n    onJoinRoomFailure = () => {\n        this.setState({ joinRoomProgress: PROGRESS_FAIL })\n    }\n\n    onJoinRoomFormSubmit = ({ roomId }) => {\n        this.onJoinRoomPending()\n        this.props.joinRoom(roomId, this.onJoinRoomSuccess, this.onJoinRoomFailure)\n    }\n\n    render() {\n        return (\n            <JoinRoomModalView\n                onFormSubmit={this.onJoinRoomFormSubmit}\n                {...this.props}\n                {...this.state}\n            />\n        )\n    }\n}\n\nexport default JoinRoomModalContainer","export default (room, queryUserId) => {\n    if (!room || !room.members || !queryUserId) {\n        return false\n    }\n\n    const memberDocIndex = room.members.findIndex(member => {\n        return member.user && member.user._id === queryUserId\n    })\n\n    return memberDocIndex !== -1\n}","import JoinRoomModal from './JoinRoomModal-Redux'\n\nexport default JoinRoomModal","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport JoinRoomModalContainer from './JoinRoomModal-Container'\nimport { hideModal } from '../../../redux/actions/modal-actions'\nimport { joinRoom } from '../../../redux/actions/room-actions'\n\nconst JoinRoomModalRedux = (props) => {\n    return <JoinRoomModalContainer {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state\n    return {\n        isModalVisible: state.modal.isModalOpen && state.modal.modalName === 'JoinRoom',\n        joinRoomFormData: state.form['joinRoomForm'],\n        currentUserId: user && user.user && user.user._id\n    }\n}\n\nexport default connect(mapStateToProps, { hideModal, joinRoom })(JoinRoomModalRedux);\n","import React from 'react';\nimport { Field } from 'redux-form'\nimport { Form, FormGroup, FormControl } from 'react-bootstrap';\n\nconst renderRoomNameField = ({ input, label, ...otherFormProps }) => {\n    return (\n        <FormGroup controlId=\"delete-room-form-name\">\n            <Form.Label><strong>{label}</strong></Form.Label>\n            <FormControl {...otherFormProps} {...input} />\n        </FormGroup>\n    );\n}\n\nconst DeleteRoomFormView = ({ onFormSubmit, validate }) => {\n    return (\n        <Form noValidate id='delete-room-form' onSubmit={onFormSubmit} >\n            <Field\n                component={renderRoomNameField}\n                name=\"roomName\"\n                label=\"Room Name:\"\n                placeholder=\"Enter Room name here\"\n                validate={validate}\n                required\n            />\n        </Form>\n    );\n}\n\nexport default DeleteRoomFormView","import React from 'react';\nimport { reduxForm } from 'redux-form'\n\nimport DeleteRoomFormView from './DeleteRoomForm-View'\nimport { mustMatchRoomName } from './validate'\n\nclass DeleteRoomFormRedux extends React.Component {\n    constructor(props) {\n        super(props)\n        //Note: Do not move the following line to render (or componentDidUpdate, etc)\n        //Redux seems to treat the function, if created in render, as a new instance\n        //This triggers a re-render and creates an infinite render loop till React\n        //stops after its max state update (i.e, re-render) limit is reached\n        //Also, don't move this to DeleteRoomFormView as it is a functional component\n        //and the whole component comes under the \"render-scope\" unlike class component\n        //where likes of constructor or componentDidMount etc are not called on state update\n        this.deleteRoomFieldValidate = mustMatchRoomName(this.props.room)\n    }\n\n    render() {\n        const { room, onFormSubmit, deleteRoomForm, handleSubmit } = this.props\n        return (\n            <DeleteRoomFormView\n                room={room}\n                deleteRoomFormData={deleteRoomForm}\n                onFormSubmit={handleSubmit(onFormSubmit)}\n                validate={this.deleteRoomFieldValidate}\n            />\n        )\n    }\n}\n\nexport default reduxForm({\n    form: 'delete-room-form'\n})(DeleteRoomFormRedux)","const mustMatchRoomName = room => userEnteredRoomName => {\n    return room && userEnteredRoomName === room.name ? undefined : 'Room name not equal'\n}\n\nexport { mustMatchRoomName }","import DeleteRoomForm from './DeleteRoomForm-Redux'\n\nexport default DeleteRoomForm","import React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nimport { DeleteRoomForm } from './components'\nimport GenericModal from '../GenericModal';\nimport {\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\nimport { DeleteRoomButton } from '../../standalone/RoomActionButtons'\n\nconst DeleteRoomModalView = ({\n    deleteRoomProgress,\n    deleteRoomFormData,\n    modalProps,\n    isModalVisible,\n    hideModal,\n    onFormSubmit\n}) => {\n\n    const renderDeleteButton = () => {\n        const syncErrors = deleteRoomFormData ? deleteRoomFormData.syncErrors : null\n        const hasErrors = syncErrors && syncErrors.roomName\n\n        return (\n            <DeleteRoomButton\n                progress={deleteRoomProgress}\n                propsProgressInitial={{\n                    type: 'submit',\n                    'form': 'delete-room-form',\n                    variant: 'danger',\n                    disabled: hasErrors,\n                    className: `cursor-${hasErrors ? 'not-allowed' : 'pointer'}`\n                }}\n            />\n        )\n    }\n\n    const getModalActions = () => {\n        const isTaskCompleted = () => {\n            return deleteRoomProgress === PROGRESS_SUCCESS ||\n                deleteRoomProgress === PROGRESS_FAIL\n        }\n        const cancelButtonText = isTaskCompleted() ? 'Go Back' : 'Cancel'\n        return (\n            <>\n                <Button variant='outline-secondary' onClick={hideModal}>{cancelButtonText}</Button>\n                {renderDeleteButton()}\n            </>\n        )\n    }\n\n    const getModalContent = () => {\n        const { room } = modalProps\n        const roomName = room ? room.name : '<unknown>'\n        return (\n            <Row>\n                <Col sm={12}>\n                    <DeleteRoomForm\n                        onFormSubmit={onFormSubmit}\n                        room={room}\n                    />\n                </Col>\n                <Col>\n                    <p className='word-wrap-break-word'>\n                        To delete the room <strong>{roomName}</strong> type in the name of the room above\n                    </p>\n                </Col>\n            </Row>\n        )\n    }\n\n    return (\n        <GenericModal\n            header=\"Delete Room\"\n            actions={getModalActions()}\n            content={getModalContent()}\n            visible={isModalVisible}\n            hideModal={hideModal}\n        />\n    )\n}\n\nexport default DeleteRoomModalView","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport DeleteRoomModalView from './DeleteRoomModal-View'\n\nimport { hideModal as hideModalAction } from '../../../redux/actions/modal-actions';\nimport { deleteRoom as deleteRoomAction } from '../../../redux/actions/room-actions'\n\nclass DeleteRoomModalRedux extends React.Component {\n    onDeleteRoomFormSubmit = () => {\n        const {\n            onDeleteRoomPending,\n            onDeleteRoomSuccess,\n            onDeleteRoomFail,\n            deleteRoom,\n            modalProps: { room }\n        } = this.props\n\n        onDeleteRoomPending()\n        deleteRoom(room.roomId, onDeleteRoomSuccess, onDeleteRoomFail)\n    }\n\n    render() {\n        const {\n            deleteRoomForm,\n            deleteRoomProgress,\n            modalProps,\n            isModalVisible,\n            hideModal\n        } = this.props\n\n        return (\n            <DeleteRoomModalView\n                deleteRoomFormData={deleteRoomForm}\n                deleteRoomProgress={deleteRoomProgress}\n                modalProps={modalProps}\n                isModalVisible={isModalVisible}\n                hideModal={hideModal}\n                onFormSubmit={this.onDeleteRoomFormSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { modal } = state\n    return {\n        isModalVisible: modal.isModalOpen && modal.modalName === 'DeleteRoom',\n        modalProps: modal.modalProps,\n        deleteRoomForm: state.form['delete-room-form']\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { hideModal: hideModalAction, deleteRoom: deleteRoomAction }\n)(DeleteRoomModalRedux);","import { deleteRoom } from '../../../server-communication/httpServer'\nimport { DELETE_ROOM } from '../../action-constants'\n\nexport default (roomId, onSuccess, onFailure) => async dispatch => {\n    deleteRoom(roomId).then(_ => {\n        onSuccess()\n        dispatch({ type: DELETE_ROOM, payload: roomId })\n    }).catch(onFailure)\n}","import DeleteRoomModal from './DeleteRoomModal-Container'\n\nexport default DeleteRoomModal","import React from 'react';\n\nimport DeleteRoomModalRedux from './DeleteRoomModal-Redux'\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\n\n\nclass DeleteRoomModalContainer extends React.Component {\n    state = { deleteRoomProgress: PROGRESS_INITIAL }\n\n    onDeleteRoomPending = () => {\n        this.setState({ deleteRoomProgress: PROGRESS_PENDING })\n    }\n\n    onDeleteRoomSuccess = () => {\n        this.setState({ deleteRoomProgress: PROGRESS_SUCCESS })\n    }\n\n    onDeleteRoomFail = () => {\n        this.setState({ deleteRoomProgress: PROGRESS_FAIL })\n    }\n\n    render() {\n        return (\n            <DeleteRoomModalRedux\n                onDeleteRoomPending={this.onDeleteRoomPending}\n                onDeleteRoomSuccess={this.onDeleteRoomSuccess}\n                onDeleteRoomFail={this.onDeleteRoomFail}\n                {...this.state}\n            />\n        );\n    }\n}\n\nexport default DeleteRoomModalContainer","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport GenericModal from '../GenericModal';\nimport { LeaveRoomButton } from '../../standalone/RoomActionButtons'\nimport {\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\n\nconst LeaveRoomModalView = ({\n    room,\n    isModalVisible,\n    hideModal,\n    onLeaveRoomButtonClick,\n    leaveRoomProgress\n}) => {\n\n    const getModalContent = () => {\n        const roomName = <strong>{room ? room.name : '<unknown>'}</strong>\n        return <p className='word-wrap-break-word'>\n            Are you sure you want to leave the room {roomName}?\n        </p>\n    }\n\n    const renderLeaveRoomButton = () => {\n        return (\n            <LeaveRoomButton\n                progress={leaveRoomProgress}\n                propsProgressInitial={{\n                    variant: 'danger',\n                    onClick: onLeaveRoomButtonClick\n                }}\n            />\n        )\n    }\n\n    const getModalActions = () => {\n        const isTaskCompleted = () => {\n            return leaveRoomProgress === PROGRESS_SUCCESS ||\n                leaveRoomProgress === PROGRESS_FAIL\n        }\n        const cancelButtonText = isTaskCompleted() ? 'Go Back' : 'Cancel'\n        return (\n            <>\n                <Button variant='outline-secondary' onClick={hideModal}>{cancelButtonText}</Button>\n                {renderLeaveRoomButton()}\n            </>\n        )\n    }\n\n    return (\n        <GenericModal\n            header=\"Leave Room\"\n            actions={getModalActions()}\n            content={getModalContent()}\n            visible={isModalVisible}\n            hideModal={hideModal}\n        />\n    );\n}\n\nexport default LeaveRoomModalView","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport LeaveRoomModalView from './LeaveRoomModal-View'\nimport { hideModal as hideModalAction } from '../../../redux/actions/modal-actions';\nimport { leaveRoom as leaveRoomAction } from '../../../redux/actions/room-actions';\n\nconst LeaveRoomModalRedux = ({ modalProps: { room }, ...otherProps }) => {\n    const onLeaveRoomButtonClick = () => {\n        const { leaveRoom, onLeaveRoomPending, onLeaveRoomSuccess, onLeaveRoomFail } = otherProps\n        onLeaveRoomPending()\n        leaveRoom(room, onLeaveRoomSuccess, onLeaveRoomFail)\n    }\n\n    const {\n        isModalVisible,\n        hideModal,\n        leaveRoomProgress\n    } = otherProps\n\n    return (\n        <LeaveRoomModalView\n            room={room}\n            hideModal={hideModal}\n            isModalVisible={isModalVisible}\n            leaveRoomProgress={leaveRoomProgress}\n            onLeaveRoomButtonClick={onLeaveRoomButtonClick}\n        />\n    );\n}\n\nconst mapStateToProps = (state) => {\n    const { modal } = state\n    return {\n        isModalVisible: modal.isModalOpen && modal.modalName === 'LeaveRoom',\n        modalProps: modal.modalProps\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { hideModal: hideModalAction, leaveRoom: leaveRoomAction }\n)(LeaveRoomModalRedux);","import { leaveRoom } from '../../../server-communication/httpServer'\nimport { LEAVE_ROOM } from '../../action-constants'\n\nconst getMemberDocOfUser = (room, userId) => {\n    for (let i = 0; i < room.members.length; i++) {\n        let member = room.members[i]\n        if (member && member.user && member.user._id === userId) {\n            return member\n        }\n    }\n}\n\nexport default (room, onSuccess, onFailure) => (dispatch, getState) => {\n    if (!room) {\n        return onFailure(new Error({ response: 'Not a room member' }))\n    }\n\n    const userId = getState().user.user._id\n    let memberDocOfUser = getMemberDocOfUser(room, userId)\n\n    if (!memberDocOfUser) {\n        return onFailure(new Error({ response: 'Not a room member' }))\n    }\n\n    leaveRoom(room.roomId, memberDocOfUser._id).then(response => {\n        dispatch({\n            type: LEAVE_ROOM,\n            payload: {\n                roomId: room.roomId,\n                updatedMembers: response.data.members\n            }\n        })\n        onSuccess(response)\n    }).catch(onFailure)\n}","import LeaveRoomModal from './LeaveRoomModal-Container'\n\nexport default LeaveRoomModal","import React from 'react';\n\nimport LeaveRoomModalRedux from './LeaveRoomModal-Redux'\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\n\nclass LeaveRoomModalContainer extends React.Component {\n    state = { leaveRoomProgress: PROGRESS_INITIAL }\n\n    onLeaveRoomPending = () => {\n        this.setState({ leaveRoomProgress: PROGRESS_PENDING })\n    }\n\n    onLeaveRoomSuccess = () => {\n        this.setState({ leaveRoomProgress: PROGRESS_SUCCESS })\n    }\n\n    onLeaveRoomFail = () => {\n        this.setState({ leaveRoomProgress: PROGRESS_FAIL })\n    }\n\n    render() {\n        return (\n            <LeaveRoomModalRedux\n                onLeaveRoomPending={this.onLeaveRoomPending}\n                onLeaveRoomSuccess={this.onLeaveRoomSuccess}\n                onLeaveRoomFail={this.onLeaveRoomFail}\n                {...this.state}\n            />)\n    }\n}\n\nexport default LeaveRoomModalContainer","import React from 'react';\nimport { Field } from 'redux-form'\nimport { Form, FormGroup, FormControl } from 'react-bootstrap';\n\nconst renderRoomNameField = ({ input, label, ...otherFormProps }) => {\n    return (\n        <FormGroup controlId='invite-user-form-username'>\n            <Form.Label><strong>{label}</strong></Form.Label>\n            <FormControl {...otherFormProps} {...input} />\n        </FormGroup>\n    );\n}\n\nconst InviteUserFormView = ({ onFormSubmit }) => {\n    return (\n        <Form id='invite-user-form' onSubmit={onFormSubmit} >\n            <Field\n                component={renderRoomNameField}\n                name='inviteeUsername'\n                label='Invitee Username:'\n                placeholder='Enter username of user to be invited'\n                required\n            />\n        </Form>\n    );\n}\n\nexport default InviteUserFormView","import InviteUserForm from './InviteUserForm-Redux'\n\nexport default InviteUserForm","import React from 'react';\nimport { reduxForm } from 'redux-form'\n\nimport InviteUserFormView from './InviteUserForm-View'\n\nconst InviteUserFormRedux = ({ onFormSubmit, handleSubmit }) => {\n    return <InviteUserFormView onFormSubmit={handleSubmit(onFormSubmit)} />\n}\n\nexport default reduxForm({\n    form: 'invite-user-form'\n})(InviteUserFormRedux)\n","import React from 'react';\nimport { Button, ListGroup } from 'react-bootstrap'\nimport isEmpty from 'is-empty'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBoxOpen, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nimport './MatchingUserList-Style.scss'\n\nconst MatchingUserListItem = ({ user, onItemClick }) => {\n    //Using Button as it can be focused (Like by using TAB)\n    return (\n        <ListGroup.Item\n            className='username-list-item p-0'\n        >\n            <Button variant='secondary' className='w-100 border-0' onClick={onItemClick}>\n                {user.username}\n            </Button>\n        </ListGroup.Item>\n    )\n}\n\nconst EmptyUserList = ({ queryUsername }) => {\n    const getContent = () => {\n        const isQueryEmpty = isEmpty(queryUsername)\n        return {\n            text: isQueryEmpty ? 'Type a username above...' : `No user matching \"${queryUsername}\"`,\n            icon: isQueryEmpty ? faEdit : faBoxOpen\n        }\n    }\n\n    const { text, icon } = getContent()\n    return (\n        //subtitle className is to utilize lighter text (and icon) color in subtitles\n        <div className='username-list-container subtitle d-flex flex-column align-items-center justify-content-center'>\n            <FontAwesomeIcon icon={icon} size='lg' />\n            <p className='max-height-100 min-width-0'>{text}</p>\n        </div>\n    )\n}\n\nconst MatchingUserList = ({ userList, queryUsername, onItemClick }) => {\n    if (isEmpty(userList)) {\n        return <EmptyUserList queryUsername={queryUsername} />\n    }\n\n    return (\n        <div className='username-list-container word-wrap-break-word d-flex flex-column'>\n            <p className='subtitle'>\n                Found {userList.length}\n                {' '}user{userList.length > 1 ? 's ' : ' '}\n                matching \"{queryUsername}\"\n            </p>\n            <ListGroup className='pre-scrollable' variant='flush'>\n                {userList.map(user => {\n                    return (\n                        <MatchingUserListItem\n                            key={user._id}\n                            user={user}\n                            onItemClick={() => onItemClick(user.username)}\n                        />\n                    )\n                })\n                }\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default MatchingUserList;\n","import MatchingUserList from './MatchingUserList-View'\n\nexport default MatchingUserList","import React from 'react';\nimport { Button, Container } from 'react-bootstrap'\n\nimport GenericModal from '../GenericModal'\nimport { InviteUserForm, MatchingUserList } from './components'\nimport { InviteUserButton } from '../../standalone/RoomActionButtons'\n\n\nconst InviteUserModalView = ({\n    isModalVisible,\n    hideModal,\n    onFormSubmit,\n    matchingUsers,\n    queryUsername,\n    selectUsername,\n    inviteUserProgress\n}) => {\n    const getModalActions = () => {\n        const getRoomActionButton = () => {\n            return (\n                <InviteUserButton\n                    progress={inviteUserProgress}\n                    propsProgressInitial={{\n                        type: 'submit',\n                        'form': 'invite-user-form'\n                    }}\n                />\n            )\n        }\n\n        return (\n            <>\n                <Button onClick={hideModal} variant='outline-secondary'>\n                    Cancel\n                </Button>\n                {getRoomActionButton()}\n            </>\n        );\n    }\n\n    const getModalContent = () => {\n        return (\n            <Container>\n                <InviteUserForm onFormSubmit={onFormSubmit} />\n                <hr />\n                <MatchingUserList\n                    userList={matchingUsers}\n                    queryUsername={queryUsername}\n                    onItemClick={(username) => selectUsername(username)}\n                />\n            </Container>\n        )\n    }\n\n    return (\n        <GenericModal\n            header='Invite User'\n            actions={getModalActions()}\n            content={getModalContent()}\n            visible={isModalVisible}\n            hideModal={hideModal}\n        />\n    );\n}\n\nexport default InviteUserModalView;\n","import React from 'react';\nimport isEmpty from 'is-empty'\n\nimport InviteUserModalView from './InviteUserModal-View'\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\nimport { searchUsers, getUserByUsername, sendRoomInvitation } from '../../../server-communication/httpServer';\n\nclass InviteUserModalContainer extends React.Component {\n    state = {\n        inviteUserProgress: PROGRESS_INITIAL,\n        matchingUsers: []\n    }\n\n    async componentDidUpdate(prevProps) {\n        const currentUsername = this.getUsernameFromInviteUserForm(this.props.inviteUserForm)\n        const prevUsername = this.getUsernameFromInviteUserForm(prevProps.inviteUserForm)\n        if (prevUsername === currentUsername) {\n            return\n        }\n\n        if (isEmpty(currentUsername)) {\n            this.setState({ matchingUsers: [] })\n        }\n\n        let matchingUsers;\n        try {\n            matchingUsers = await searchUsers(currentUsername)\n        } catch{\n            matchingUsers = { data: { payload: [] } }\n        } finally {\n            this.setState({ matchingUsers: matchingUsers.data.payload })\n        }\n    }\n\n    onInviteUserPending = () => {\n        this.setState({ inviteUserProgress: PROGRESS_PENDING })\n    }\n\n    onInviteUserSuccess = ({ data }) => {\n        console.log('user: ', data)\n        this.setState({ inviteUserProgress: PROGRESS_SUCCESS })\n    }\n\n    onInviteUserFailure = ({ response }) => {\n        console.log('fail user: ', response)\n        this.setState({ inviteUserProgress: PROGRESS_FAIL })\n    }\n\n    onInviteUserFormSubmit = ({ inviteeUsername }) => {\n        this.onInviteUserPending()\n        getUserByUsername(inviteeUsername)\n            .then((response) => {\n                const user = response.data\n                const { room } = this.props.modalProps\n                sendRoomInvitation(user._id, room.roomId, this.onInviteUserSuccess, this.onInviteUserFailure)\n            }).catch(this.onInviteUserFailure)\n    }\n\n    getUsernameFromInviteUserForm = (inviteUserForm) => {\n        const formValues = inviteUserForm && inviteUserForm.values\n        const username = formValues && formValues.inviteeUsername\n        return username ? username.trim() : username\n    }\n\n    render() {\n        const queryUsername = this.getUsernameFromInviteUserForm(this.props.inviteUserForm)\n        return (\n            <InviteUserModalView\n                onFormSubmit={this.onInviteUserFormSubmit}\n                queryUsername={queryUsername}\n                {...this.props}\n                {...this.state}\n            />\n        )\n    }\n}\n\nexport default InviteUserModalContainer;\n","import InviteUserModal from './InviteUserModal-Redux'\n\nexport default InviteUserModal","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport InviteUserModalContainer from './InviteUserModal-Container'\nimport { hideModal } from '../../../redux/actions/modal-actions';\nimport { selectUsername } from './utils'\n\nconst InviteUserModalRedux = (props) => {\n    return <InviteUserModalContainer {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    const { modal: { isModalOpen, modalName, modalProps }, form } = state\n    return {\n        isModalVisible: isModalOpen && modalName === 'InviteUser',\n        modalProps,\n        inviteUserForm: form['invite-user-form'],\n    }\n}\n\nexport default connect(mapStateToProps, { hideModal, selectUsername })(InviteUserModalRedux)","import { change } from 'redux-form'\n\nconst selectUsername = (username) => {\n    return change('invite-user-form', 'inviteeUsername', username)\n}\n\nexport { selectUsername }","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nimport GenericModal from '../GenericModal'\nimport { AcceptRoomInvitationButton } from '../../standalone/RoomActionButtons'\n\nconst ReviewRoomInvitationModalView = ({\n    acceptInvitationProgress,\n    modalProps: { invitation },\n    isModalVisible,\n    hideModal,\n    isTaskCompleted,\n    onIgnoreButtonClick,\n    onAcceptButtonClick\n}) => {\n\n    const getInvitationMessage = () => {\n        const { inviter, room } = invitation\n        const inviterUsername = inviter && inviter.username\n        const roomName = room && room.name\n\n        return (\n            <p className='mb-0'>\n                <em>{inviterUsername}</em>{' '}\n                        invited you to join the room{' '}\n                <em>{roomName}</em>\n            </p>\n        )\n    }\n\n    const getActions = () => {\n        return (\n            <>\n                <Button\n                    variant='outline-secondary'\n                    onClick={isTaskCompleted ? hideModal : onIgnoreButtonClick}\n                >\n                    {isTaskCompleted ? 'Go Back' : 'Ignore'}\n                </Button>\n                <AcceptRoomInvitationButton\n                    progress={acceptInvitationProgress}\n                    propsProgressInitial={{\n                        onClick: onAcceptButtonClick\n                    }}\n                />\n            </>\n        )\n    }\n\n    return (\n        <GenericModal\n            header='Review Room Invitation'\n            content={getInvitationMessage()}\n            actions={getActions()}\n            visible={isModalVisible}\n            hideModal={hideModal}\n        />\n    )\n}\n\nexport default ReviewRoomInvitationModalView;\n","import React from 'react';\n\nimport ReviewRoomInvitationModalView from './ReviewRoomInvitationModal-View'\nimport {\n    PROGRESS_INITIAL,\n    PROGRESS_PENDING,\n    PROGRESS_SUCCESS,\n    PROGRESS_FAIL\n} from '../../standalone/ProgressButton'\n\nclass ReviewRoomInvitationModalContainer extends React.Component {\n    state = { acceptInvitationProgress: PROGRESS_INITIAL }\n\n    onAcceptInvitationPending = () => {\n        this.setState({ acceptInvitationProgress: PROGRESS_PENDING })\n    }\n\n    onAcceptInvitationSuccess = () => {\n        this.setState({ acceptInvitationProgress: PROGRESS_SUCCESS })\n        const {\n            markNotificationAsReviewed,\n            modalProps: { notificationId }\n        } = this.props\n        markNotificationAsReviewed(notificationId)\n    }\n\n    onAcceptInvitationFail = () => {\n        this.setState({ acceptInvitationProgress: PROGRESS_FAIL })\n    }\n\n    onAcceptInvitationButtonClick = () => {\n        this.onAcceptInvitationPending()\n        const { acceptRoomInvitation, modalProps: { invitation } } = this.props\n        acceptRoomInvitation(invitation._id, this.onAcceptInvitationSuccess, this.onAcceptInvitationFail)\n    }\n\n    onIgnoreInvitationButtonClick = () => {\n        const {\n            hideModal,\n            markNotificationAsReviewed,\n            modalProps: { notificationId }\n        } = this.props\n\n        markNotificationAsReviewed(notificationId)\n        hideModal()\n    }\n\n    render() {\n        const isTaskCompleted = [\n            PROGRESS_SUCCESS, PROGRESS_FAIL\n        ].includes(this.state.acceptInvitationProgress)\n\n        return (\n            <ReviewRoomInvitationModalView\n                onIgnoreButtonClick={this.onIgnoreInvitationButtonClick}\n                onAcceptButtonClick={this.onAcceptInvitationButtonClick}\n                isTaskCompleted={isTaskCompleted}\n                {...this.props}\n                {...this.state}\n            />\n        )\n    }\n}\n\nexport default ReviewRoomInvitationModalContainer;\n","import ReviewRoomInvitationModal from './ReviewRoomInvitationModal-Redux'\n\nexport default ReviewRoomInvitationModal","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport ReviewRoomInvitationModalContainer from './ReviewRoomInvitationModal-Container'\nimport { hideModal } from '../../../redux/actions/modal-actions'\nimport { markNotificationAsReviewed } from '../../../redux/actions/notification-actions'\nimport { acceptRoomInvitation } from '../../../redux/actions/room-actions'\n\nconst ReviewRoomInvitationModalRedux = (props) => {\n    return <ReviewRoomInvitationModalContainer {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    const { modal } = state\n    return {\n        isModalVisible: modal.isModalOpen && modal.modalName === 'ReviewRoomInvitation',\n        modalProps: modal.modalProps\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { hideModal, markNotificationAsReviewed, acceptRoomInvitation }\n)(ReviewRoomInvitationModalRedux);","import {\n    markNotificationAsReviewed\n} from '../../../server-communication/httpServer'\nimport { UPDATE_NOTIFICATION } from '../../action-constants'\n\nexport default (notificationId) => async dispatch => {\n    console.log({ notificationId })\n    const onSuccess = (response) => {\n        dispatch({\n            type: UPDATE_NOTIFICATION,\n            payload: response.data\n        })\n    }\n\n    markNotificationAsReviewed(notificationId, onSuccess)\n}\n","import { acceptRoomInvitation } from '../../../server-communication/httpServer'\nimport { UPDATE_ROOM } from '../../action-constants'\n\nexport default (invitationId, onRequestFulfilled, onRequestRejected) => {\n    return async dispatch => {\n        const onSuccess = (response) => {\n            dispatch({\n                type: UPDATE_ROOM,\n                payload: response.data\n            })\n            onRequestFulfilled(response)\n        }\n\n        acceptRoomInvitation(invitationId, onSuccess, onRequestRejected)\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CreateRoomModal from './CreateRoomModal/'\nimport JoinRoomModal from './JoinRoomModal/'\nimport DeleteRoomModal from './DeleteRoomModal/'\nimport LeaveRoomModal from './LeaveRoomModal/'\nimport InviteUserModal from './InviteUserModal'\nimport ReviewRoomInvitationModal from './ReviewRoomInvitationModal'\n\nconst getModalComponentToShow = (modalName) => {\n    switch (modalName) {\n        case 'CreateRoom':\n            return <CreateRoomModal />\n        case 'JoinRoom':\n            return <JoinRoomModal />\n        case 'DeleteRoom':\n            return <DeleteRoomModal />\n        case 'LeaveRoom':\n            return <LeaveRoomModal />\n        case 'InviteUser':\n            return <InviteUserModal />\n        case 'ReviewRoomInvitation':\n            return <ReviewRoomInvitationModal />\n        default:\n            return null\n    }\n}\n\nconst ModalContainer = (props) => {\n    if (!props.modal.isModalOpen) {\n        return null\n    }\n\n    return getModalComponentToShow(props.modal.modalName)\n}\n\nconst mapStateToProps = (state) => {\n    return { modal: state.modal }\n}\n\nexport default connect(mapStateToProps)(ModalContainer);\n","import GenericToast from './GenericToast-View'\n\nexport default GenericToast","import React from 'react';\nimport { Toast, ToastBody, ToastHeader } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\n\nimport './GenericToast-Style.scss'\n\nconst GenericToast = ({ header, body, onClose, show, ...props }) => {\n    const eightSeconds = 8000\n    const onToastClose = onClose || function () { }\n    return (\n        <Toast\n            show={show}\n            autohide={true}\n            delay={eightSeconds}\n            onClose={onToastClose}\n            {...props}\n        >\n            <ToastHeader closeButton={false} className='toast-header-custom'>\n                <div className='d-flex justify-content-between w-100 p-0 m-0'>\n                    <div>{header}</div>\n                    <div className='m-0 p-0 cursor-pointer'>\n                        <FontAwesomeIcon\n                            icon={faWindowClose}\n                            onClick={onToastClose}\n                        />\n                    </div>\n                </div>\n            </ToastHeader>\n            <ToastBody>{body}</ToastBody>\n        </Toast>\n    )\n}\n\nexport default GenericToast;\n","import React from 'react';\n\nimport GenericToast from '../GenericToast'\n\nconst NewNotificationToastView = ({ isToastVisible, onToastClose }) => {\n    return (\n        <GenericToast\n            header='New Notification'\n            body='You have a new notification'\n            show={isToastVisible}\n            onClose={onToastClose}\n        />\n    )\n}\n\nexport default NewNotificationToastView;\n","import NewNotificationToast from './NewNotificationToast-Redux'\n\nexport default NewNotificationToast","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport NewNotificationToastView from './NewNotificationToast-View'\nimport { hideToast } from '../../../redux/actions/toast-actions'\n\nconst TOAST_NAME = 'NewNotification'\n\nconst NewNotificationToastRedux = (props) => {\n    const onToastClose = () => {\n        props.hideToast(TOAST_NAME)\n    }\n    return <NewNotificationToastView {...props} onToastClose={onToastClose} />\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isToastVisible: state.toast.activeToasts.includes(TOAST_NAME)\n    }\n}\n\nexport default connect(mapStateToProps, { hideToast })(NewNotificationToastRedux);\n","import { HIDE_TOAST } from \"../../action-constants\"\n\nexport default (name) => {\n    return {\n        type: HIDE_TOAST,\n        payload: { name }\n    }\n}","import ToastContainer from './ToastContainer'\n\nexport default ToastContainer","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport NewNotificationToast from '../NewNotificationToast'\nimport './ToastContainer-Style.scss'\n\nconst renderToast = (toast) => {\n    switch (toast) {\n        case 'NewNotification':\n            return <NewNotificationToast />\n        default:\n            return null\n    }\n}\n\nconst ToastContainer = ({ activeToasts }) => {\n    return (\n        <div className='toast-container'>\n            {activeToasts.map(toast => renderToast(toast))}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { activeToasts: state.toast.activeToasts }\n}\n\nexport default connect(mapStateToProps)(ToastContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './redux/reducers'\nimport App from './components/App'\nimport ModalContainer from './components/modals/ModalContainer'\nimport ToastContainer from './components/toasts/ToastContainer/'\n\nconst composeEnhanchers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhanchers(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n        <ModalContainer />\n        <ToastContainer />\n    </Provider>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}