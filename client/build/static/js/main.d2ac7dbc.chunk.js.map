{"version":3,"sources":["reducers/serverReducer.js","reducers/notificationReducer.js","reducers/userReducer.js","reducers/index.js","constants/actionConstants.js","reducers/roomReducer.js","components/Dropdown/index.js","server-communication/httpServer.js","containers/UserDropdownInfo/index.js","actions/logoutUser.js","components/NotificationContainer/NotificationIcon/index.js","components/NotificationContainer/NotificationListItem/index.js","components/NotificationContainer/index.js","components/Header/index.js","components/Layout/index.js","components/SnackbarContainer.js","components/LandingPage/Snackbar/index.js","components/modals/GenericModal.js","actions/createRoom.js","components/forms/CreateRoomForm/index.js","components/forms/CreateRoomForm/validate.js","components/Alerts/DismissibleAlert.js","components/modals/CreateRoomModal.js","constants/serverEventConstants.js","server-communication/socketServer.js","actions/tryJoiningRoom.js","components/modals/JoinRoomModal.js","components/ModalContainer/index.js","components/LandingPage/LandingPage.js","components/LandingPage/index.js","components/errors/ServerConnectionFailed/index.js","components/errors/PageNotFound/index.js","components/forms/LoginForm.js","containers/LoginContainer/index.js","actions/loginUser.js","components/forms/RegistrationForm/RegistrationForm.js","components/forms/RegistrationForm/asyncValidate.js","components/forms/RegistrationForm/validate.js","containers/RegisterContainer/index.js","actions/registerUser.js","components/RoomList/index.js","containers/RoomListContainer/index.js","components/Room/index.js","components/errors/Forbidden/index.js","containers/RoomContainer/index.js","components/App/index.js","actions/updateUser.js","containers/AppContainer/index.js","actions/connectToServer.js","actions/createNotification.js","index.js"],"names":["INITIAL_STATE","connected","length","data","isLoggedIn","user","combineReducers","state","action","type","payload","serverConnection","roomMetadata","room","id","notifications","metadata","console","log","form","formReducer","props","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","Title","as","title","Content","menu","triggerComponent","axios","Axios","create","withCredentials","registerUser","username","password","confirmPassword","onRequestFulfilled","onRequestRejected","post","then","loginUser","getUser","userId","get","createRoom","roomName","roomType","UserDropdownInfo","onLogoutButtonClick","logoutUser","renderTriggerComponent","NavItem","className","icon","faUser","size","renderTitle","style","fontWeight","renderMenu","Button","variant","onClick","Dropdown","this","React","Component","connect","dispatch","a","async","response","visibility","shouldShowBadge","faBell","faIdBadge","CustomItem","forwardRef","ref","children","NotificationListItem","notification","DropdownItem","NotificationContainer","Object","keys","map","key","NotificationIcon","getDropdownMenu","getWrappedNotificationIcon","backgroundColor","isUserLoggedIn","Navbar","collapseOnSelect","expand","sticky","Container","Brand","to","Nav","Layout","useStyles","makeStyles","theme","success","green","error","palette","dark","message","display","alignItems","fontSize","iconVariant","opacity","marginRight","spacing","iconVariants","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","show","styleClasses","Icon","open","autoHideDuration","onClose","SnackbarContent","clsx","actions","Snackbar","SnackbarContainer","header","onSnackbarClose","Variant","GenericModal","Modal","visible","onHide","hideModal","centered","Header","closeButton","Body","content","Footer","attemptCreatingRoom","onSuccess","onFailure","radioOptions","label","value","renderRadioGroup","formProps","input","meta","options","hasErrors","touched","impureFormNoErrors","pristine","radioInputs","option","Form","Group","controlId","Check","isInvalid","isValid","Label","Alert","renderRoomNameField","FormGroup","FormControl","Control","Feedback","reduxForm","validate","values","errors","noValidate","onSubmit","handleSubmit","onFormSubmit","Field","component","name","placeholder","required","shouldShowDismissIcon","dismissAction","onDismiss","dismissible","Heading","heading","body","CreateRoomModal","alert","showAlert","setState","hideAlert","onCancelButtonClick","getAlertDismissAction","DismissibleAlert","getModalActions","getModalContent","socket","openSocket","autoConnect","connectToServer","onConnectionFailed","on","joinRoom","roomId","callback","emit","events","tryJoiningRoom","onPermissionPending","onPermissionRequestCompleted","status","reason","JoinRoomModal","inputValue","isFormLoading","event","preventDefault","onJoinRoomPermissionRecieved","inputChanged","e","target","errorMessage","disabled","Fragment","loading","onChange","autoFocus","ModalContainer","LandingPage","onCreateRoomButtonClick","onJoinRoomButtonClick","modalProps","snackbarProps","LandingPageContainer","shouldShowSnackbar","snackbarMessage","snackbarVariant","shouldShowModal","modalName","capitalizeFirstWord","sentence","charAt","toUpperCase","slice","getSuccessMessage","actionType","getFailureMessage","failureReason","successMessage","showSnackbar","failureMessage","onJoinRoomPermissionPending","permissionStatus","showModal","getModalProps","ServerConnectionFailed","PageNotFound","renderField","LoginContainer","hasLoginError","errorReason","showErrorAlert","onLoginFailure","formValues","renderAppropriateContentIfRedirect","locationState","location","isRedirectFromSuccessfulRegister","onFailureCallback","asyncValidating","isAsyncValidationError","hasPasswordMismatch","asyncValidate","asyncChangeFields","submitting","invalid","registerButtonDisabled","registerButtonStyle","cursor","RegisterContainer","onRegistrationFailed","renderAppropriateRedirect","pathname","isUserRegistered","RegistrationForm","isRegistered","RoomList","ListGroup","rooms","owner","Item","Card","Text","RoomListContainer","users","onRoomFetchFail","onRoomFetchSuccess","forEach","onUserFetchSuccess","onUserFetchFail","usersMap","Room","createdAt","Forbidden","msg","RoomContainer","getRoom","match","params","renderError","Spinner","animation","App","serverConnectionFailed","exact","path","onGetCurrentUserSuccess","userResponse","loginResponse","actionUpdateUser","AppContainer","onServerConnectionFailed","onServerConnected","onServerDisconnected","updateUser","createNotification","composeEnhanchers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d2ac7dbc.chunk.js","sourcesContent":["import { CONNECT_TO_SERVER } from '../constants/actionConstants';\n\nconst INITIAL_STATE = {\n    connected: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    if (action.type === CONNECT_TO_SERVER) {\n        return {connected: action.payload.connected}\n    }\n\n    return state;\n}","import { CREATE_NOTIFICATION } from \"../constants/actionConstants\";\n\nconst INITIAL_STATE = { length: 0, data: {} }\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CREATE_NOTIFICATION:\n            const { id, ...metadata } = action.payload;\n            console.log('id: ' + id + \"\\nmetadata:\");\n            console.log(metadata)\n            return {\n                ...state,\n                length: state.length + 1,\n                data: { ...state.data, [id]: metadata }\n            };\n\n        default:\n            return state;\n    }\n}","import { LOGIN, UPDATE_USER, LOGOUT, REGISTER } from '../constants/actionConstants';\n\nconst INITIAL_STATE = {\n    isLoggedIn: false,\n    user: {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case LOGIN:\n            return { isLoggedIn: true, user: action.payload.user }\n        case LOGOUT:\n            return INITIAL_STATE\n        case REGISTER:\n            return { isLoggedIn: false, user: action.payload.user }\n        case UPDATE_USER:\n            //Update only what is provided in payload\n            return { ...state, ...action.payload }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport serverReducer from './serverReducer';\nimport roomReducer from './roomReducer';\nimport notificationReducer from './notificationReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n    user: userReducer,\n    serverConnection: serverReducer,\n    roomMetadata: roomReducer,\n    notifications: notificationReducer,\n    form: formReducer,\n})\n","export const CONNECT_TO_SERVER = \"CONNECT_TO_SERVER\";\nexport const RECIEVE_MESSAGE = \"RECIEVE_MESSAGE\";\n\nexport const CREATE_ROOM = \"CREATE_ROOM\";\nexport const JOIN_ROOM = \"JOIN_ROOM\";\n\nexport const CREATE_NOTIFICATION = \"CREATE_NOTIFICATION\";\n\nexport const UPDATE_USER = \"UPDATE_USER_STATUS\";\nexport const LOGIN = \"LOGIN\"\nexport const LOGOUT = \"LOGOUT\"\nexport const REGISTER = \"REGISTER\"","import {\n    CREATE_ROOM,\n    JOIN_ROOM\n\n}\n    from '../constants/actionConstants';\n\nexport default (state = {}, action) => {\n    const room = action.payload;\n    switch (action.type) {\n        case CREATE_ROOM:\n            return { ...state, [room.id]: room };\n        case JOIN_ROOM:\n            return { ...state, [room.id]: room };\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\n\nexport default (props) => {\n\n    const renderPopover = () => {\n        return (\n            <Popover>\n                <Popover.Title as=\"h2\">{props.title}</Popover.Title>\n                <Popover.Content>\n                    {props.menu}\n                </Popover.Content>\n            </Popover>\n        )\n    }\n\n    return (\n        <OverlayTrigger\n            trigger=\"click\"\n            placement=\"bottom\"\n            rootClose={true}\n            overlay={renderPopover()}\n        >\n            {props.triggerComponent}\n        </OverlayTrigger>\n    )\n}","import Axios from 'axios';\n\nconst axios = Axios.create({ withCredentials: true })\n\nexport const registerUser = (username, password, confirmPassword, onRequestFulfilled, onRequestRejected) => {\n    axios.post('/api/register', { username, password, confirmPassword }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const loginUser = (username, password, onRequestFulfilled, onRequestRejected) => {\n    axios.post('/api/login', { username, password }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getUser = (userId, onRequestFulfilled, onRequestRejected) => {\n    axios.get(`/api/user/${userId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getCurrentUser = (onRequestFulfilled, onRequestRejected) => {\n    axios.get('/api/user/').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const checkLoginStatus = (onRequestFulfilled, onRequestRejected) => {\n    axios.get('/api/user/status/login').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const logoutUser = (onRequestFulfilled, onRequestRejected) => {\n    axios.post('/api/logout').then(onRequestFulfilled, onRequestRejected);\n}\n\nexport const getRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    axios.get(`/api/rooms/${roomId}`).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const getAllRooms = (onRequestFulfilled, onRequestRejected) => {\n    axios.get('/api/rooms').then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const createRoom = (roomName, roomType, onRequestFulfilled, onRequestRejected) => {\n    axios.post('/api/rooms', { roomName, roomType }).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const updateRoom = (roomId, update, onRequestFulfilled, onRequestRejected) => {\n    axios.patch(`/api/rooms/${roomId}`, update).then(onRequestFulfilled, onRequestRejected)\n}\n\nexport const deleteRoom = (roomId, onRequestFulfilled, onRequestRejected) => {\n    axios.delete(`/api/rooms/${roomId}`).then(onRequestFulfilled, onRequestRejected)\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport Dropdown from '../../components/Dropdown';\nimport logoutUser from '../../actions/logoutUser';\nimport './UserDropdownInfo.scss';\n\nclass UserDropdownInfo extends React.Component {\n\n    onLogoutButtonClick = () => {\n        this.props.logoutUser();\n    }\n\n    renderTriggerComponent = () => {\n        return (\n            <NavItem as={\"span\"} className=\"header-icon\" >\n                <FontAwesomeIcon icon={faUser} size=\"lg\" />\n            </NavItem>\n        )\n    }\n\n    renderTitle = () => {\n        return (\n            <span style={{ fontWeight: \"normal\" }}>\n                Signed in as <strong>{this.props.username}</strong>\n            </span>\n        )\n    }\n\n    renderMenu = () => {\n        return (\n            <div className=\"user-info-dropdown-menu-container\">\n                <Button variant=\"outline-secondary\" onClick={this.onLogoutButtonClick}>Log Out</Button>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Dropdown\n                title={this.renderTitle()}\n                menu={this.renderMenu()}\n                triggerComponent={this.renderTriggerComponent()}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { username: state.user.user.username }\n}\n\nexport default connect(mapStateToProps, { logoutUser })(UserDropdownInfo);","import { LOGOUT } from '../constants/actionConstants';\n\nimport { logoutUser } from '../server-communication/httpServer'\n\nexport default () => async dispatch => {\n    logoutUser(() => dispatch({ type: LOGOUT }),({ response }) => console.log('Logout Failed: ', response));\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faIdBadge } from '@fortawesome/free-solid-svg-icons';\n\nexport default (props) => {\n    const visibility = props.shouldShowBadge ? \"visible\" : \"hidden\";\n    return (\n        <FontAwesomeIcon icon={faBell} size=\"lg\">\n            <FontAwesomeIcon icon={faIdBadge} style={{ visibility: visibility }} />\n        </FontAwesomeIcon>\n    );\n}","import React from 'react';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\n\nconst CustomItem = React.forwardRef(({ children, className, style }, ref) => (\n    <div\n        ref={ref}\n        className={className}\n        style={style}\n    >\n        {children}\n    </div>\n))\n\nconst NotificationListItem = (props) => {\n    console.log(\"item. title: \" + props.notification.title)\n    return (\n        <DropdownItem as={CustomItem}>\n            nblah abl blhjljaljgjjkfgklkjkgjkfgjfkgj\n        </DropdownItem>\n    );\n}\n\nexport default NotificationListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NotificationIcon from './NotificationIcon';\nimport NotificationListItem from './NotificationListItem';\nimport Dropdown from '../Dropdown';\n\nimport './NotificationContainer.scss'\n\nclass NotificationContainer extends React.Component {\n    getDropdownMenu() {\n        const { notifications } = this.props;\n        if (notifications.length === 0) {\n            return <div className=\"item\">You don't have any notifications</div>\n        }\n\n        return (\n            Object.keys(notifications.data).map(id => {\n                return (\n                    <div key={id}>\n                        <NotificationListItem\n                            notification={notifications.data[id]}\n                        />\n                        <hr />\n                    </div>\n                );\n            })\n        );\n    }\n\n    getWrappedNotificationIcon() {\n        return (\n            <span className=\"header-icon nav-item\">\n                <NotificationIcon shouldShowBadge={this.props.notifications.length !== 0} />\n            </span>\n        );\n    }\n\n    render() {\n        return (\n            <Dropdown\n                title=\"Notifications\"\n                menu={this.getDropdownMenu()}\n                triggerComponent={this.getWrappedNotificationIcon()}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { notifications: state.notifications }\n}\n\nexport default connect(mapStateToProps, null)(NotificationContainer);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Container from 'react-bootstrap/Container';\nimport UserDropdownInfo from '../../containers/UserDropdownInfo'\nimport NotificationContainer from '../NotificationContainer';\nimport './Header.scss';\n\nconst style = { backgroundColor: \"#23282d\" }\n\nconst renderConditionallyLoggedInStatus = (isUserLoggedIn) => {\n    if (isUserLoggedIn) {\n        return (\n            <UserDropdownInfo />\n        );\n    }\n    else {\n        return (\n            <>\n                <Link to=\"/login\">\n                    <NavItem as={\"span\"} className=\"header-icon\" >\n                        <Button size=\"sm\">Login</Button>\n                    </NavItem>\n                </Link>\n\n                <Link to=\"/register\">\n                    <NavItem as={\"span\"} className=\"header-icon\" >\n                        <Button size=\"sm\">Register</Button>\n                    </NavItem>\n                </Link>\n            </>\n        );\n    }\n}\n\nconst Header = (props) => {\n    return (\n        <Navbar collapseOnSelect style={style} expand=\"large\" sticky=\"top\">\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\" className=\"logo\"> ChatRooms </Link>\n                </Navbar.Brand>\n\n                <Nav className=\"justify-content-end flex-row\">\n                    <div className=\"header-item-container\">\n                        <Link to=\"/rooms\" className=\"header-text\">Rooms</Link>\n                    </div>\n                    <div className=\"header-item-container\">\n                        <NotificationContainer />\n                    </div>\n                    {renderConditionallyLoggedInStatus(props.isUserLoggedIn)}\n                </Nav>\n            </Container>\n        </Navbar>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { isUserLoggedIn: state.user.isLoggedIn }\n}\n\nexport default connect(mapStateToProps, null)(Header);\n\n/*\nLogo credits\n\n<div>\n    Icons made by\n    <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\n        Smashicons\n    </a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n        www.flaticon.com\n    </a>\n</div>\n*/","import React from 'react';\nimport Header from '../Header';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"app\">\n            <Header />\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst iconVariants = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nexport default (props) => {\n    if (!props.show) {\n        //relying on snackbar to \"not show\" according to props.show introduced latency in hiding the snackbar\n        //Hence, simply returning null when not showing snackbar.\n        //However, do not remove \"open\" attribute from Snackbar \n        //as it is false by default which will always hide the Snackbar\n        return null;\n    }\n\n    const styleClasses = useStyles();\n    const Icon = iconVariants[props.variant];\n    return (\n        <Snackbar\n            open={props.show}\n            autoHideDuration={props.autoHideDuration || 3000}\n            onClose={props.onClose}\n        >\n            <SnackbarContent\n                className={clsx(styleClasses[props.variant])}\n                message={\n                    <span className={styleClasses.message}>\n                        <Icon className={clsx(styleClasses.icon, styleClasses.iconVariant)} />\n                        {props.message}\n                    </span>\n                }\n                action={props.actions}\n            />\n        </Snackbar>\n    );\n}\n","import React from 'react';\n\nimport SnackbarContainer from '../../SnackbarContainer';\n\nconst Snackbar = (props) => {\n    return (\n        <SnackbarContainer\n            header={props.header}\n            message={props.message}\n            show={props.show}\n            onClose={props.onSnackbarClose}\n            variant={props.Variant}\n            actions={props.actions}\n            autoHideDuration={props.autoHideDuration || 3000} />\n    );\n}\n\nexport default Snackbar;\n","import React from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\n\nconst GenericModal = (props) => {\n    return (\n        <Modal\n            show={props.visible}\n            onHide={props.hideModal}\n            centered\n        >\n            <Modal.Header closeButton onHide={props.hideModal}>\n                <Modal.Title>\n                    {props.header}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.content}\n            </Modal.Body>\n            <Modal.Footer>\n                {props.actions}    \n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default GenericModal;\n","import { CREATE_ROOM } from '../constants/actionConstants';\n\nimport { createRoom } from '../server-communication/httpServer';\n\nconst attemptCreatingRoom = (roomName, roomType, onSuccess, onFailure) => async (dispatch) => {\n    createRoom(\n        roomName,\n        roomType,\n        (response) => {\n            dispatch({ type: CREATE_ROOM, payload: response.data })\n            onSuccess()\n        },\n        onFailure,\n    )\n}\n\nexport default attemptCreatingRoom;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { Form, FormGroup, FormControl, Alert } from 'react-bootstrap';\n\nimport validate from './validate';\n\nimport './CreateRoomForm.scss';\n\n\nconst radioOptions = [\n    { label: 'Private', value: 'private' },\n    { label: 'Public', value: 'public' },\n    { label: 'Unlisted', value: 'unlisted' }\n]\n\n\nconst renderRadioGroup = (formProps) => {\n    const { input, meta, options } = formProps;\n    const hasErrors = meta.touched && meta.error;\n    const impureFormNoErrors = !meta.pristine && !hasErrors;\n\n    const radioInputs = options.map(option => {\n        return (\n            <Form.Group controlId={`roomType-${option.value}`} key={option.value}>\n                <Form.Check\n                    {...input}\n                    {...option}\n                    type=\"radio\"\n                    isInvalid={hasErrors}\n                    isValid={impureFormNoErrors}\n                />\n            </Form.Group>\n        )\n    })\n\n    return (\n        <Form.Group controlId=\"create-room-form-type\">\n            <Form.Label><strong>Select Room Type:</strong></Form.Label>\n            {radioInputs}\n            {hasErrors && <Alert variant=\"danger\">{meta.error}</Alert>}\n        </Form.Group>\n    );\n}\n\n\nconst renderRoomNameField = (formProps) => {\n    const { input, meta } = formProps;\n    const hasErrors = meta.touched && meta.error;\n    const impureFormNoErrors = !meta.pristine && !hasErrors;\n\n    return (\n        <FormGroup controlId=\"create-room-form-name\">\n            <Form.Label><strong>{formProps.label}</strong></Form.Label>\n            <FormControl {...formProps} {...input} isInvalid={hasErrors} isValid={impureFormNoErrors} />\n            <Form.Control.Feedback size=\"lg\" type=\"invalid\">{meta.error}</Form.Control.Feedback>\n        </FormGroup>\n    );\n}\n\n\nconst CreateRoomForm = (props) => {\n    //Submit button resides in CreateRoomModal's Footer for better UI\n    return (\n        <Form noValidate id=\"create-room-form\" onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <Field\n                component={renderRoomNameField}\n                name=\"roomName\"\n                label=\"Enter Room Name:\"\n                placeholder=\"Example: room_for_dolphins\"\n                required\n            />\n            <hr />\n            <Field component={renderRadioGroup} options={radioOptions} name='roomType' />\n        </Form >\n    );\n}\n\n\nexport default reduxForm({\n    form: 'createRoomForm',\n    validate: validate\n})(CreateRoomForm)","export default (values) => {\n    const errors = {}\n    if (!values.roomName) {\n        errors.roomName = 'Room name cannot be empty'\n    }\n\n    if (!values.roomType) {\n        errors.roomType = 'Please choose one of the room types above'\n    }\n\n    return errors\n}","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default (props) => {\n    const shouldShowDismissIcon = !props.dismissAction;\n    return (\n        <Alert show={props.show} variant={props.variant} onClose={props.onDismiss} dismissible={shouldShowDismissIcon}>\n            <Alert.Heading>{props.heading}</Alert.Heading>\n            <p>{props.body}</p>\n            <div className='d-flex justify-content-end'>\n                {props.dismissAction && props.dismissAction()}\n            </div>\n        </Alert>\n    )\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport GenericModal from './GenericModal';\nimport createRoom from '../../actions/createRoom';\nimport CreateRoomForm from '../forms/CreateRoomForm/';\n\nimport DismissibleAlert from '../Alerts/DismissibleAlert';\n\nclass CreateRoomModal extends React.Component {\n    state = { alert: { show: false } }\n\n    onFormSubmit = ({ roomName, roomType }) => {\n        this.props.createRoom(roomName, roomType, this.onSuccess, this.onFailure);\n    }\n\n    onSuccess = () => {\n        this.showAlert('success', \"Your room was successfully created\");\n    }\n\n    onFailure = () => {\n        this.showAlert('danger', \"Oops! Your room couldn't be created\");\n    }\n\n    showAlert = (variant, body) => {\n        this.setState({\n            alert:\n            {\n                show: true,\n                variant: variant,\n                body: body\n            }\n        })\n    }\n\n    hideAlert = () => {\n        this.setState({ alert: { show: false } })\n    }\n\n    onCancelButtonClick = () => {\n        this.hideAlert();\n        this.props.hideModal();\n    }\n\n    getModalActions() {\n        return (\n            <>\n                <Button variant='secondary' onClick={this.onCancelButtonClick}>Cancel</Button>\n                <Button form='create-room-form' type='submit'>Create Room</Button>\n            </>\n        );\n    }\n\n    getAlertDismissAction = () => {\n        if (!this.state.alert.show) {\n            return null;\n        }\n\n        if (this.state.alert.variant === 'danger') {\n            return null;\n        }\n\n        return (\n            <Button\n                variant='outline-success'\n                onClick={() => {\n                    this.hideAlert();\n                    this.props.hideModal();\n                }}\n            >\n                Back to home\n            </Button>\n        )\n    }\n\n    getModalContent() {\n        return (\n            <>\n                <DismissibleAlert\n                    {...this.state.alert}\n                    onDismiss={this.hideAlert}\n                    dismissAction={this.getAlertDismissAction}\n                />\n                <CreateRoomForm onFormSubmit={this.onFormSubmit} />\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <GenericModal\n                    header=\"Create Room\"\n                    actions={this.getModalActions()}\n                    content={this.getModalContent()}\n                    {...this.props}\n                />\n            </>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    { createRoom }\n)(CreateRoomModal);\n\n","export default {\n    ROOM_EVENT: \"event:room\",\n    ROOM_JOIN_PERMISSION_SEND: \"room_join_permission_send\",\n    ROOM_JOIN_PERMISSION_RECIEVE: \"room_join_permission_recieve\",\n    CREATE_ROOM: \"create_room\",\n    JOIN_ROOM: \"join_room\",\n\n    NEW_MESSAGE_RECIEVED: \"new_message_recieved\",\n    SEND_MESSAGE: \"send_message\",\n    USER_ID_RECIEVE: \"user_id_recieve\",\n\n    USER_EVENT: \"event:user\",\n    CHECK_USERNAME: \"CHECK_USERNAME\"\n}","import openSocket from 'socket.io-client';\nimport events from '../constants/serverEventConstants';\n\nconst socket = openSocket('/', { autoConnect: false });\n\nexport const connectToServer = (onConnectionFailed) => {\n    socket.connect();\n    socket.on('connect_error', onConnectionFailed);\n}\n\nexport const onServerConnected = (callback) => {\n    socket.on('connect', callback)\n}\n\nexport const onServerDisconnected = (callback) => {\n    socket.on('disconnect', callback)\n}\n\nexport const onRoomJoinPermissionRecieved = (callback) => {\n    socket.on(events.ROOM_EVENT, events.ROOM_JOIN_PERMISSION_RECIEVE, callback);\n}\n\nexport const onUserIdRecieved = (callback) => {\n    socket.on(events.USER_ID_RECIEVE, callback);\n}\n\nexport const joinRoom = (roomId, callback) => {\n    return socket.emit(events.ROOM_EVENT, events.JOIN_ROOM, roomId, callback);\n}\n\nexport const checkUsername = (username, callback) => {\n    console.log('will emit')\n    return socket.emit(events.USER_EVENT, events.CHECK_USERNAME, username, callback)\n}","import { JOIN_ROOM } from '../constants/actionConstants';\n\nimport { joinRoom, onRoomJoinPermissionRecieved } from '../server-communication/socketServer';\n\nconst tryJoiningRoom =\n    (roomId, onSuccess, onPermissionPending, onPermissionRequestCompleted, onFailure) =>\n        async dispatch => {\n            await joinRoom(roomId, (data) => {\n                if (data.status === \"ok\") {\n                    dispatch({ type: JOIN_ROOM, payload: roomId });\n                    onSuccess();\n                }\n                else if (data.status === \"permission_pending\") {\n                    onPermissionPending();\n                    onRoomJoinPermissionRecieved(onPermissionRequestCompleted);\n                }\n                else {\n                    onFailure(data.reason);\n                }\n            });\n        }\n\nexport default tryJoiningRoom;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport GenericModal from './GenericModal';\nimport tryJoiningRoom from '../../actions/tryJoiningRoom';\n\nclass JoinRoomModal extends React.Component {\n    state = { inputValue: \"\", isFormLoading: false }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ isFormLoading: true });\n        this.props.tryJoiningRoom(\n            this.state.inputValue,\n            this.props.onSuccess,\n            this.props.onPermissionPending,\n            this.props.onJoinRoomPermissionRecieved,\n            this.props.onFailure\n        )\n    }\n\n    inputChanged = (e) => {\n        this.setState({\n            inputValue: e.target.value,\n            errorMessage: null\n        })\n    }\n\n    onCancelButtonClick = () => {\n        this.setState({ inputValue: \"\", isFormLoading: false });\n        this.props.hideModal();\n    }\n\n    getModalActions() {\n        const disabled = this.state.isFormLoading ? \"disabled\" : \"\";\n        return (\n            <React.Fragment>\n                <button className=\"ui button\" onClick={this.onCancelButtonClick}>\n                    Cancel\n                </button>\n\n                <button type=\"submit\" form=\"join-room-form\" className={`ui button orange ${disabled}`}>\n                    Join\n                </button>\n            </React.Fragment>\n        );\n    }\n\n    getModalContent() {\n        const loading = this.state.isFormLoading ? \"loading\" : \"\";\n        return (\n            <form className={`ui form ${loading}`} id=\"join-room-form\" onSubmit={this.onFormSubmit}>\n                <div className=\"required field\">\n                    <label>Enter Room ID:</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Room Number\"\n                        value={this.state.inputValue}\n                        onChange={this.inputChanged}\n                        autoFocus={true}\n                        required={true}\n                    />\n                </div>\n            </form>\n        );\n    }\n\n    render() {\n        return (\n            <GenericModal\n                header=\"Join Room\"\n                actions={this.getModalActions()}\n                content={this.getModalContent()}\n                {...this.props}\n            />\n        );\n    }\n}\n\nexport default connect(null, { tryJoiningRoom })(JoinRoomModal);\n","import React from 'react';\n\nimport CreateRoomModal from '../modals/CreateRoomModal';\nimport JoinRoomModal from '../modals/JoinRoomModal';\n\nconst ModalContainer = (props) => {\n    const getModal = (name) => {\n        return name === 'create' ? <CreateRoomModal {...props} /> : <JoinRoomModal {...props} />\n    }\n\n    return getModal(props.name);\n}\n\nexport default ModalContainer;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport Snackbar from './Snackbar';\nimport ModalContainer from '../ModalContainer';\n\nconst LandingPage = (props) => {\n    return (\n        <div className=\"landing-page\">\n            <div className=\"inner-wrapper\">\n                <p>Welcome to Chatrooms!</p>\n\n                <div className=\"buttons-container\">\n                    <Button onClick={props.onCreateRoomButtonClick}>\n                        Create Room\n                    </Button>\n\n                    <Button onClick={props.onJoinRoomButtonClick}>\n                        Join Room\n                    </Button>\n                </div>\n\n            </div>\n            <ModalContainer {...props.modalProps}/>\n            <Snackbar {...props.snackbarProps}/>\n        </div>\n    );\n}\n\nexport default LandingPage;\n","import React from 'react';\n\nimport './LandingPage.scss';\nimport LandingPage from './LandingPage';\n\nclass LandingPageContainer extends React.Component {\n    state = {\n        shouldShowSnackbar: false,\n        snackbarMessage: \"\",\n        snackbarVariant: \"info\",\n        shouldShowModal: false,\n        modalName: null\n    }\n\n    capitalizeFirstWord = (sentence) => {\n        //\"sentence &&\" handles undefined or an empty sentence\n        return sentence && sentence.charAt(0).toUpperCase() + sentence.slice(1);\n    }\n\n    getSuccessMessage = (actionType) => {\n        switch (actionType) {\n            case \"create-room\":\n                return \"Room created Successfully!\";\n            case \"join-room\":\n                return \"Room joined Successfully!\";\n            default:\n                return \"Operation Successful!\";\n        }\n    }\n\n    getFailureMessage = (actionType, failureReason) => {\n        failureReason = this.capitalizeFirstWord(failureReason);\n        switch (actionType) {\n            case \"create-room\":\n                return `Failed to create Room! Reason: ${failureReason}`;\n            case \"join-room\":\n                return `Failed to join Room! Reason: ${failureReason}`;\n            default:\n                return \"Operation Failed!\";\n        }\n    }\n\n    onSuccess = (actionType) => {\n        console.log(\"landing page on success callback\")\n        this.hideModal();\n        const successMessage = this.getSuccessMessage(actionType);\n        this.showSnackbar(\"success\", successMessage);\n    }\n\n    onFailure = (actionType, reason) => {\n        console.log(\"landing page on failure callback\")\n        this.hideModal();\n        const failureMessage = this.getFailureMessage(actionType, reason);\n        this.showSnackbar(\"error\", failureMessage);\n    }\n\n    onJoinRoomPermissionPending = () => {\n        console.log('mewo')\n        this.showSnackbar(\"info\", \"Private Room. Waiting for permission from Room owner\");\n    }\n\n    onJoinRoomPermissionRecieved = (permissionStatus) => {\n        if (permissionStatus === \"ok\") {\n            this.hideModal();\n            this.showSnackbar(\"success\", \"Room access permission granted!\");\n        } else {\n            this.hideModal();\n            this.showSnackbar(\"error\", \"Room access permission rejected!\");\n        }\n    }\n\n    showModal = (modalName) => {\n        this.setState({\n            shouldShowModal: true,\n            modalName: modalName\n        })\n    }\n\n    hideModal = () => {\n        this.setState({\n            shouldShowModal: false\n        })\n    }\n\n    showSnackbar = (variant, message) => {\n        this.setState({\n            shouldShowSnackbar: true,\n            snackbarVariant: variant,\n            snackbarMessage: message\n        })\n    }\n\n    onSnackbarClose = () => {\n        this.setState({\n            shouldShowSnackbar: false,\n            snackbarVariant: \"info\",\n            snackbarMessage: \"\"\n        })\n    }\n\n    getModalProps() {\n        return {\n            name: this.state.modalName,\n            hideModal: this.hideModal,\n            visible: this.state.shouldShowModal,\n            onSuccess: this.onSuccess,\n            onFailure: this.onFailure,\n            onPermissionPending: this.onJoinRoomPermissionPending\n        }\n    }\n\n    getSnackbarProps(){\n        return {\n            onClose: this.onSnackbarClose,\n\n        }\n    }\n\n    render() {\n        return (\n            <LandingPage\n                modalProps={this.getModalProps()}\n                onCreateRoomButtonClick={() => this.showModal('create')}\n                onJoinRoomButtonClick={() => this.showModal('join')} \n            />\n        );\n    }\n}\n\nexport default LandingPageContainer;","import React from 'react';\n\nimport '../style.scss'\n\nconst ServerConnectionFailed = () => {\n    console.log('component connection failed')\n    return (\n        <div className=\"error\">\n            Oops! Unable to connect to the server. Please visit later\n        </div>\n    );\n}\n\nexport default ServerConnectionFailed;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport '../style.scss'\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"error\">\n            Error 404: Page Not Found.\n            <Link to=\"/\">\n                <Button>Home</Button>\n            </Link>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import React from 'react'\nimport { Button, Form, FormControl, FormGroup } from 'react-bootstrap'\nimport { Field, reduxForm } from 'redux-form'\n\nconst renderField = (formProps) => {\n    return (\n        <>\n            <Form.Label>{formProps.label}</Form.Label>\n            <FormControl\n                {...formProps.input}\n                type={formProps.type}\n                placeholder={formProps.placeholder}\n                required />\n        </>\n    );\n}\n\nconst LoginForm = (props) => {\n    return (\n        <Form onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <FormGroup controlId=\"formUsernameGroup\">\n                <Field\n                    component={renderField}\n                    name=\"username\"\n                    type=\"text\"\n                    label=\"Enter Username\"\n                    placeholder=\"Example: mitsy_the_cat\"\n                />\n            </FormGroup>\n\n            <FormGroup controlId=\"formPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Enter Password\"\n                    placeholder=\"Password\"\n                />\n            </FormGroup>\n\n            <Button type=\"submit\">Login</Button>\n        </Form>\n    );\n}\n\nexport default reduxForm({\n    form: 'loginForm'\n})(LoginForm)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Alert, Container } from 'react-bootstrap';\n\n\nimport LoginForm from '../../components/forms/LoginForm';\nimport loginUser from '../../actions/loginUser';\nimport DismissibleAlert from '../../components/Alerts/DismissibleAlert'\n\nclass LoginContainer extends React.Component {\n    state = {\n        hasLoginError: false,\n        errorReason: null,\n        showErrorAlert: false,\n    }\n\n    onLoginFailure = ({response}) => {\n        this.setState({\n            hasLoginError: true,\n            errorReason: response.data.reason,\n            showErrorAlert: true\n        })\n    }\n\n    onFormSubmit = (formValues) => {\n        this.props.loginUser(\n            formValues.username,\n            formValues.password,\n            this.onLoginFailure\n        );\n    }\n\n    renderAppropriateContentIfRedirect = (props) => {\n        const locationState = props.location.state;\n        if (locationState && locationState.isRedirectFromSuccessfulRegister) {\n            return (\n                <Alert variant=\"success\">\n                    <Alert.Heading>Registration Completed!</Alert.Heading>\n                    <p>Please login to continue</p>\n                </Alert>\n            )\n        }\n    }\n\n    render() {\n        if (this.props.isUserLoggedIn) {\n            return <Redirect to=\"/\" />\n        }\n        else {\n            return (\n                <div className=\"centered-content\">\n                    <Container>\n                        {this.renderAppropriateContentIfRedirect(this.props)}\n                        <DismissibleAlert\n                            variant=\"danger\"\n                            heading=\"Login Unsuccessful\"\n                            body={this.state.errorReason}\n                            show={this.state.showErrorAlert}\n                            onDismiss={() => this.setState({ showErrorAlert: false })}\n                        />\n                        <LoginForm onFormSubmit={this.onFormSubmit} />\n                    </Container>\n                </div >\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isUserLoggedIn: state.user.isLoggedIn,\n    }\n}\n\nexport default connect(mapStateToProps, { loginUser })(LoginContainer);\n","import { loginUser } from '../server-communication/httpServer'\n\nimport { LOGIN } from '../constants/actionConstants'\n\nconst loginAction = (user) => {\n    return {\n        type: LOGIN,\n        payload: {\n            user: user\n        }\n    }\n}\n\nexport default (username, password, onFailureCallback) => async (dispatch) => {\n    const dispatchLoginAction = (response) => {\n        dispatch(loginAction(response.data))\n    }\n\n    loginUser(username, password, dispatchLoginAction, onFailureCallback);\n}\n","import React from 'react';\nimport { Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport { Field, reduxForm } from 'redux-form';\n\nimport validate from './validate';\nimport { asyncValidate, USERNAME_TAKEN_ERROR_MESSAGE } from './asyncValidate';\nimport './style.scss';\n\n\nconst renderField = (formProps) => {\n    const { touched, error, pristine, asyncValidating } = formProps.meta\n    const hasErrors = isAsyncValidationError(error) || (touched && error)\n\n    return (\n        <>\n            <Form.Label>{formProps.label}</Form.Label>\n            <FormControl\n                className={asyncValidating ? 'loading' : ''}\n                {...formProps.input}\n                {...formProps}\n                isInvalid={hasErrors}\n                isValid={!asyncValidating && !pristine && !hasErrors}\n            />\n            <FormControl.Feedback type=\"invalid\">{error}</FormControl.Feedback>\n        </>\n    );\n}\n\nconst isAsyncValidationError = (error) => {\n    return error === USERNAME_TAKEN_ERROR_MESSAGE\n}\n\nconst RegisterForm = (props) => {\n    const { pristine, submitting, asyncValidating, invalid } = props;\n    const registerButtonDisabled = (pristine || submitting || asyncValidating || invalid);\n\n    const registerButtonStyle = {\n        cursor: registerButtonDisabled ? \"not-allowed\" : \"pointer\"\n    }\n\n    return (\n        <Form id=\"registration-form\" noValidate onSubmit={props.handleSubmit(props.onFormSubmit)}>\n            <FormGroup controlId=\"formUsernameGroup\">\n                <Field\n                    component={renderField}\n                    name=\"username\"\n                    type=\"text\"\n                    label=\"Enter Username\"\n                    placeholder=\"Example: mitsy_the_cat\"\n                />\n            </FormGroup>\n            <FormGroup controlId=\"formPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"password\"\n                    type=\"password\"\n                    label=\"Enter Password\"\n                    placeholder=\"Password\"\n                />\n            </FormGroup>\n\n            <FormGroup controlId=\"formConfirmPasswordGroup\">\n                <Field\n                    component={renderField}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    label=\"Confirm Password\"\n                    placeholder=\"Confirm Password\"\n                />\n            </FormGroup>\n\n            <Button\n                type=\"submit\"\n                form=\"registration-form\"\n                disabled={registerButtonDisabled}\n                style={registerButtonStyle}\n            >\n                Register\n            </Button>\n        </Form >\n    );\n}\n\nexport default reduxForm({\n    form: 'registerForm',\n    validate: validate,\n    asyncValidate: asyncValidate,\n    asyncChangeFields: ['username']\n})(RegisterForm)","import { checkUsername } from '../../../server-communication/socketServer'\n\nexport const USERNAME_TAKEN_ERROR_MESSAGE = 'That username is already taken'\n\n\nexport const asyncValidate = (values, dispatch) => {\n    checkUsername(values.username, (response)=>{\n        if(response.status === 200){\n            throw {'username': USERNAME_TAKEN_ERROR_MESSAGE}\n        }\n        else{\n            return {'username': 'valid'}\n        }\n    })\n}","const hasPasswordMismatch = (password, confirmPassword) => {\n    return password !== confirmPassword\n}\n\nexport default (values) => {\n    const { username, password, confirmPassword } = values;\n    const errors = {}\n\n    if (!username) {\n        errors.username = \"Username cannot be empty\"\n    }\n    if (!password) {\n        errors.password = \"Password cannot be empty\"\n    }\n    if (!confirmPassword) {\n        errors.confirmPassword = \"Confirm Password cannot be empty\"\n    } else if (hasPasswordMismatch(password, confirmPassword)){\n        errors.confirmPassword = \"Confirm Password and Password must match\"\n    }\n\n    return errors\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\n\nimport RegistrationForm from '../../components/forms/RegistrationForm/RegistrationForm';\nimport registerUser from '../../actions/registerUser';\nimport { Redirect } from 'react-router-dom';\n\nclass RegisterContainer extends React.Component {\n\n    onRegistrationFailed = ({ response }) => {\n        console.log(\"Registration failed: \", response)\n    }\n\n    onFormSubmit = (formValues) => {\n        console.log(\"Registration Form Values: \", formValues)\n        this.props.registerUser(\n            formValues.username,\n            formValues.password,\n            formValues.confirmPassword,\n            this.onRegistrationFailed\n        )\n    }\n\n    renderAppropriateRedirect = (isUserLoggedIn) => {\n        if (isUserLoggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        return <Redirect to={{\n            pathname: \"/login\",\n            state: { isRedirectFromSuccessfulRegister: true }\n        }} />\n    }\n\n    render() {\n        if (this.props.isUserLoggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        if (this.props.isUserRegistered) {\n            return this.renderAppropriateRedirect(this.props.isUserLoggedIn)\n        }\n\n        return (\n            <div className=\"centered-content\">\n                <Container>\n                    <RegistrationForm onFormSubmit={this.onFormSubmit} />\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isUserRegistered: state.user.user.isRegistered,\n        isUserLoggedIn: state.user.isLoggedIn\n    }\n}\n\nexport default connect(mapStateToProps, { registerUser })(RegisterContainer);\n","import { REGISTER } from '../constants/actionConstants';\nimport { registerUser } from '../server-communication/httpServer'\n\n\nexport default (username, password, confirmPassword, onRequestRejected) => async (dispatch) => {\n    registerUser(username, password, confirmPassword,\n        (response) => dispatch({ type: REGISTER, payload: response.data }),\n        onRequestRejected\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, ListGroup } from 'react-bootstrap';\n\nconst renderRoomList = (rooms) => {\n    return rooms.map(({ roomId, name, owner }) => {\n        return (\n            <ListGroup.Item key={roomId}>\n                <Card>\n                    <Card.Body>\n                        <Card.Title>\n                            <Link to={`/rooms/${roomId}`}>{name}</Link>\n                        </Card.Title>\n                        <Card.Text>\n                            Created by: {owner}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </ListGroup.Item>\n\n        )\n    })\n}\n\nconst RoomList = (props) => {\n    return <ListGroup variant='flush'>{renderRoomList(props.rooms)}</ListGroup>\n}\n\nexport default RoomList;\n","import React from 'react';\n\nimport RoomList from '../../components/RoomList';\nimport { getAllRooms, getUser } from '../../server-communication/httpServer'\n\nclass RoomListContainer extends React.Component {\n    state = { rooms: [], users: {} }\n\n    componentDidMount() {\n        getAllRooms(this.onRoomFetchSuccess, this.onRoomFetchFail)\n    }\n\n    onRoomFetchFail = ({ response }) => {\n        console.log('RoomList fetch fail: ', response)\n    }\n\n    onRoomFetchSuccess = (response) => {\n        console.log('RoomList fetch success: ', response)\n        const rooms = response.data\n        rooms.forEach(room => getUser(room.owner, this.onUserFetchSuccess, this.onUserFetchFail))\n        this.setState({ rooms: rooms })\n    }\n\n    onUserFetchFail = ({ response }) => {\n        console.log('User fetch fail: ', response)\n    }\n\n    onUserFetchSuccess = (response) => {\n        console.log('User fetch success', response)\n        const user = response.data\n        const usersMap = { [user.userId]: user }\n        console.log(\"user map: \", usersMap)\n    }\n\n    render() {\n        return <RoomList rooms={this.state.rooms} />;\n    }\n}\n\nexport default RoomListContainer;\n","import React from 'react';\n\nconst Room = (props) => {\n    return (\n        <div>\n            Hi! I am a room\n            Name: {props.room.name}\n            Created: {props.room.createdAt}\n        </div>\n    );\n}\n\n\nexport default Room;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport '../style.scss'\n\nconst Forbidden = (props) => {\n    const msg = props.msg || 'You do not have the permissions required to view this page'\n    return (\n        <div className=\"error\">\n            {msg}\n            <Link to=\"/\">\n                <Button>Home</Button>\n            </Link>\n        </div>\n    );\n}\n\nexport default Forbidden;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nimport Room from '../../components/Room';\nimport Forbidden from '../../components/errors/Forbidden'\nimport PageNotFound from '../../components/errors/PageNotFound'\nimport { getRoom } from '../../server-communication/httpServer'\n\nclass RoomContainer extends React.Component {\n    state = {\n        room: null,\n        error: null\n    }\n\n    componentDidMount() {\n        const roomId = this.props.match.params.id;\n        getRoom(roomId, this.onRoomFetchSuccess, this.onRoomFetchFail)\n    }\n\n    onRoomFetchSuccess = (response) => {\n        this.setState({ room: response.data, error: null })\n    }\n\n    onRoomFetchFail = ({ response }) => {\n        console.log('Room fetch failed: ', response)\n        this.setState({ error: response })\n    }\n\n    renderError() {\n        const { status } = this.state.error;\n        if (status === 403) {\n            return <Forbidden msg='User not allowed'/>\n        }\n        else if (status === 404) {\n            return <PageNotFound />\n        }\n\n        return <div>Unexpected Error</div>\n    }\n\n    render() {\n        const { room, error } = this.state;\n        if (room) {\n            return <Room room={room} />;\n        }\n\n        if(error){\n            return this.renderError()\n        }\n\n        return (\n            <div className='centered-content'>\n                <h2>Please wait while your Room is loading...</h2>\n                <Spinner animation='border' size='xl' />\n            </div >\n        );\n    }\n}\n\nexport default RoomContainer;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Layout from '../Layout';\nimport LandingPage from '../LandingPage';\nimport ServerConnectionFailed from '../errors/ServerConnectionFailed';\nimport PageNotFound from '../errors/PageNotFound';\nimport LoginContainer from '../../containers/LoginContainer';\nimport RegisterContainer from '../../containers/RegisterContainer';\nimport RoomListContainer from '../../containers/RoomListContainer';\nimport RoomContainer from '../../containers/RoomContainer';\n\nimport './App.scss';\n\n\nconst App = (props) => {\n\n    const renderBody = () => {\n        if (props.serverConnectionFailed) {\n            return <ServerConnectionFailed />;\n        }\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/rooms/:id\" component={RoomContainer} />\n                <Route exact path=\"/rooms\" component={RoomListContainer} />\n                <Route exact path=\"/login\" component={LoginContainer} />\n                <Route exact path=\"/register\" component={RegisterContainer} />\n                <Route exact path=\"*\" component={PageNotFound} />\n            </Switch>\n        );\n    }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                {renderBody()}\n            </Layout>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;","import { UPDATE_USER } from '../constants/actionConstants'\n\nimport { getCurrentUser, checkLoginStatus } from '../server-communication/httpServer'\n\n\nconst actionUpdateUser = (isLoggedIn, user) => {\n    return {\n        type: UPDATE_USER,\n        payload: { isLoggedIn, user }\n    }\n}\n\nconst onGetCurrentUserSuccess = (userResponse, dispatch) => {\n    const onCheckLoginStatusSuccess = (loginResponse) => {\n        const user = userResponse.data\n        const isLoggedIn = loginResponse.data.isLoggedIn\n        dispatch(actionUpdateUser(isLoggedIn, user))\n    }\n\n    checkLoginStatus(onCheckLoginStatusSuccess, ({ response }) => console.log('Check user status fail: ', response))\n}\n\nexport default () => async dispatch => {\n    getCurrentUser(\n        (response) => onGetCurrentUserSuccess(response, dispatch),\n        ({ response }) => console.log('Get current user fail: ', response)\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport App from '../../components/App';\nimport { onServerConnected, onServerDisconnected } from '../../server-communication/socketServer'\nimport connectToServer from '../../actions/connectToServer';\nimport updateUser from '../../actions/updateUser';\nimport createNotification from '../../actions/createNotification';\n\nclass AppContainer extends React.Component {\n    state = {\n        serverConnectionFailed: false\n    }\n\n    componentDidMount() {\n        this.props.connectToServer(this.onServerConnectionFailed);\n        onServerDisconnected(this.onServerDisconnected);\n        onServerConnected(this.onServerConnected);\n        this.props.updateUser()\n    }\n\n    onServerConnectionFailed = () => {\n        this.setState({ serverConnectionFailed: true })\n    }\n\n    onServerConnected = () => {\n        this.setState({ serverConnectionFailed: false })\n    }\n\n    onServerDisconnected = () => {\n        //TODO: Use redux store for this state as it affects the whole application\n        this.setState({ serverConnectionFailed: true })\n    }\n\n    render() {\n        return (\n            <App {...this.state} />\n        );\n    }\n}\n\nexport default connect(\n    null,\n    { connectToServer, createNotification, updateUser }\n)(AppContainer);\n","import {connectToServer} from '../server-communication/socketServer'\n\nimport { CONNECT_TO_SERVER } from '../constants/actionConstants'\n\nexport default (onConnectionFailed) => async (dispatch) => {\n    /*\n        TODO: This function will dispatch connected:true even if the connection may have failed.\n            Although the onConnectionFailed callback takes care of it,\n            the connection status should be either removed from redux store and use callback(s) only\n            or remove callback(s) and read/update the connection status from/on the redux store\n    */\n    await connectToServer(onConnectionFailed);\n    dispatch({ type: CONNECT_TO_SERVER, payload: { connected: true } })\n}\n","import { CREATE_NOTIFICATION } from \"../constants/actionConstants\";\n\nexport default (title, content, actions) => {\n    let action = {\n        type: CREATE_NOTIFICATION,\n        payload: { id: \"id\", title, content, actions }\n    };\n    console.log(\"action: \");\n    console.log(action)\n    return action;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers'\nimport AppContainer from './containers/AppContainer';\n\nconst composeEnhanchers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhanchers(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}